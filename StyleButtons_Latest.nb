(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    719752,      17360]
NotebookOptionsPosition[    705916,      16906]
NotebookOutlinePosition[    706567,      16928]
CellTagsIndexPosition[    706524,      16925]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Development", "Subchapter",
 CellChangeTimes->{{3.62933038042045*^9, 3.6293303822466764`*^9}}],

Cell[CellGroupData[{

Cell["Early Stuff", "Section",
 CellChangeTimes->{{3.6272359808119507`*^9, 3.6272359845364256`*^9}}],

Cell[CellGroupData[{

Cell["sub1", "Subsection",
 CellChangeTimes->{{3.629027073298273*^9, 3.6290270737415695`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["DialogNotebook"], "Input",
 CellChangeTimes->{{3.6272254558825693`*^9, 3.6272254626010427`*^9}, {
  3.627225493028262*^9, 3.6272254980696063`*^9}}],

Cell[BoxData["DialogNotebook"], "Output",
 CellChangeTimes->{
  3.6272254636877575`*^9, {3.6274146048220987`*^9, 3.627414617984415*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CreateWindow", "[", 
   RowBox[{"DialogNotebook", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"TextCell", "[", "\"\<Enter a name: \>\"", "]"}], ",", 
      RowBox[{"InputField", "[", 
       RowBox[{
        RowBox[{"Dynamic", "[", "nm", "]"}], ",", "String"}], "]"}], ",", 
      RowBox[{"DefaultButton", "[", 
       RowBox[{"DialogReturn", "[", 
        RowBox[{"ret", "=", "nm"}], "]"}], "]"}]}], "}"}], "]"}], "]"}], 
  "\[Alpha]"}]], "Input",
 CellChangeTimes->{3.627225665211073*^9}],

Cell[BoxData[
 RowBox[{"\[Alpha]", " ", 
  TemplateBox[{FrontEndObject[
     LinkObject["iy85w_shm", 3, 1]],26,
    "FrontEndObject[LinkObject[\"iy85w_shm\", 3, 1]]","26","26"},
   "NotebookObjectUnsaved"]}]], "Output",
 CellChangeTimes->{{3.6274146049061074`*^9, 3.6274146180894256`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreatePalette", "[", 
  RowBox[{
   RowBox[{"Grid", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
   RowBox[{"WindowMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"200", ",", " ", "200"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"120", ",", " ", "120"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"WindowSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"100", ",", "100"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6272258193956423`*^9, 3.627225873282442*^9}, {
  3.6272260117165956`*^9, 3.627226014052148*^9}}],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["iy85w_shm", 3, 1]],27,
   "FrontEndObject[LinkObject[\"iy85w_shm\", 3, 1]]","27","\"Untitled-5\""},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{{3.6272258409799767`*^9, 3.6272258739619064`*^9}, 
   3.6272260151168547`*^9, {3.627414604962113*^9, 3.6274146181684337`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CreateWindow", "[", 
  RowBox[{"PaletteNotebook", "[", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Button", "[", "\"\<ddd\>\"", "]"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
    RowBox[{"WindowMargins", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"200", ",", " ", "200"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"120", ",", " ", "120"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"WindowSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"100", ",", "100"}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6272260682271547`*^9, 3.6272260703915873`*^9}, {
  3.627226120693345*^9, 3.6272261834020166`*^9}}],

Cell[BoxData[
 TemplateBox[{FrontEndObject[
    LinkObject["iy85w_shm", 3, 1]],29,
   "FrontEndObject[LinkObject[\"iy85w_shm\", 3, 1]]","29","\"Untitled-6\""},
  "NotebookObjectUnsaved"]], "Output",
 CellChangeTimes->{{3.6272261237503724`*^9, 3.627226184638833*^9}, 
   3.6272262188425627`*^9, {3.627414605019119*^9, 3.62741461823244*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"BoxData", "[", 
    RowBox[{"TagBox", "[", 
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"ButtonBox", "[", 
              RowBox[{
               RowBox[{"StyleBox", "[", 
                RowBox[{"\"\<Back\>\"", ",", "18", ",", "Bold", ",", 
                 RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
               RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                RowBox[{"FrontEndExecute", "[", 
                 RowBox[{"{", 
                  RowBox[{"FrontEndToken", "[", 
                   RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPagePrevious\>\""}], "]"}], "}"}], "]"}]}], 
               ",", 
               RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"150", ",", "Full"}], "}"}]}], ",", 
               RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}], 
             ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"ButtonBox", "[", 
              RowBox[{
               RowBox[{"StyleBox", "[", 
                RowBox[{"\"\<Home\>\"", ",", "18", ",", "Bold", ",", 
                 RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
               RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                RowBox[{"FrontEndExecute", "[", 
                 RowBox[{"{", 
                  RowBox[{"FrontEndToken", "[", 
                   RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
               RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"150", ",", "Full"}], "}"}]}], ",", 
               RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}], 
             ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"ButtonBox", "[", 
              RowBox[{
               RowBox[{"StyleBox", "[", 
                RowBox[{"\"\<Next\>\"", ",", "18", ",", "Bold", ",", 
                 RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
               RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                RowBox[{"FrontEndExecute", "[", 
                 RowBox[{"{", 
                  RowBox[{"FrontEndToken", "[", 
                   RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
               RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"150", ",", "Full"}], "}"}]}], ",", 
               RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}], 
             ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
         "}"}], ",", 
        RowBox[{"AutoDelete", "\[Rule]", "False"}], ",", 
        RowBox[{"GridBoxFrame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Columns", "\[Rule]", "None"}], ",", 
           RowBox[{"Rows", "\[Rule]", "None"}]}], "}"}]}], ",", 
        RowBox[{"GridBoxItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Columns", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"Rows", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "Automatic", "}"}], "}"}]}]}], "}"}]}]}], "]"}], 
      ",", "Grid"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.627226236148062*^9, 3.627226239095024*^9}, {
  3.6272263028698816`*^9, 3.6272263514741735`*^9}, {3.6272263949730806`*^9, 
  3.627226427942997*^9}, {3.627226474409715*^9, 3.6272265982700243`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      ButtonBox[
       StyleBox["Back",
        StripOnInput->False,
        FontSize->18,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>FrontEndExecute[{
          FrontEndToken[
           FrontEnd`InputNotebook[], "ScrollPagePrevious"]}],
       Evaluator->None,
       ImageSize->{150, Full},
       Method->"Preemptive"],
      Alignment->{Left, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      ButtonBox[
       StyleBox["Home",
        StripOnInput->False,
        FontSize->18,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>FrontEndExecute[{
          FrontEndToken[
           FrontEnd`InputNotebook[], "ScrollPageNext"]}],
       Enabled->True,
       Evaluator->None,
       ImageSize->{150, Full},
       Method->"Preemptive"],
      Alignment->{Center, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      ButtonBox[
       StyleBox["Next",
        StripOnInput->False,
        FontSize->18,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>FrontEndExecute[{
          FrontEndToken[
           FrontEnd`InputNotebook[], "ScrollPageNext"]}],
       Enabled->True,
       Evaluator->None,
       ImageSize->{150, Full},
       Method->"Preemptive"],
      Alignment->{Right, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxFrame->{},
   GridBoxItemSize->{}],
  Grid]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6274146182424407`*^9}],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"BoxData", "[", 
    RowBox[{"TagBox", "[", 
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"RowBox", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"StyleBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], 
                   "]"}], ",", 
                  RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"StyleBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], 
                   "]"}], ",", 
                  RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.25"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1.75"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.25", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
                    RowBox[{"PolygonBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1.5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"GrayLevel", "[", "1", "]"}], "]"}], ",", 
                    RowBox[{"RectangleBox", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.4", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6", ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}], 
                    "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"ButtonBox", "[", 
              RowBox[{
               RowBox[{"StyleBox", "[", 
                RowBox[{"\"\<Home\>\"", ",", "18", ",", "Bold", ",", 
                 RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
               RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                RowBox[{"FrontEndExecute", "[", 
                 RowBox[{"{", 
                  RowBox[{"FrontEndToken", "[", 
                   RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
               RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"150", ",", "Full"}], "}"}]}], ",", 
               RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
               RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}], 
             ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"RowBox", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.25"}], ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1.75"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1.25", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
                    RowBox[{"PolygonBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.5", ",", "1.5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"GrayLevel", "[", "1", "]"}], "]"}], ",", 
                    RowBox[{"RectangleBox", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.4", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0.6", ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}], 
                    "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"StyleBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], 
                   "]"}], ",", 
                  RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"StyleBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "0"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], 
                   "]"}], ",", 
                  RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], 
                 "]"}]}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
         "}"}], ",", 
        RowBox[{"AutoDelete", "\[Rule]", "False"}], ",", 
        RowBox[{"GridBoxFrame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Columns", "\[Rule]", "None"}], ",", 
           RowBox[{"Rows", "\[Rule]", "None"}]}], "}"}]}], ",", 
        RowBox[{"GridBoxItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Columns", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"Rows", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "Automatic", "}"}], "}"}]}]}], "}"}]}]}], "]"}], 
      ",", "Grid"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.627226698492798*^9, 3.6272267532872095`*^9}, {
  3.6272267946086693`*^9, 3.627226851339735*^9}, {3.6272268943032804`*^9, 
  3.6272269244132943`*^9}, {3.627226960801469*^9, 3.627227051080723*^9}, {
  3.6272270962017016`*^9, 3.627227100408495*^9}, {3.6272276604181414`*^9, 
  3.6272278310110545`*^9}, {3.627227901808103*^9, 3.6272279331995907`*^9}, {
  3.627227963988056*^9, 3.6272280361119795`*^9}, {3.6272282000230913`*^9, 
  3.6272282553538656`*^9}, {3.627228315840254*^9, 3.627228352559655*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      RowBox[{
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{10, 0}],
        CacheGraphics->False], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{0, 0}, {-1, 0.5}, {0, 1}}]},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"], 
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{10, 0}],
        CacheGraphics->False], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{-0.25, 1}, {0.5, 1.75}, {1.25, 1}}], 
          PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0.5, 1.5}, {0, 1}, {0, 0}}], 
          {FaceForm[GrayLevel[1]], RectangleBox[{0.4, 0}, {0.6, 0.5}]}},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"]}],
      Alignment->{Left, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      ButtonBox[
       StyleBox["Home",
        StripOnInput->False,
        FontSize->18,
        FontWeight->Bold],
       Appearance->Automatic,
       ButtonFunction:>FrontEndExecute[{
          FrontEndToken[
           FrontEnd`InputNotebook[], "ScrollPageNext"]}],
       Enabled->True,
       Evaluator->None,
       ImageSize->{150, Full},
       Method->"Preemptive"],
      Alignment->{Center, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      RowBox[{
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{-0.25, 1}, {0.5, 1.75}, {1.25, 1}}], 
          PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0.5, 1.5}, {0, 1}, {0, 0}}], 
          {FaceForm[GrayLevel[1]], RectangleBox[{0.4, 0}, {0.6, 0.5}]}},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"], 
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{10, 0}],
        CacheGraphics->False], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{0, 0}, {-1, 0.5}, {0, 1}}]},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"], 
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{10, 0}],
        CacheGraphics->False]}],
      Alignment->{Right, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxFrame->{},
   GridBoxItemSize->{}],
  Grid]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6274146182794447`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToBoxes", "@", 
  RowBox[{"Spacer", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.627226908440681*^9, 3.627226913473025*^9}}],

Cell[BoxData[
 RowBox[{"InterpretationBox", "[", 
  RowBox[{
   RowBox[{"StyleBox", "[", 
    RowBox[{
     RowBox[{"GraphicsBox", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"5", ",", "0"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], "]"}], ",", 
     RowBox[{"\<\"CacheGraphics\"\>", "\[Rule]", "False"}]}], "]"}], ",", 
   InterpretationBox[
    StyleBox[
     GraphicsBox[{},
      BaselinePosition->Baseline,
      ImageSize->{5, 0}],
     CacheGraphics->False],
    Spacer[5]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.627226914148466*^9, {3.6274146051131277`*^9, 3.627414618294446*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Thickness", "[", ".1", "]"}], ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", ".25"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".5", ",", "1.75"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".5", ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FaceForm", "@", "White"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{".4", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{".6", ",", ".5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
     "}"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.627227124477497*^9, 3.6272273231497397`*^9}, {
  3.6272273917483816`*^9, 3.627227626890859*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], LineBox[{{-0.25, 1}, {0.5, 1.75}, {1.25, 1}}], 
    PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0.5, 1.5}, {0, 1}, {0, 0}}], 
    {FaceForm[GrayLevel[1]], RectangleBox[{0.4, 0}, {0.6, 0.5}]}},
   ImageSize->{30, 30}],
  Appearance->Automatic,
  ButtonFunction:>{},
  Evaluator->None,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6272271694213653`*^9, 3.6272273241023664`*^9}, {
  3.627227431046488*^9, 3.6272275309078503`*^9}, {3.6272275773689504`*^9, 
  3.6272276271610394`*^9}, {3.627414605125129*^9, 3.627414618301447*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["sub2", "Subsection",
 CellChangeTimes->{{3.6290270844717474`*^9, 3.629027084907031*^9}}],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"BoxData", "[", 
    RowBox[{"TagBox", "[", 
     RowBox[{
      RowBox[{"GridBox", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"ItemBox", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"StyleBox", "[", 
              RowBox[{
               RowBox[{"GraphicsBox", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"10", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], "]"}],
                ",", 
               RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], "]"}],
              ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Left", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"RowBox", "[", 
              RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", "\n", "   ", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], "]"}],
                     ",", " ", 
                    RowBox[{"RectangleBox", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "0"}], "}"}], "]"}], ",", " ", 
                    RowBox[{"RectangleBox", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "0.1"}], ",", " ", "0.7"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1"}], "}"}]}], "]"}]}], "}"}], 
                    ",", " ", "\n", "   ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", " ", "0.85", ",", " ", "0.85"}], "]"}], 
                    "]"}], ",", " ", 
                    RowBox[{"RectangleBox", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.1", ",", " ", "0.1"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.9", ",", " ", "0.9"}], "}"}]}], "]"}], ",", 
                    " ", 
                    RowBox[{"InsetBox", "[", "\n", "     ", 
                    RowBox[{
                    RowBox[{"StyleBox", "[", 
                    RowBox[{"\"\<CODE\>\"", ",", "\n", "      ", 
                    RowBox[{"StripOnInput", "->", "False"}], ",", "\n", 
                    "      ", 
                    RowBox[{"TextAlignment", "->", "Left"}], ",", "\n", 
                    "      ", 
                    RowBox[{"FontFamily", "->", "\"\<Arial Black\>\""}], ",", 
                    "\n", "      ", 
                    RowBox[{"FontSize", "->", "12"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"0.15", ",", " ", "0.5"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", "\n", "  ", 
                    RowBox[{"AspectRatio", "->", 
                    RowBox[{"NCache", "[", "\n", "    ", 
                    RowBox[{
                    RowBox[{"Rational", "[", 
                    RowBox[{"3", ",", " ", "8"}], "]"}], ",", " ", "0.375"}], 
                    "]"}]}], ",", "\n", "  ", 
                    RowBox[{"ImageSize", "->", 
                    RowBox[{"{", 
                    RowBox[{"80", ",", " ", "30"}], "}"}]}]}], "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"100", ",", "40"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"ButtonBox", "[", 
                 RowBox[{
                  RowBox[{"GraphicsBox", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
                    RowBox[{"LineBox", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                    ",", 
                    RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"20", ",", "20"}], "}"}]}], ",", 
                    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], 
                   "]"}], ",", 
                  RowBox[{"ButtonFunction", "\[RuleDelayed]", 
                   RowBox[{"FrontEndExecute", "[", 
                    RowBox[{"{", 
                    RowBox[{"FrontEndToken", "[", 
                    RowBox[{
                    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                    "\"\<ScrollPageNext\>\""}], "]"}], "}"}], "]"}]}], ",", 
                  RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"30", ",", "30"}], "}"}]}], ",", 
                  RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
                  RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
                 "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}],
               "]"}], ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}], ",", 
           RowBox[{"ItemBox", "[", 
            RowBox[{
             RowBox[{"StyleBox", "[", 
              RowBox[{
               RowBox[{"GraphicsBox", "[", 
                RowBox[{
                 RowBox[{"{", "}"}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"10", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], "]"}],
                ",", 
               RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], "]"}],
              ",", 
             RowBox[{"ItemSize", "\[Rule]", 
              RowBox[{"Scaled", "[", 
               RowBox[{"1", "/", "3"}], "]"}]}], ",", 
             RowBox[{"Alignment", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Right", ",", "Center"}], "}"}]}], ",", 
             RowBox[{"StripOnInput", "\[Rule]", "False"}]}], "]"}]}], "}"}], 
         "}"}], ",", 
        RowBox[{"AutoDelete", "\[Rule]", "False"}], ",", 
        RowBox[{"GridBoxFrame", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Columns", "\[Rule]", "None"}], ",", 
           RowBox[{"Rows", "\[Rule]", "None"}]}], "}"}]}], ",", 
        RowBox[{"GridBoxItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Columns", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "Automatic", "}"}], "}"}]}], ",", 
           RowBox[{"Rows", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", "Automatic", "}"}], "}"}]}]}], "}"}]}]}], "]"}], 
      ",", "Grid"}], "]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6272289135124655`*^9, 3.627228931568465*^9}, {
  3.6272289617134895`*^9, 3.6272290471304016`*^9}, {3.6272302818351884`*^9, 
  3.627230334852419*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{10, 0}],
       CacheGraphics->False],
      Alignment->{Left, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      RowBox[{
       ButtonBox[
        GraphicsBox[{
          {FaceForm[RGBColor[1, 0, 0]], RectangleBox[{0, 0}], 
           RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
          {FaceForm[RGBColor[1, 0.85, 0.85]], 
           RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
            StyleBox["CODE",
             StripOnInput->False,
             TextAlignment->Left,
             FontFamily->"Arial Black",
             FontSize->12], {0.15, 0.5}, {-1, 0}]}},
         AspectRatio->NCache[
           Rational[3, 8], 0.375],
         ImageSize->{80, 30}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{100, 40},
        Method->"Preemptive"], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"], 
       ButtonBox[
        GraphicsBox[
         {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
         BaselinePosition->Center,
         ImageSize->{20, 20}],
        Appearance->Automatic,
        ButtonFunction:>FrontEndExecute[{
           FrontEndToken[
            FrontEnd`InputNotebook[], "ScrollPageNext"]}],
        Enabled->True,
        Evaluator->None,
        ImageSize->{30, 30},
        Method->"Preemptive"]}],
      Alignment->{Center, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{10, 0}],
       CacheGraphics->False],
      Alignment->{Right, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxFrame->{},
   GridBoxItemSize->{}],
  Grid]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.6274146183194485`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Item", "[", 
      RowBox[{
       RowBox[{"Spacer", "[", "1", "]"}], ",", 
       RowBox[{"ItemSize", "\[Rule]", 
        RowBox[{"Scaled", "[", 
         RowBox[{"1", "/", "3"}], "]"}]}], ",", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Left", ",", "Center"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Item", "[", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Button", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Disk", "[", "]"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Button", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Rectangle", "[", "]"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Button", "[", 
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"Polygon", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{".5", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"30", ",", "30"}], "}"}]}]}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "}"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Spacings", "\[Rule]", "4"}]}], "\[IndentingNewLine]", "]"}],
        ",", 
       RowBox[{"ItemSize", "\[Rule]", 
        RowBox[{"Scaled", "[", 
         RowBox[{"1", "/", "3"}], "]"}]}], ",", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Center", ",", "Center"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Item", "[", 
      RowBox[{
       RowBox[{"Spacer", "[", "3", "]"}], ",", 
       RowBox[{"ItemSize", "\[Rule]", 
        RowBox[{"Scaled", "[", 
         RowBox[{"1", "/", "3"}], "]"}]}], ",", 
       RowBox[{"Alignment", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.6272290709672422`*^9, 3.627229406930637*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Alignment->{Left, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      TagBox[GridBox[{
         {
          ButtonBox[
           GraphicsBox[DiskBox[{0, 0}],
            ImageSize->{30, 30}],
           Appearance->Automatic,
           ButtonFunction:>{},
           Evaluator->None,
           Method->"Preemptive"], 
          ButtonBox[
           GraphicsBox[RectangleBox[{0, 0}],
            ImageSize->{30, 30}],
           Appearance->Automatic,
           ButtonFunction:>{},
           Evaluator->None,
           Method->"Preemptive"], 
          ButtonBox[
           GraphicsBox[PolygonBox[{{0, 0}, {1, 0}, {0.5, 2}}],
            ImageSize->{30, 30}],
           Appearance->Automatic,
           ButtonFunction:>{},
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{4}}}],
       "Grid"],
      Alignment->{Center, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{3, 0}],
        CacheGraphics->False],
       Spacer[3]],
      Alignment->{Right, Center},
      ItemSize->Scaled[
        Rational[1, 3]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6272290810949755`*^9, {3.6272291233100243`*^9, 3.6272294071667924`*^9}, {
   3.6274146051701336`*^9, 3.6274146183384504`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FaceForm", "@", "Red"}], ",", 
     RowBox[{"Rectangle", "[", "]"}], ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", ".1"}], ",", ".7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
     RowBox[{"FaceForm", "@", "LightRed"}], ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{".1", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<CODE\>\"", ",", "12", ",", 
         RowBox[{"TextAlignment", "\[Rule]", "Left"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial Black\>\""}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{".15", ",", ".5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"80", ",", "30"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"30", "/", "80"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.627229443916215*^9, 3.6272296990607643`*^9}, {
  3.627229787330923*^9, 3.627229825944583*^9}, {3.627229887161264*^9, 
  3.627229966919856*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {FaceForm[RGBColor[1, 0, 0]], RectangleBox[{0, 0}], 
    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
   {FaceForm[RGBColor[1, 0.85, 0.85]], RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
    InsetBox[
     StyleBox["\<\"CODE\"\>",
      StripOnInput->False,
      TextAlignment->Left,
      FontFamily->"Arial Black",
      FontSize->12], {0.15, 0.5}, {-1, 0}]}},
  AspectRatio->NCache[
    Rational[3, 8], 0.375],
  ImageSize->{80, 30}]], "Output",
 CellChangeTimes->{
  3.627229451421201*^9, {3.6272294822116623`*^9, 3.6272295083660493`*^9}, {
   3.6272295408216023`*^9, 3.6272295636827946`*^9}, {3.6272295938988733`*^9, 
   3.627229699495045*^9}, 3.6272297875770903`*^9, {3.6272298217107677`*^9, 
   3.6272298261327124`*^9}, {3.6272298889880705`*^9, 3.627229967531266*^9}, {
   3.627414605179135*^9, 3.6274146183454514`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ActionMenu", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"\"\<Insert Cell\>\"", ",", " ", "14", ",", " ", 
     RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
    "]"}], ",", " ", 
   RowBox[{"{", "\n", "\t", 
    RowBox[{
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"FaceForm", " ", "@", " ", "Red"}], ",", " ", 
               RowBox[{"Rectangle", "[", "]"}], ",", " ", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".1"}], ",", ".7"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", " ", "\n", 
               "\t\t\t", 
               RowBox[{"FaceForm", " ", "@", " ", "Red"}], ",", " ", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{".1", ",", ".1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", " ", "\n", 
               "\t\t\t", 
               RowBox[{"Text", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<CODE\>\"", ",", " ", "12", ",", " ", 
                   RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Left"}], 
                   ",", " ", 
                   RowBox[{"FontColor", " ", "\[Rule]", " ", "White"}], ",", 
                   " ", 
                   RowBox[{
                   "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\n", 
                 "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{".15", ",", ".5"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "\n", "\t\t\t", 
                "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"80", ",", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
             RowBox[{"AspectRatio", "\[Rule]", 
              RowBox[{"30", "/", "80"}]}]}], "\n", "\t\t", "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Spacer", "[", "1", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Alt + 1\>\"", ",", " ", "12", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}]}], "\n", "\t\t", "}"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"Alignment", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", "]"}], 
      "\n", "\t", "\[RuleDelayed]", "\n", "\t", 
      RowBox[{"Print", "[", "\"\<hi\>\"", "]"}]}], ",", "\[IndentingNewLine]",
      "\t", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"FaceForm", " ", "@", " ", "Blue"}], ",", " ", 
               RowBox[{"Rectangle", "[", "]"}], ",", " ", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".1"}], ",", ".7"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", " ", "\n", 
               "\t\t\t", 
               RowBox[{"FaceForm", " ", "@", " ", "Blue"}], ",", " ", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{".1", ",", ".1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", " ", "\n", 
               "\t\t\t", 
               RowBox[{"Text", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<READ\>\"", ",", " ", "12", ",", " ", 
                   RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Left"}], 
                   ",", " ", 
                   RowBox[{"FontColor", " ", "\[Rule]", " ", "White"}], ",", 
                   " ", 
                   RowBox[{
                   "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\n", 
                 "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{".15", ",", ".5"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "\n", "\t\t\t", 
                "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"80", ",", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
             RowBox[{"AspectRatio", "\[Rule]", 
              RowBox[{"30", "/", "80"}]}]}], "\n", "\t\t", "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Spacer", "[", "1", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Alt + 2\>\"", ",", " ", "12", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}]}], "\n", "\t\t", "}"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"Alignment", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", "]"}], 
      "\n", "\t", "\[RuleDelayed]", "\n", "\t", 
      RowBox[{"Print", "[", "\"\<hi\>\"", "]"}]}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"Grid", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{"FaceForm", " ", "@", " ", 
                RowBox[{"Darker", " ", "@", " ", 
                 RowBox[{"Darker", " ", "@", " ", "Green"}]}]}], ",", " ", 
               RowBox[{"Rectangle", "[", "]"}], ",", " ", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".1"}], ",", ".7"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", " ", "\n", 
               "\t\t\t", 
               RowBox[{"FaceForm", " ", "@", " ", 
                RowBox[{"Darker", " ", "@", " ", 
                 RowBox[{"Darker", " ", "@", " ", "Green"}]}]}], ",", " ", 
               RowBox[{"Rectangle", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{".1", ",", ".1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", " ", "\n", 
               "\t\t\t", 
               RowBox[{"Text", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{"\"\<TRY\>\"", ",", " ", "12", ",", " ", 
                   RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Left"}], 
                   ",", " ", 
                   RowBox[{"FontColor", " ", "\[Rule]", " ", "White"}], ",", 
                   " ", 
                   RowBox[{
                   "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\n", 
                 "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{".15", ",", ".5"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "\n", "\t\t\t", 
                "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"80", ",", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
             RowBox[{"AspectRatio", "\[Rule]", 
              RowBox[{"30", "/", "80"}]}]}], "\n", "\t\t", "]"}], ",", "\n", 
           "\t\t", 
           RowBox[{"Spacer", "[", "1", "]"}], ",", "\n", "\t\t", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Alt + 2\>\"", ",", " ", "12", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}]}], "\n", "\t\t", "}"}], "}"}], ",", "\n", "\t\t", 
        RowBox[{"Alignment", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", "]"}], 
      "\n", "\t", "\[RuleDelayed]", "\n", "\t", 
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"FrontEnd`NotebookWrite", "[", 
        RowBox[{
         RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
         RowBox[{"Cell", "[", 
          RowBox[{"\"\<\>\"", ",", " ", "\"\<Challenge\>\""}], "]"}]}], "]"}],
        "]"}]}]}], "\n", "}"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.6272303632192636`*^9, 3.6272304079209776`*^9}, {
  3.6272304455924635`*^9, 3.6272304723252296`*^9}, {3.6272305604788065`*^9, 
  3.6272305878760166`*^9}, {3.6272306182455077`*^9, 3.627230689694995*^9}, {
  3.627230734476754*^9, 3.627230758032405*^9}, {3.6272308050179634`*^9, 
  3.627231021877412*^9}, {3.6272310806204486`*^9, 3.6272312484902787`*^9}, {
  3.627231279199685*^9, 3.627231419079811*^9}, {3.6272314553388987`*^9, 
  3.6272314773645353`*^9}, {3.6272315196762824`*^9, 3.627231574935005*^9}, {
  3.6272319185581703`*^9, 3.627231924037819*^9}, {3.6272320266169834`*^9, 
  3.627232048586584*^9}}],

Cell[BoxData[
 ActionMenuBox[
  StyleBox["\<\"Insert Cell\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14], {
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[1, 0, 0]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[1, 0, 0]], RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
         InsetBox[
          StyleBox["\<\"CODE\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[3, 8], 0.375],
       ImageSize->{80, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 1\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>Print["hi"], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[0, 0, 1]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[0, 0, 1]], RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
         InsetBox[
          StyleBox["\<\"READ\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[3, 8], 0.375],
       ImageSize->{80, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 2\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>Print["hi"], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[0, 
          NCache[
           Rational[4, 9], 0.4444444444444444], 0]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[0, 
          NCache[
           Rational[4, 9], 0.4444444444444444], 0]], 
         RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
          StyleBox["\<\"TRY\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[3, 8], 0.375],
       ImageSize->{80, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 2\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>FrontEndExecute[
   FrontEnd`NotebookWrite[
    FrontEnd`InputNotebook[], 
    Cell["", "Challenge"]]]}]], "Output",
 CellChangeTimes->{{3.6272304003889647`*^9, 3.6272304088095655`*^9}, {
   3.6272304471164713`*^9, 3.627230473591062*^9}, {3.6272305786738925`*^9, 
   3.6272305884553957`*^9}, {3.627230622685462*^9, 3.6272306598751707`*^9}, 
   3.627230691163967*^9, 3.6272307592532096`*^9, 3.6272310496608763`*^9, 
   3.6272311693396807`*^9, {3.627231223147436*^9, 3.6272312492778053`*^9}, {
   3.6272313038070374`*^9, 3.6272313354412236`*^9}, {3.6272313926902657`*^9, 
   3.6272314206268387`*^9}, 3.627231480709758*^9, 3.6272315402979794`*^9, 
   3.6272315762428665`*^9, 3.6272320523240633`*^9, 3.6272479129117336`*^9, 
   3.627330217870239*^9, 3.6274025567034073`*^9, {3.6274146042580423`*^9, 
   3.6274146183694534`*^9}, 3.6274156053501415`*^9, 3.6274174992255106`*^9, 
   3.6274180467522573`*^9, 3.627657096924985*^9, 3.6284379875198574`*^9, 
   3.6286830324077344`*^9, 3.628803109762215*^9, 3.628933381699073*^9, 
   3.6289443257672567`*^9, 3.628945270895522*^9, 3.6289662992755847`*^9, 
   3.628968238740463*^9, 3.6289698636103888`*^9, 3.6290296531267056`*^9, 
   3.629038338878315*^9, 3.6290401025825553`*^9, 3.6290404543602915`*^9, 
   3.6291147245928345`*^9, 3.6291159831671443`*^9, 3.629122689040284*^9, 
   3.6291227859039364`*^9, 3.6291228171423798`*^9, 3.6291230148160377`*^9, 
   3.6292914491928635`*^9, 3.629309689036406*^9, 3.6293108290508165`*^9, 
   3.6293225295228195`*^9, 3.6293330956910405`*^9, 3.6293350878495817`*^9, 
   3.6293357672229495`*^9, 3.6295744947113323`*^9, 3.6295846817839427`*^9, 
   3.629628285739273*^9, 3.6296285591798425`*^9, 3.629630879028884*^9, 
   3.6296339022127237`*^9, 3.629635679364421*^9, 3.629638743421796*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"FaceForm", " ", "@", " ", 
           RowBox[{"Darker", " ", "@", " ", 
            RowBox[{"Darker", " ", "@", " ", "Green"}]}]}], ",", " ", 
          RowBox[{"Rectangle", "[", "]"}], ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".1"}], ",", ".7"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", " ", "\n", 
          "\t\t\t", 
          RowBox[{"FaceForm", " ", "@", " ", 
           RowBox[{"Darker", " ", "@", " ", 
            RowBox[{"Darker", " ", "@", " ", "Green"}]}]}], ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".1", ",", ".1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", " ", "\n", 
          "\t\t\t", 
          RowBox[{"Text", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<TRY\>\"", ",", " ", "12", ",", " ", 
              RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Left"}], ",", 
              " ", 
              RowBox[{"FontColor", " ", "\[Rule]", " ", "White"}], ",", " ", 
              RowBox[{
              "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
             "]"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{".15", ",", ".5"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "\n", "\t\t\t", 
           "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"80", ",", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"AspectRatio", "\[Rule]", 
         RowBox[{"30", "/", "80"}]}]}], "\n", "\t\t", "]"}], ",", "\n", 
      "\t\t", 
      RowBox[{"Spacer", "[", "1", "]"}], ",", "\n", "\t\t", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Alt + 2\>\"", ",", " ", "12", ",", " ", 
        RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
       "]"}]}], "\n", "\t\t", "}"}], "}"}], ",", "\n", "\t\t", 
   RowBox[{"Alignment", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", "]"}], "\n", 
 RowBox[{"\t", 
  RowBox[{"\[RuleDelayed]", "\n", "\t", 
   RowBox[{"FrontEndExecute", "[", 
    RowBox[{"FrontEnd`NotebookWrite", "[", 
     RowBox[{
      RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
      RowBox[{"Cell", "[", 
       RowBox[{"\"\<\>\"", ",", " ", "\"\<Challenge\>\""}], "]"}]}], "]"}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{"&", " ", "/@", " ", 
  RowBox[{"{", 
   RowBox[{"{", "Red", "}"}]}]}]}], "Code",
 CellChangeTimes->{{3.6272321182514324`*^9, 3.6272321334885645`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{
       {FaceForm[RGBColor[0, 
         NCache[
          Rational[4, 9], 0.4444444444444444], 0]], RectangleBox[{0, 0}], 
        RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
       {FaceForm[RGBColor[0, 
         NCache[
          Rational[4, 9], 0.4444444444444444], 0]], 
        RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
         StyleBox["\<\"TRY\"\>",
          StripOnInput->False,
          TextAlignment->Left,
          FontFamily->"Arial Black",
          FontSize->12,
          FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
      AspectRatio->NCache[
        Rational[3, 8], 0.375],
      ImageSize->{80, 30}], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     StyleBox["\<\"Alt + 2\"\>",
      StripOnInput->False,
      FontFamily->"Arial Black",
      FontSize->12]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.6272479130558276`*^9, 3.6273302179733067`*^9, 3.627402556783416*^9, {
   3.627414604341051*^9, 3.627414618382455*^9}, 3.6274156054331503`*^9, 
   3.627417499250513*^9, 3.62741804677626*^9, 3.6276570970410643`*^9, 
   3.6284379876479425`*^9, 3.6286830325168066`*^9, 3.628803109893303*^9, 
   3.628933381820154*^9, 3.628944325811281*^9, 3.6289452709875827`*^9, 
   3.6289662993616424`*^9, 3.6289682388605437`*^9, 3.6289698637204638`*^9, 
   3.629029653244785*^9, 3.629038338998394*^9, 3.6290401027196445`*^9, 
   3.6290404544783697`*^9, 3.6291147247179184`*^9, 3.629115983201168*^9, 
   3.6291226891603622`*^9, 3.629122786020013*^9, 3.629122817255454*^9, 
   3.629123014948127*^9, 3.629291449306939*^9, 3.6293096891925106`*^9, 
   3.629310829180902*^9, 3.6293225296378965`*^9, 3.6293330958071165`*^9, 
   3.6293350879616566`*^9, 3.6293357673450303`*^9, 3.6295744947763386`*^9, 
   3.629584681869857*^9, 3.629628285868359*^9, 3.629628559307925*^9, 
   3.6296308791479626`*^9, 3.6296339022977324`*^9, 3.6296356794544296`*^9, 
   3.6296387435098047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToExpression", "@", 
  RowBox[{"GraphicsBox", "[", 
   RowBox[{
    RowBox[{"{", "\n", "   ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "[", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", " ", "0", ",", " ", "0"}], "]"}], "]"}], ",", " ", 
        RowBox[{"RectangleBox", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", " ", "0"}], "}"}], "]"}], ",", " ", 
        RowBox[{"RectangleBox", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "0.1"}], ",", " ", "0.7"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", " ", "1"}], "}"}]}], "]"}]}], "}"}], ",", " ", 
      "\n", "   ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FaceForm", "[", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", " ", "0.85", ",", " ", "0.85"}], "]"}], "]"}], 
        ",", " ", 
        RowBox[{"RectangleBox", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0.1", ",", " ", "0.1"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0.9", ",", " ", "0.9"}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"InsetBox", "[", "\n", "     ", 
         RowBox[{
          RowBox[{"StyleBox", "[", 
           RowBox[{"\"\<\\<\\\"CODE\\\"\\>\>\"", ",", "\n", "      ", 
            RowBox[{"StripOnInput", "->", "False"}], ",", "\n", "      ", 
            RowBox[{"TextAlignment", "->", "Left"}], ",", "\n", "      ", 
            RowBox[{"FontFamily", "->", "\"\<Arial Black\>\""}], ",", "\n", 
            "      ", 
            RowBox[{"FontSize", "->", "12"}]}], "]"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"0.15", ",", " ", "0.5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", " ", "0"}], "}"}]}], "]"}]}], "}"}]}], 
     "}"}], ",", "\n", "  ", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"NCache", "[", "\n", "    ", 
      RowBox[{
       RowBox[{"Rational", "[", 
        RowBox[{"3", ",", " ", "8"}], "]"}], ",", " ", "0.375"}], "]"}]}], 
    ",", "\n", "  ", 
    RowBox[{"ImageSize", "->", 
     RowBox[{"{", 
      RowBox[{"80", ",", " ", "30"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.627230243458418*^9, 3.627230254264866*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {FaceForm[RGBColor[1, 0, 0]], RectangleBox[{0, 0}], 
    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
   {FaceForm[RGBColor[1, 0.85, 0.85]], RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
    InsetBox[
     StyleBox["\<\"CODE\"\>",
      StripOnInput->False,
      TextAlignment->Left,
      FontFamily->"Arial Black",
      FontSize->12], {0.15, 0.5}, {-1, 0}]}},
  AspectRatio->NCache[
    Rational[3, 8], 0.375],
  ImageSize->{80, 30}]], "Output",
 CellChangeTimes->{
  3.6272302547591887`*^9, {3.6274146053181486`*^9, 3.627414618475464*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FaceForm", "@", "Blue"}], ",", 
     RowBox[{"Rectangle", "[", "]"}], ",", 
     RowBox[{"FaceForm", "@", "Blue"}], ",", 
     RowBox[{"Rectangle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{".1", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<READ\>\"", ",", "12", ",", 
         RowBox[{"FontColor", "\[Rule]", "White"}], ",", 
         RowBox[{"TextAlignment", "\[Rule]", "Left"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Arial Black\>\""}]}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{".15", ",", ".5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"80", ",", "30"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"30", "/", "80"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6272297128574386`*^9, 3.6272298065717163`*^9}, {
  3.6272298381987314`*^9, 3.6272298818347225`*^9}, {3.6272299785285764`*^9, 
  3.6272300055325155`*^9}, {3.62723004436733*^9, 3.627230117088209*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {FaceForm[RGBColor[0, 0, 1]], RectangleBox[{0, 0}]}, 
   {FaceForm[RGBColor[0, 0, 1]], RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
    InsetBox[
     StyleBox["\<\"READ\"\>",
      StripOnInput->False,
      TextAlignment->Left,
      FontFamily->"Arial Black",
      FontSize->12,
      FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
  AspectRatio->NCache[
    Rational[3, 8], 0.375],
  ImageSize->{80, 30}]], "Output",
 CellChangeTimes->{{3.627229720321393*^9, 3.627229807443288*^9}, {
  3.627229838487917*^9, 3.6272298821129074`*^9}, {3.627229998795038*^9, 
  3.6272300063650684`*^9}, {3.6272300509366856`*^9, 3.627230118362049*^9}, {
  3.6274146053271494`*^9, 3.627414618483465*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Progress", "Section",
 CellChangeTimes->{{3.628966021490733*^9, 3.6289660231608424`*^9}}],

Cell[CellGroupData[{

Cell["sub3", "Subsection",
 CellChangeTimes->{{3.6290270923229856`*^9, 3.629027093133523*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicBox", "[", "\n", "               ", 
  RowBox[{"ToBoxes", "[", "\n", "                ", 
   RowBox[{
    RowBox[{"Refresh", "[", "\n", "                 ", 
     RowBox[{
      RowBox[{"Overlay", "[", 
       RowBox[{
        RowBox[{"{", "\n", "                   ", "\n", "                   ", 
         RowBox[{
          RowBox[{"ProgressIndicator", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                 "}"}], "]"}], " ", "+", " ", "1"}], ")"}], "/", "\n", 
             "                    ", 
             RowBox[{"CurrentValue", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
               "}"}], "]"}]}], ",", " ", 
            RowBox[{"ImageSize", " ", "->", " ", 
             RowBox[{"{", 
              RowBox[{"50", ",", " ", "20"}], "}"}]}]}], "]"}], ",", " ", 
          "\n", "                   ", 
          RowBox[{"Style", "[", "\n", "                    ", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"CurrentValue", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                  "}"}], "]"}], " ", "+", " ", "1"}], ",", " ", "\"\</\>\"", 
               ",", " ", "\n", "                    ", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                 "}"}], "]"}]}], "}"}], "]"}], ",", " ", "14", ",", " ", 
            RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", "\n", 
            "                    ", 
            RowBox[{"FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}], 
           "]"}]}], "}"}], ",", " ", 
        RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ", 
      RowBox[{"UpdateInterval", " ", "->", " ", "0.5"}]}], "]"}], ",", " ", 
    "\n", "                ", "StandardForm"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.6289660254063425`*^9, 3.62896602541035*^9}}],

Cell[BoxData[
 RowBox[{"DynamicBox", "[", 
  RowBox[{"ToBoxes", "[", 
   RowBox[{
    RowBox[{"Refresh", "[", 
     RowBox[{
      RowBox[{"Overlay", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ProgressIndicator", "[", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"CurrentValue", "[", 
               RowBox[{"{", 
                RowBox[{"\<\"CounterValue\"\>", ",", "\<\"slideRPI\"\>"}], 
                "}"}], "]"}], "+", "1"}], 
             RowBox[{"CurrentValue", "[", 
              RowBox[{"{", 
               RowBox[{"\<\"MaxCounterValue\"\>", ",", "\<\"slideRPI\"\>"}], 
               "}"}], "]"}]], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"50", ",", "20"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"Row", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"CurrentValue", "[", 
                 RowBox[{"{", 
                  RowBox[{"\<\"CounterValue\"\>", ",", "\<\"slideRPI\"\>"}], 
                  "}"}], "]"}], "+", "1"}], ",", "\<\"/\"\>", ",", 
               RowBox[{"CurrentValue", "[", 
                RowBox[{"{", 
                 RowBox[{"\<\"MaxCounterValue\"\>", ",", "\<\"slideRPI\"\>"}],
                  "}"}], "]"}]}], "}"}], "]"}], ",", "14", ",", 
            RowBox[{"FontColor", "\[Rule]", "Black"}], ",", 
            RowBox[{"FontFamily", "\[Rule]", "\<\"Arial Black\"\>"}]}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
      RowBox[{"UpdateInterval", "\[Rule]", "0.5`"}]}], "]"}], ",", 
    "StandardForm"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{
  3.628966299468715*^9, 3.6289682389896293`*^9, 3.6289698638545523`*^9, 
   3.629029653378874*^9, 3.629038339136486*^9, 3.629040102896764*^9, 
   3.6290404546164618`*^9, 3.6291147248510075`*^9, {3.6291159832852325`*^9, 
   3.6291159850253873`*^9}, 3.629122689295452*^9, 3.6291227861531024`*^9, 
   3.629122817385541*^9, 3.6291230151092343`*^9, 3.629291449438027*^9, 
   3.629309689275565*^9, 3.629310829302985*^9, 3.6293225297169485`*^9, 
   3.629333095940205*^9, 3.6293350880887437`*^9, 3.629335767506138*^9, 
   3.6295744948823495`*^9, 3.629584682108618*^9, 3.629628286040474*^9, 
   3.62962855946403*^9, 3.6296308792920604`*^9, 3.6296339025367556`*^9, 
   3.6296356796634507`*^9, 3.6296387437168255`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToBoxes", "[", 
  RowBox[{"ActionMenu", "[", 
   RowBox[{
    RowBox[{"ProgressIndicator", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\"\<1\>\"", "\[RuleDelayed]", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6289665804299664`*^9, 3.628966610914341*^9}}],

Cell[BoxData[
 RowBox[{"ActionMenuBox", "[", 
  RowBox[{
   RowBox[{"ProgressIndicatorBox", "[", "0", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"\\\"1\\\"\"\>", "\[RuleDelayed]", "1"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.628966611526752*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jumpAuthorTOC", " ", "=", " ", 
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "\n", "\t", "\n", 
     RowBox[{"ActionMenu", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Refresh", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Overlay", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"ProgressIndicator", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], "\n", 
                "\t\t\t\t", "/", "\n", "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", 
                  "1", ",", 
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}]}], "]"}]}], ",", " ", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"60", ",", " ", "25"}], "}"}]}]}], "]"}], ",", " ", 
             "\n", "\t\t\t", 
             RowBox[{"Style", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], ",", " ", "\n",
                   "\t\t\t\t\t", "\"\</\>\"", ",", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", 
                    "1", ",", 
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}]}], "]"}]}], "\n", 
                 "\t\t\t\t", "}"}], "]"}], ",", " ", "\n", "\t\t\t\t", "14", 
               ",", " ", 
               RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", 
               RowBox[{
               "FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}], "\n", 
              "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], ",", " ", 
           RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ",
          "\n", "\t\t", 
         RowBox[{"UpdateInterval", " ", "->", " ", "0.1"}]}], "\n", "\t", 
        "]"}], ",", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "RPItutorial`TOC", "]"}], " ", "===", " ", 
          "Symbol"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "RPItutorial`TOC"}], "]"}], ",", "\n", 
       "\t", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "\n", "\n", "]"}], "]"}], 
    ",", 
    RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", " ", 
     RowBox[{"{", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"RPItutorial`Sections", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
         RowBox[{"Cells", "[", 
          RowBox[{
           RowBox[{"InputNotebook", "[", "]"}], ",", 
           RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], "]"}]}]}], 
       ",", "\n", "\t", 
       RowBox[{"RPItutorial`TOC`sectionCounter", " ", "=", " ", "0"}], ",", 
       "\n", "\t", 
       RowBox[{"RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}], ",",
        "\n", "\t", 
       RowBox[{"RPItutorial`TOC", " ", "=", " ", "\n", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cellsTOC", " ", "=", " ", 
            RowBox[{"Cells", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
              RowBox[{"CellStyle", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}], 
                "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cellTypes", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
               "cellsTOC"}]}], "}"}], ",", "\n", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cellTitles", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
                 "cellsTOC"}]}], "}"}], ",", "\n", "\t", 
              RowBox[{"MapIndexed", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cell", " ", "=", " ", 
                    RowBox[{"cellsTOC", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                   ",", "\n", "\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellType", " ", "=", " ", 
                    RowBox[{"cellTypes", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"action", " ", "=", " ", 
                    RowBox[{"Hold", " ", "@", " ", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell", ",", " ", "After", ",", " ", "Cell"}], 
                    "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"RuleDelayed", "[", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Style", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "cellType", " ", "\[Equal]", " ", "\"\<Section\>\""}], 
                    ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}],
                     ";", 
                    RowBox[{"RPItutorial`TOC`sectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", 
                    "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"RPItutorial`TOC`subsectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{"\"\<     \>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", "]"}], 
                    " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`subsectionCounter", 
                    "]"}]}]}]}], "\n", "\t\t\t\t\t", "]"}], " ", "<>", " ", 
                    "\"\< - \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "#1", "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "\n", "\t\t\t\t", "]"}], ",", 
                    " ", "\n", "\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "]"}]}], "]"}], "&"}], 
                ",", "\n", "\t\t", "cellTitles"}], "\n", "\t", "]"}]}], "\n", 
             "]"}]}], "]"}]}], "]"}]}]}], "\n", "\n", "}"}]}], ",", 
    RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.6290288217564783`*^9, 3.629028827067035*^9}, {
  3.6290288776338263`*^9, 3.6290288777529106`*^9}, {3.6290289810458636`*^9, 
  3.6290289836125803`*^9}, {3.6290290265833006`*^9, 3.629029034513605*^9}, {
  3.6290295104484*^9, 3.629029516610526*^9}, {3.629029576817705*^9, 
  3.629029640117017*^9}}],

Cell[BoxData[
 TagBox[
  DynamicBox[ToBoxes[
    ActionMenu[
     Refresh[
      Overlay[{
        ProgressIndicator[(CurrentValue[{"CounterValue", "slideRPI"}] + 1)/If[
         CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
          CurrentValue[{"MaxCounterValue", "slideRPI"}]], 
         ImageSize -> {60, 25}], 
        Style[
         Row[{CurrentValue[{"CounterValue", "slideRPI"}] + 1, "/", 
           If[CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
            CurrentValue[{"MaxCounterValue", "slideRPI"}]]}], 14, FontColor -> 
         Black, FontFamily -> "Arial Black"]}, Alignment -> Center], 
      UpdateInterval -> 0.1], 
     If[Head[RPItutorial`TOC] === Symbol, {}, RPItutorial`TOC], Appearance -> 
     None], StandardForm],
   ImageSizeCache->{60., {9., 16.}}],
  EventHandlerTag[{"MouseDown" :> {RPItutorial`Sections = Map[Part[
         NotebookRead[#], 1]& , 
        Cells[
         InputNotebook[], CellStyle -> "Section"]], 
      RPItutorial`TOC`sectionCounter = 0, RPItutorial`TOC`subsectionCounter = 
      0, RPItutorial`TOC = With[{$CellContext`cellsTOC = Cells[
           InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
        With[{$CellContext`cellTypes = Map[Part[
             NotebookRead[#], 2]& , $CellContext`cellsTOC]}, 
         With[{$CellContext`cellTitles = Map[Part[
              NotebookRead[#], 1]& , $CellContext`cellsTOC]}, 
          MapIndexed[With[{$CellContext`cell = Part[$CellContext`cellsTOC, 
               First[#2]]}, 
            With[{$CellContext`cellType = Part[$CellContext`cellTypes, 
                First[#2]]}, 
             With[{$CellContext`action = Hold[
                 SelectionMove[$CellContext`cell, After, Cell]]}, Style[
                StringJoin[
                 
                 If[$CellContext`cellType == "Section", 
                  RPItutorial`TOC`subsectionCounter = 0; 
                  Increment[RPItutorial`TOC`sectionCounter]; 
                  ToString[RPItutorial`TOC`sectionCounter], 
                  Increment[RPItutorial`TOC`subsectionCounter]; 
                  StringJoin["     ", 
                    ToString[RPItutorial`TOC`sectionCounter], ".", 
                    ToString[RPItutorial`TOC`subsectionCounter]]], " - ", 
                 ToString[#]], FontFamily -> "Arial Black"] :> 
              ReleaseHold[$CellContext`action]]]]& , \
$CellContext`cellTitles]]]]}, PassEventsDown -> True, PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.6290288278595576`*^9, 3.6290288786825266`*^9, 3.6290289851335945`*^9, {
   3.6290290275329337`*^9, 3.629029035185049*^9}, {3.6290296534058943`*^9, 
   3.629029654751792*^9}, 3.6290383391615024`*^9, 3.6290401029297867`*^9, 
   3.6290404546414804`*^9, {3.629114724870022*^9, 3.629114726510117*^9}, 
   3.629115983311242*^9, 3.629122689341484*^9, 3.6291227862001343`*^9, 
   3.62912281742857*^9, 3.6291230151422567`*^9, 3.629291449462041*^9, 
   3.629309689295579*^9, 3.6293108293269997`*^9, 3.6293225297399664`*^9, 
   3.629333095987236*^9, 3.6293350881247663`*^9, 3.6293357675411634`*^9, 
   3.629574494906352*^9, 3.629584682141585*^9, 3.6296282860805006`*^9, 
   3.6296285595030556`*^9, 3.629630879325083*^9, 3.6296339025617585`*^9, 
   3.629635679689453*^9, 3.629638743741828*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jumpTOC", " ", "=", " ", 
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "\n", "\t", "\n", 
     RowBox[{"ActionMenu", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Refresh", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Overlay", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"ProgressIndicator", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], "\n", 
                "\t\t\t\t", "/", "\n", "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", 
                  "1", ",", 
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}]}], "]"}]}], ",", " ", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"60", ",", " ", "25"}], "}"}]}]}], "]"}], ",", " ", 
             "\n", "\t\t\t", 
             RowBox[{"Style", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], ",", " ", "\n",
                   "\t\t\t\t\t", "\"\</\>\"", ",", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", 
                    "1", ",", 
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}]}], "]"}]}], "\n", 
                 "\t\t\t\t", "}"}], "]"}], ",", " ", "\n", "\t\t\t\t", "14", 
               ",", " ", 
               RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", 
               RowBox[{
               "FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}], "\n", 
              "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], ",", " ", 
           RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ",
          "\n", "\t\t", 
         RowBox[{"UpdateInterval", " ", "->", " ", "0.5"}]}], "\n", "\t", 
        "]"}], ",", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "RPItutorial`TOC", "]"}], " ", "===", " ", 
          "Symbol"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "RPItutorial`TOC"}], "]"}], ",", "\n", 
       "\t", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "\n", "\n", "]"}], "]"}], 
    ",", 
    RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", " ", 
     RowBox[{"{", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"RPItutorial`Sections", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
         RowBox[{"Cells", "[", 
          RowBox[{
           RowBox[{"InputNotebook", "[", "]"}], ",", 
           RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], "]"}]}]}], 
       ",", "\n", "\t", 
       RowBox[{"RPItutorial`TOC`sectionCounter", " ", "=", " ", "0"}], ",", 
       "\n", "\t", 
       RowBox[{"RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}], ",",
        "\n", "\t", 
       RowBox[{"RPItutorial`TOC", " ", "=", " ", "\n", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cellsTOC", " ", "=", " ", 
            RowBox[{"Cells", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
              RowBox[{"CellStyle", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}], 
                "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cellTypes", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
               "cellsTOC"}]}], "}"}], ",", "\n", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cellTitles", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
                 "cellsTOC"}]}], "}"}], ",", "\n", "\t", 
              RowBox[{"MapIndexed", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cell", " ", "=", " ", 
                    RowBox[{"cellsTOC", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                   ",", "\n", "\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellType", " ", "=", " ", 
                    RowBox[{"cellTypes", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"action", " ", "=", " ", 
                    RowBox[{"Hold", " ", "@", " ", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell", ",", " ", "After", ",", " ", "Cell"}], 
                    "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"RuleDelayed", "[", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Style", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "cellType", " ", "\[Equal]", " ", "\"\<Section\>\""}], 
                    ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}],
                     ";", " ", 
                    RowBox[{"RPItutorial`TOC`sectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", 
                    "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"RPItutorial`TOC`subsectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{"\"\<     \>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", "]"}], 
                    " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`subsectionCounter", 
                    "]"}]}]}]}], "\n", "\t\t\t\t\t", "]"}], " ", "<>", " ", 
                    "\"\< - \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "#1", "]"}]}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "\n", "\t\t\t\t", "]"}], ",", 
                    " ", "\n", "\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "]"}]}], "]"}], "&"}], 
                ",", "\n", "\t\t", "cellTitles"}], "\n", "\t", "]"}]}], "\n", 
             "]"}]}], "]"}]}], "]"}]}]}], "\n", "\n", "}"}]}], ",", 
    RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.628966035706231*^9, 3.6289663182983007`*^9}, {
   3.628966368578467*^9, 3.628966550656063*^9}, {3.6289666224010177`*^9, 
   3.6289666921876607`*^9}, {3.628966723510064*^9, 3.6289667986943226`*^9}, {
   3.6289674728497133`*^9, 3.6289676180097384`*^9}, {3.62896787996315*^9, 
   3.628967973069374*^9}, {3.628968310147191*^9, 3.62896841128319*^9}, {
   3.628970105220457*^9, 3.6289701187585115`*^9}, {3.6289701782711105`*^9, 
   3.628970191253786*^9}, {3.6289703050188217`*^9, 3.6289703426680684`*^9}, 
   3.6289717993844066`*^9, {3.628971930193835*^9, 3.628971965206335*^9}, {
   3.6289720003328075`*^9, 3.6289720024442205`*^9}, 3.6289725093123894`*^9, 
   3.6289727555176563`*^9, {3.6290246756050215`*^9, 3.629024766312643*^9}, {
   3.6290247986252394`*^9, 3.629024836614625*^9}, {3.629025020259568*^9, 
   3.6290250922576923`*^9}, {3.6290255822130613`*^9, 
   3.6290256027107563`*^9}, {3.629025659553754*^9, 3.629025676754245*^9}, 
   3.6290262749503045`*^9, {3.6290263113376303`*^9, 3.629026333024119*^9}, {
   3.6290263663373904`*^9, 3.629026389997198*^9}, {3.6290264300629816`*^9, 
   3.629026436947587*^9}, {3.6290269443221617`*^9, 3.6290269497868066`*^9}, 
   3.629027738645233*^9, 3.6290282707336607`*^9, {3.6290283520530124`*^9, 
   3.6290284030621147`*^9}, {3.629028458987908*^9, 3.6290284971544247`*^9}, {
   3.629028527921981*^9, 3.6290287505082707`*^9}, {3.6290288114936247`*^9, 
   3.629028811953926*^9}, {3.6290291158289537`*^9, 3.6290291193403025`*^9}, 
   3.629029667282168*^9}],

Cell[BoxData[
 TagBox[
  DynamicBox[ToBoxes[
    ActionMenu[
     Refresh[
      Overlay[{
        ProgressIndicator[(CurrentValue[{"CounterValue", "slideRPI"}] + 1)/If[
         CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
          CurrentValue[{"MaxCounterValue", "slideRPI"}]], 
         ImageSize -> {60, 25}], 
        Style[
         Row[{CurrentValue[{"CounterValue", "slideRPI"}] + 1, "/", 
           If[CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
            CurrentValue[{"MaxCounterValue", "slideRPI"}]]}], 14, FontColor -> 
         Black, FontFamily -> "Arial Black"]}, Alignment -> Center], 
      UpdateInterval -> 0.5], 
     If[Head[RPItutorial`TOC] === Symbol, {}, RPItutorial`TOC], Appearance -> 
     None], StandardForm],
   ImageSizeCache->{60., {9., 16.}}],
  EventHandlerTag[{"MouseDown" :> {RPItutorial`Sections = Map[Part[
         NotebookRead[#], 1]& , 
        Cells[
         InputNotebook[], CellStyle -> "Section"]], 
      RPItutorial`TOC`sectionCounter = 0, RPItutorial`TOC`subsectionCounter = 
      0, RPItutorial`TOC = With[{$CellContext`cellsTOC = Cells[
           InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
        With[{$CellContext`cellTypes = Map[Part[
             NotebookRead[#], 2]& , $CellContext`cellsTOC]}, 
         With[{$CellContext`cellTitles = Map[Part[
              NotebookRead[#], 1]& , $CellContext`cellsTOC]}, 
          MapIndexed[With[{$CellContext`cell = Part[$CellContext`cellsTOC, 
               First[#2]]}, 
            With[{$CellContext`cellType = Part[$CellContext`cellTypes, 
                First[#2]]}, 
             With[{$CellContext`action = Hold[
                 SelectionMove[$CellContext`cell, After, Cell]]}, Style[
                StringJoin[
                 
                 If[$CellContext`cellType == "Section", 
                  RPItutorial`TOC`subsectionCounter = 0; 
                  Increment[RPItutorial`TOC`sectionCounter]; 
                  ToString[RPItutorial`TOC`sectionCounter], 
                  Increment[RPItutorial`TOC`subsectionCounter]; 
                  StringJoin["     ", 
                    ToString[RPItutorial`TOC`sectionCounter], ".", 
                    ToString[RPItutorial`TOC`subsectionCounter]]], " - ", 
                 ToString[#]], FontFamily -> "Arial Black"] :> 
              ReleaseHold[$CellContext`action]]]]& , \
$CellContext`cellTitles]]]]}, PassEventsDown -> True, PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{{3.6290256655577593`*^9, 3.6290256778749924`*^9}, 
   3.6290262772098217`*^9, 3.629026338473761*^9, {3.629026375696639*^9, 
   3.629026391415146*^9}, 3.6290264373448486`*^9, 3.6290269522284393`*^9, 
   3.6290277403113403`*^9, 3.6290282721936407`*^9, 3.6290283361794043`*^9, {
   3.629028403555437*^9, 3.629028411084468*^9}, {3.6290284599265337`*^9, 
   3.629028498110057*^9}, {3.6290285670291185`*^9, 3.629028620789564*^9}, {
   3.629028681009815*^9, 3.6290287511657047`*^9}, 3.6290288308205357`*^9, 
   3.629029120575121*^9, {3.6290296534279146`*^9, 3.6290296690233307`*^9}, 
   3.629038339193525*^9, 3.629040102976818*^9, 3.629040454671503*^9, 
   3.6291147249050436`*^9, 3.6291159833522696`*^9, 3.6291226893705025`*^9, 
   3.6291227862291574`*^9, 3.62912281745759*^9, 3.6291230151882896`*^9, 
   3.6292914494920635`*^9, 3.629309689318594*^9, 3.6293108293500147`*^9, 
   3.629322529766983*^9, 3.629333096013255*^9, 3.629335088151784*^9, 
   3.629335767570183*^9, 3.6295744949263535`*^9, 3.6295846821625643`*^9, 
   3.62962828610952*^9, 3.629628559537079*^9, 3.6296308793521013`*^9, 
   3.6296339025817604`*^9, 3.6296356797104554`*^9, 3.62963874376283*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jumpBoxesTOC", " ", "=", " ", 
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "\n", "\t", "\n", 
     RowBox[{"ActionMenu", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Refresh", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Overlay", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"ProgressIndicator", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], "\n", 
                "\t\t\t\t", "/", "\n", "\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", 
                  "1", ",", 
                  RowBox[{
                   RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "+", "1"}]}], "]"}]}], ",",
                " ", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"60", ",", " ", "25"}], "}"}]}]}], "]"}], ",", " ", 
             "\n", "\t\t\t", 
             RowBox[{"Style", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], ",", " ", "\n",
                   "\t\t\t\t\t", "\"\</\>\"", ",", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", 
                    "1", ",", 
                    RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "+", "1"}]}], "]"}]}], 
                 "\n", "\t\t\t\t", "}"}], "]"}], ",", " ", "\n", "\t\t\t\t", 
               "14", ",", " ", 
               RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", 
               RowBox[{
               "FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}], "\n", 
              "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], ",", " ", 
           RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ",
          "\n", "\t\t", 
         RowBox[{"UpdateInterval", " ", "->", " ", "0.5"}]}], "\n", "\t", 
        "]"}], ",", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "RPItutorial`TOC", "]"}], " ", "===", " ", 
          "Symbol"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "RPItutorial`TOC"}], "]"}], ",", "\n", 
       "\t", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "\n", "\n", "]"}], "]"}], 
    ",", 
    RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", " ", 
     RowBox[{"{", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"RPItutorial`Sections", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
         RowBox[{"Cells", "[", 
          RowBox[{
           RowBox[{"InputNotebook", "[", "]"}], ",", 
           RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], "]"}]}]}], 
       ",", "\n", "\t", 
       RowBox[{"RPItutorial`TOC`sectionCounter", " ", "=", " ", "0"}], ",", 
       "\n", "\t", 
       RowBox[{"RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}], ",",
        "\n", "\t", 
       RowBox[{"RPItutorial`TOC", " ", "=", " ", "\n", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cellsTOC", " ", "=", " ", 
            RowBox[{"Cells", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
              RowBox[{"CellStyle", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}], 
                "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cellTypes", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
               "cellsTOC"}]}], "}"}], ",", "\n", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cellTitles", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
                 "cellsTOC"}]}], "}"}], ",", "\n", "\t", 
              RowBox[{"MapIndexed", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cell", " ", "=", " ", 
                    RowBox[{"cellsTOC", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                   ",", "\n", "\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellType", " ", "=", " ", 
                    RowBox[{"cellTypes", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"action", " ", "=", " ", 
                    RowBox[{"Hold", " ", "@", " ", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell", ",", " ", "All", ",", " ", "Cell"}], 
                    "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"RuleDelayed", "[", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Style", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "cellType", " ", "\[Equal]", " ", "\"\<Section\>\""}], 
                    ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}],
                     ";", " ", 
                    RowBox[{"RPItutorial`TOC`sectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", 
                    "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"RPItutorial`TOC`subsectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{"\"\<     \>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", "]"}], 
                    " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`subsectionCounter", 
                    "]"}]}]}]}], "\n", "\t\t\t\t\t", "]"}], " ", "<>", " ", 
                    "\"\< - \>\""}], ",", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "@@", "#1"}], "===", "Cell"}], ",", " ", 
                    "\"\<\>\"", ",", " ", 
                    RowBox[{"RawBoxes", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"RowBox", ",", "#1"}], "]"}], "]"}]}], "]"}]}], 
                    "}"}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "\n", "\t\t\t\t", "]"}], ",", 
                    " ", "\n", "\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "]"}]}], "]"}], "&"}], 
                ",", "\n", "\t\t", "cellTitles"}], "\n", "\t", "]"}]}], "\n", 
             "]"}]}], "]"}]}], "]"}]}]}], "\n", "\n", "}"}]}], ",", 
    RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.6290383769887924`*^9, 3.629038507034113*^9}, {
  3.6290385607950397`*^9, 3.6290385610742245`*^9}, {3.6290386490079775`*^9, 
  3.629038677258855*^9}, {3.629038710129831*^9, 3.629038766475489*^9}, {
  3.6290387988466434`*^9, 3.629038815996098*^9}, {3.629038877741371*^9, 
  3.6290390524021435`*^9}, {3.629039095781138*^9, 3.629039201360618*^9}, {
  3.629040116884113*^9, 3.6290401213030667`*^9}, {3.6291229982980065`*^9, 
  3.629122998631221*^9}}],

Cell[BoxData[
 TagBox[
  DynamicBox[ToBoxes[
    ActionMenu[
     Refresh[
      Overlay[{
        ProgressIndicator[(CurrentValue[{"CounterValue", "slideRPI"}] + 1)/If[
         CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
          CurrentValue[{"MaxCounterValue", "slideRPI"}] + 1], 
         ImageSize -> {60, 25}], 
        Style[
         Row[{CurrentValue[{"CounterValue", "slideRPI"}] + 1, "/", 
           If[
           CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
            CurrentValue[{"MaxCounterValue", "slideRPI"}] + 1]}], 14, 
         FontColor -> Black, FontFamily -> "Arial Black"]}, Alignment -> 
       Center], UpdateInterval -> 0.5], 
     If[Head[RPItutorial`TOC] === Symbol, {}, RPItutorial`TOC], Appearance -> 
     None], StandardForm],
   ImageSizeCache->{60., {9., 16.}}],
  EventHandlerTag[{"MouseDown" :> {RPItutorial`Sections = Map[Part[
         NotebookRead[#], 1]& , 
        Cells[
         InputNotebook[], CellStyle -> "Section"]], 
      RPItutorial`TOC`sectionCounter = 0, RPItutorial`TOC`subsectionCounter = 
      0, RPItutorial`TOC = With[{$CellContext`cellsTOC = Cells[
           InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
        With[{$CellContext`cellTypes = Map[Part[
             NotebookRead[#], 2]& , $CellContext`cellsTOC]}, 
         With[{$CellContext`cellTitles = Map[Part[
              NotebookRead[#], 1]& , $CellContext`cellsTOC]}, 
          MapIndexed[With[{$CellContext`cell = Part[$CellContext`cellsTOC, 
               First[#2]]}, 
            With[{$CellContext`cellType = Part[$CellContext`cellTypes, 
                First[#2]]}, 
             With[{$CellContext`action = Hold[
                 SelectionMove[$CellContext`cell, All, Cell]]}, Style[
                Row[{
                  StringJoin[
                   
                   If[$CellContext`cellType == "Section", 
                    RPItutorial`TOC`subsectionCounter = 0; 
                    Increment[RPItutorial`TOC`sectionCounter]; 
                    ToString[RPItutorial`TOC`sectionCounter], 
                    Increment[RPItutorial`TOC`subsectionCounter]; 
                    StringJoin["     ", 
                    ToString[RPItutorial`TOC`sectionCounter], ".", 
                    ToString[RPItutorial`TOC`subsectionCounter]]], " - "], 
                  If[Apply[Head, #] === Cell, "", 
                   RawBoxes[
                    Apply[RowBox, #]]]}], FontFamily -> "Arial Black"] :> 
              ReleaseHold[$CellContext`action]]]]& , \
$CellContext`cellTitles]]]]}, PassEventsDown -> True, PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{
  3.629038421322425*^9, 3.629038456290193*^9, {3.6290384894773726`*^9, 
   3.6290385077005515`*^9}, 3.629038562083905*^9, {3.6290386502588124`*^9, 
   3.6290386777311697`*^9}, {3.629038713691204*^9, 3.629038722425042*^9}, 
   3.629038768957143*^9, 3.6290388172749515`*^9, 3.6290389038448124`*^9, 
   3.629038943290177*^9, {3.6290389793483114`*^9, 3.629039053596938*^9}, 
   3.629039202503378*^9, {3.6290401030418625`*^9, 3.629040122563908*^9}, 
   3.629040454702521*^9, 3.6291147249380646`*^9, 3.629115983394298*^9, 
   3.6291226893985224`*^9, 3.629122786257176*^9, 3.629122817485608*^9, {
   3.6291230152423244`*^9, 3.629123016756336*^9}, 3.6292914495300875`*^9, 
   3.6293096893486147`*^9, 3.629310829379034*^9, 3.6293225297960024`*^9, 
   3.629333096043275*^9, 3.629335088180803*^9, 3.6293357676002035`*^9, 
   3.6295744949483557`*^9, 3.6295846821835427`*^9, 3.629628286143543*^9, 
   3.6296285595701027`*^9, 3.6296308793801193`*^9, 3.6296339026017623`*^9, 
   3.6296356797314577`*^9, 3.629638743783832*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jumpBoxesAuthorTOC", " ", "=", " ", 
  RowBox[{"EventHandler", "[", 
   RowBox[{
    RowBox[{"Dynamic", "[", "\n", "\t", "\n", 
     RowBox[{"ActionMenu", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Refresh", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Overlay", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{"ProgressIndicator", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], "\n", 
                "\t\t\t\t", "/", "\n", "\t\t\t\t", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"CurrentValue", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "]"}], "+", "1"}], ")"}]}], ",", " ", 
               RowBox[{"ImageSize", " ", "->", " ", 
                RowBox[{"{", 
                 RowBox[{"60", ",", " ", "25"}], "}"}]}]}], "]"}], ",", " ", 
             "\n", "\t\t\t", 
             RowBox[{"Style", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Row", "[", 
                RowBox[{"{", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], ",", " ", "\n",
                   "\t\t\t\t\t", "\"\</\>\"", ",", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "\n", "\t\t\t", "]"}], "+", "1"}], ")"}]}], "\n", 
                 "\t\t\t\t", "}"}], "]"}], ",", " ", "\n", "\t\t\t\t", "14", 
               ",", " ", 
               RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", 
               RowBox[{
               "FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}], "\n", 
              "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], ",", " ", 
           RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ",
          "\n", "\t\t", 
         RowBox[{"UpdateInterval", " ", "->", " ", "0.1"}]}], "\n", "\t", 
        "]"}], ",", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "RPItutorial`TOC", "]"}], " ", "===", " ", 
          "Symbol"}], ",", " ", 
         RowBox[{"{", "}"}], ",", " ", "RPItutorial`TOC"}], "]"}], ",", "\n", 
       "\t", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "\n", "\n", "]"}], "]"}], 
    ",", 
    RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", " ", 
     RowBox[{"{", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"RPItutorial`Sections", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
         RowBox[{"Cells", "[", 
          RowBox[{
           RowBox[{"InputNotebook", "[", "]"}], ",", 
           RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], "]"}]}]}], 
       ",", "\n", "\t", 
       RowBox[{"RPItutorial`TOC`sectionCounter", " ", "=", " ", "0"}], ",", 
       "\n", "\t", 
       RowBox[{"RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}], ",",
        "\n", "\t", 
       RowBox[{"RPItutorial`TOC", " ", "=", " ", "\n", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cellsTOC", " ", "=", " ", 
            RowBox[{"Cells", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
              RowBox[{"CellStyle", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}], 
                "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cellTypes", " ", "=", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
               "cellsTOC"}]}], "}"}], ",", "\n", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cellTitles", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
                 "cellsTOC"}]}], "}"}], ",", "\n", "\t", 
              RowBox[{"MapIndexed", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"With", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"cell", " ", "=", " ", 
                    RowBox[{"cellsTOC", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                   ",", "\n", "\t\t", 
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellType", " ", "=", " ", 
                    RowBox[{"cellTypes", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"action", " ", "=", " ", 
                    RowBox[{"Hold", " ", "@", " ", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell", ",", " ", "After", ",", " ", "Cell"}], 
                    "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                    RowBox[{"RuleDelayed", "[", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Style", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "cellType", " ", "\[Equal]", " ", "\"\<Section\>\""}], 
                    ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}],
                     ";", " ", 
                    RowBox[{"RPItutorial`TOC`sectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", 
                    "]"}]}], ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"RPItutorial`TOC`subsectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{"\"\<     \>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", "]"}], 
                    " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`subsectionCounter", 
                    "]"}]}]}]}], "\n", "\t\t\t\t\t", "]"}], " ", "<>", " ", 
                    "\"\< - \>\""}], ",", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "@@", "#1"}], "===", "Cell"}], ",", " ", 
                    "\"\<\>\"", ",", " ", 
                    RowBox[{"RawBoxes", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"RowBox", ",", "#1"}], "]"}], "]"}]}], "]"}]}], 
                    "}"}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "\n", "\t\t\t\t", "]"}], ",", 
                    " ", "\n", "\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "]"}]}], "]"}], "&"}], 
                ",", "\n", "\t\t", "cellTitles"}], "\n", "\t", "]"}]}], "\n", 
             "]"}]}], "]"}]}], "]"}]}]}], "\n", "\n", "}"}]}], ",", 
    RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.629039258853049*^9, 3.629039269512165*^9}, {
  3.629040089913085*^9, 3.6290400972479925`*^9}, {3.629040426919958*^9, 
  3.6290404863346667`*^9}}],

Cell[BoxData[
 TagBox[
  DynamicBox[ToBoxes[
    ActionMenu[
     Refresh[
      Overlay[{
        ProgressIndicator[(CurrentValue[{"CounterValue", "slideRPI"}] + 1)/(
         CurrentValue[{"MaxCounterValue", "slideRPI"}] + 1), 
         ImageSize -> {60, 25}], 
        Style[
         Row[{
          CurrentValue[{"CounterValue", "slideRPI"}] + 1, "/", 
           CurrentValue[{"MaxCounterValue", "slideRPI"}] + 1}], 14, FontColor -> 
         Black, FontFamily -> "Arial Black"]}, Alignment -> Center], 
      UpdateInterval -> 0.1], 
     If[Head[RPItutorial`TOC] === Symbol, {}, RPItutorial`TOC], Appearance -> 
     None], StandardForm],
   ImageSizeCache->{60., {9., 16.}}],
  EventHandlerTag[{"MouseDown" :> {RPItutorial`Sections = Map[Part[
         NotebookRead[#], 1]& , 
        Cells[
         InputNotebook[], CellStyle -> "Section"]], 
      RPItutorial`TOC`sectionCounter = 0, RPItutorial`TOC`subsectionCounter = 
      0, RPItutorial`TOC = With[{$CellContext`cellsTOC = Cells[
           InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
        With[{$CellContext`cellTypes = Map[Part[
             NotebookRead[#], 2]& , $CellContext`cellsTOC]}, 
         With[{$CellContext`cellTitles = Map[Part[
              NotebookRead[#], 1]& , $CellContext`cellsTOC]}, 
          MapIndexed[With[{$CellContext`cell = Part[$CellContext`cellsTOC, 
               First[#2]]}, 
            With[{$CellContext`cellType = Part[$CellContext`cellTypes, 
                First[#2]]}, 
             With[{$CellContext`action = Hold[
                 SelectionMove[$CellContext`cell, After, Cell]]}, Style[
                Row[{
                  StringJoin[
                   
                   If[$CellContext`cellType == "Section", 
                    RPItutorial`TOC`subsectionCounter = 0; 
                    Increment[RPItutorial`TOC`sectionCounter]; 
                    ToString[RPItutorial`TOC`sectionCounter], 
                    Increment[RPItutorial`TOC`subsectionCounter]; 
                    StringJoin["     ", 
                    ToString[RPItutorial`TOC`sectionCounter], ".", 
                    ToString[RPItutorial`TOC`subsectionCounter]]], " - "], 
                  If[Apply[Head, #] === Cell, "", 
                   RawBoxes[
                    Apply[RowBox, #]]]}], FontFamily -> "Arial Black"] :> 
              ReleaseHold[$CellContext`action]]]]& , \
$CellContext`cellTitles]]]]}, PassEventsDown -> True, PassEventsDown -> 
    Automatic, PassEventsUp -> True}]]], "Output",
 CellChangeTimes->{{3.6290404686778603`*^9, 3.6290404875604825`*^9}, 
   3.6291147249650826`*^9, 3.629115983431323*^9, 3.6291226894245415`*^9, 
   3.6291227862801886`*^9, 3.629122817508623*^9, 3.6291230152993803`*^9, 
   3.629291449570114*^9, 3.6293096893766327`*^9, 3.6293108294060555`*^9, 
   3.6293225298220253`*^9, 3.629333096069291*^9, 3.629335088204819*^9, 
   3.629335767624218*^9, 3.629574494967358*^9, 3.629584682199527*^9, 
   3.629628286168561*^9, 3.6296285595951176`*^9, 3.6296308794021344`*^9, 
   3.6296339026197643`*^9, 3.629635679748459*^9, 3.629638743801834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"Disk", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.629038331291242*^9, 3.6290383357872553`*^9}}],

Cell[BoxData[
 GraphicsBox[DiskBox[{0, 0}]]], "Output",
 CellChangeTimes->{3.629038340512407*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "another ",
 Cell[BoxData[
  GraphicsBox[DiskBox[{0, 0}]]], "Output",
  CellChangeTimes->{3.629038340512407*^9}]
}], "Subsection",
 CellChangeTimes->{{3.6290284253920317`*^9, 3.6290284263656893`*^9}, {
  3.6290383455057487`*^9, 3.6290383458960075`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 GraphicsBox[DiskBox[{0, 0}]]], "Output",
 CellChangeTimes->{3.629038340512407*^9}]], "Subsection",
 CellChangeTimes->{{3.6290271010768394`*^9, 3.6290271017072535`*^9}, 
   3.629038850554202*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", "\"\<Section\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.629324134546714*^9, 3.6293241509987154`*^9}}],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{{3.6293241457041698`*^9, 3.629324151632131*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", "i"}]], "Input",
 CellChangeTimes->{{3.6293238138941627`*^9, 3.629323816140671*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`i, StandardForm],
  ImageSizeCache->{8., {0., 8.}}]], "Output",
 CellChangeTimes->{3.6293238168221188`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToBoxes", "[", "jumpBoxesTOCtest", "]"}]], "Input",
 CellChangeTimes->{{3.629323120056926*^9, 3.6293231302587366`*^9}}],

Cell[BoxData[
 RowBox[{"DynamicModuleBox", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"sectionCounter$$", "=", "0"}], ",", 
     RowBox[{"subsectionCounter$$", "=", "0"}], ",", 
     RowBox[{"TOC$$", "=", 
      RowBox[{"{", "}"}]}]}], "}"}], ",", 
   RowBox[{"TagBox", "[", 
    RowBox[{
     RowBox[{"DynamicBox", "[", 
      RowBox[{
       RowBox[{"ToBoxes", "[", 
        RowBox[{
         RowBox[{"ActionMenu", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{"\<\"Page \"\>", ",", "\<\"1\"\>"}], "}"}], "]"}], ",",
              "14", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\<\"Arial Black\"\>"}]}], 
            "]"}], ",", "TOC$$", ",", 
           RowBox[{"Appearance", "\[Rule]", "\<\"Button\"\>"}]}], "]"}], ",", 
         "StandardForm"}], "]"}], ",", 
       RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
        RowBox[{"{", "TOC$$", "}"}]}]}], "]"}], ",", 
     RowBox[{"EventHandlerTag", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\<\"MouseDown\"\>", "\[RuleDelayed]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"sectionCounter$$", "=", "0"}], ",", 
           RowBox[{"subsectionCounter$$", "=", "0"}], ",", 
           RowBox[{"TOC$$", "=", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cellsTOC$", "=", 
                RowBox[{"Cells", "[", 
                 RowBox[{
                  RowBox[{"InputNotebook", "[", "]"}], ",", 
                  RowBox[{"CellStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"\<\"Section\"\>", ",", "\<\"Subsection\"\>"}], 
                    "}"}]}]}], "]"}]}], "}"}], ",", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"cellTypes$", "=", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NotebookRead", "[", "#1", "]"}], 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                    "&"}], ")"}], "/@", "cellsTOC$"}]}], "}"}], ",", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"cellTitles$", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"NotebookRead", "[", "#1", "]"}], 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                    "&"}], ")"}], "/@", "cellsTOC$"}]}], "}"}], ",", 
                  RowBox[{"MapIndexed", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cell$", "=", 
                    RowBox[{"cellsTOC$", "\[LeftDoubleBracket]", 
                    RowBox[{"First", "[", "#2", "]"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellType$", "=", 
                    RowBox[{"cellTypes$", "\[LeftDoubleBracket]", 
                    RowBox[{"First", "[", "#2", "]"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"action$", "=", 
                    RowBox[{"Hold", "[", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell$", ",", "All", ",", "Cell"}], "]"}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cellType$", "\[Equal]", "\<\"Section\"\>"}], ",", 
                    RowBox[{
                    RowBox[{"subsectionCounter$$", "=", "0"}], ";", 
                    RowBox[{"sectionCounter$$", "++"}], ";", 
                    RowBox[{"ToString", "[", "sectionCounter$$", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"subsectionCounter$$", "++"}], ";", 
                    RowBox[{"\<\"     \"\>", "<>", 
                    RowBox[{"ToString", "[", "sectionCounter$$", "]"}], 
                    "<>", "\<\".\"\>", "<>", 
                    RowBox[{
                    "ToString", "[", "subsectionCounter$$", "]"}]}]}]}], 
                    "]"}], "<>", "\<\" - \"\>"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", "@@", "#1"}], "===", "Cell"}], 
                    ",", "\<\"\"\>", ",", 
                    RowBox[{"RawBoxes", "[", 
                    RowBox[{"RowBox", "@@", "#1"}], "]"}]}], "]"}]}], "}"}], 
                    "]"}], ",", 
                    RowBox[{
                    "FontFamily", "\[Rule]", "\<\"Arial Black\"\>"}]}], "]"}],
                     "\[RuleDelayed]", 
                    RowBox[{"ReleaseHold", "[", "action$", "]"}]}]}], "]"}]}],
                     "]"}]}], "]"}], "&"}], ",", "cellTitles$"}], "]"}]}], 
                 "]"}]}], "]"}]}], "]"}]}]}], "}"}]}], ",", 
        RowBox[{"PassEventsDown", "\[Rule]", "True"}], ",", 
        RowBox[{"PassEventsDown", "\[Rule]", "Automatic"}], ",", 
        RowBox[{"PassEventsUp", "\[Rule]", "True"}]}], "}"}], "]"}]}], "]"}], 
   ",", 
   RowBox[{"DynamicModuleValues", "\[RuleDelayed]", 
    RowBox[{"{", "}"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.629323130748062*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", "i"}]], "Input",
 CellChangeTimes->{{3.6293113762066965`*^9, 3.6293113784682083`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`i, StandardForm],
  ImageSizeCache->{8., {0., 8.}}]], "Output",
 CellChangeTimes->{3.6293113790626497`*^9, 3.6293114246015844`*^9, 
  3.629322910084359*^9}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["hjhjjjjj", "Section",
 CellChangeTimes->{{3.629311436108282*^9, 3.629311436593604*^9}, {
  3.6293114783344994`*^9, 3.629311478395544*^9}, {3.6293229150806956`*^9, 
  3.629322915494975*^9}, {3.629322997735161*^9, 3.6293230051331067`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"TaggingRules", ",", "\"\<Sections\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6290248533748274`*^9, 3.6290248780142956`*^9}}],

Cell[BoxData["Inherited"], "Output",
 CellChangeTimes->{3.6290248794672666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sections", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "&"}], "/@", 
   RowBox[{"Cells", "[", 
    RowBox[{
     RowBox[{"InputNotebook", "[", "]"}], ",", 
     RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.629024896587713*^9, 3.6290249625157743`*^9}, {
  3.6290250965385447`*^9, 3.6290250984087963`*^9}, {3.629025740018055*^9, 
  3.6290257770368023`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Early Stuff\"\>", ",", "\<\"Progress\"\>", 
   ",", "\<\"Author Cell Insertion\"\>", 
   ",", "\<\"ScreenEnvironment changing\"\>", 
   ",", "\<\"Building navBar cells\"\>", ",", "\<\"Resources\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.629024909729493*^9, 3.6290249633243146`*^9}, 
   3.6290251000839157`*^9, {3.6290257431241293`*^9, 3.6290257776111803`*^9}}]
}, Open  ]],

Cell[BoxData["No"], "Input",
 CellChangeTimes->{{3.6290252028434086`*^9, 3.629025205521205*^9}, {
  3.6290252669272423`*^9, 3.6290252672064342`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Cells", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", 
    RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.629025922683577*^9, 3.629025923215928*^9}}],

Cell[BoxData[
 TemplateBox[{16705,"16705","\"Section\""},
  "CellObject"]], "Output",
 CellChangeTimes->{{3.629025919210248*^9, 3.629025924109522*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["sub5", "Subsection",
 CellChangeTimes->{{3.6290271064694433`*^9, 3.6290271072149425`*^9}}],

Cell[BoxData[
 RowBox[{"ReleaseHold", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"SelectionMove", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cells", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", 
        RowBox[{"CellStyle", "\[Rule]", "\"\<Section\>\""}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "All", ",", "Cell"}], "]"}], "]"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.62902590604302*^9, 3.6290259415351696`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"sectionCells", " ", "=", " ", 
     RowBox[{"Cells", "[", 
      RowBox[{
       RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
       RowBox[{"CellStyle", " ", "\[Rule]", " ", "\"\<Section\>\""}]}], 
      "]"}]}], "}"}], ",", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sectionTitles", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
        "sectionCells"}]}], "}"}], ",", "\n", "\t", 
     RowBox[{"MapIndexed", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"cell", " ", "=", " ", 
            RowBox[{"sectionCells", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], ",", 
          "\n", "\t\t", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"action", " ", "=", " ", 
              RowBox[{"Hold", " ", "@", " ", 
               RowBox[{"SelectionMove", "[", 
                RowBox[{"cell", ",", " ", "After", ",", " ", "Cell"}], 
                "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
            RowBox[{"RuleDelayed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ToString", "[", 
                RowBox[{"First", "[", "#2", "]"}], "]"}], " ", "<>", " ", 
               "\"\< - \>\"", " ", "<>", " ", 
               RowBox[{"ToString", "[", "#1", "]"}]}], ",", " ", 
              RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], "]"}]}], 
           "\n", "\t\t", "]"}]}], "]"}], "&"}], ",", "\n", "\t\t", 
       "sectionTitles"}], "\n", "\t", "]"}]}], "\n", "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.6290251034801846`*^9, 3.629025175663437*^9}, {
   3.629025272863207*^9, 3.6290253288616357`*^9}, {3.6290253761483326`*^9, 
   3.6290255187436485`*^9}, 3.629025560731698*^9, {3.629025642204152*^9, 
   3.6290256435730734`*^9}, {3.6290258291606426`*^9, 
   3.6290258360372295`*^9}, {3.629025968325081*^9, 3.629026156729244*^9}, {
   3.629026191315361*^9, 3.629026254699718*^9}, {3.629026483719013*^9, 
   3.6290265499412746`*^9}, {3.629026583767891*^9, 3.629026724822735*^9}, {
   3.629026761624326*^9, 3.6290268005153275`*^9}, {3.6290268372996235`*^9, 
   3.629026916414507*^9}, 3.6290269946306934`*^9, 3.6290283038868265`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"1 - Early Stuff\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{5985,"5985","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"2 - Progress\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6001,"6001","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"3 - hjhjjjjj\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6017,"6017","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"4 - cell stuff\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6033,"6033","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"5 - ScreenEnvironment changing\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6049,"6049","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"6 - Menubar Items\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6065,"6065","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"7 - contentsMenu\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{5361,"5361","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"8 - displayMenu\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6081,"6081","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"9 - insertCellMenu\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6097,"6097","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
   ",", 
   RowBox[{"\<\"10 - Building navBar cells\"\>", "\[RuleDelayed]", 
    RowBox[{"ReleaseHold", "[", 
     RowBox[{"Hold", "[", 
      RowBox[{"SelectionMove", "[", 
       RowBox[{
        TemplateBox[{6113,"6113","\"Section\""},
         "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6290283044071684`*^9, 3.629029653526973*^9, 
  3.6290383392735767`*^9, 3.629040103250001*^9, 3.629040454855623*^9, 
  3.6291147250591455`*^9, 3.6291159835393944`*^9, 3.629122689458563*^9, 
  3.6291227863132105`*^9, 3.629122817541647*^9, 3.6291230153714094`*^9, 
  3.6292914496101427`*^9, 3.6293096894196625`*^9, 3.6293108294520836`*^9, 
  3.6293225298900647`*^9, 3.6293330961173244`*^9, 3.6293350882548532`*^9, 
  3.6293357676862593`*^9, 3.6295744950533667`*^9, 3.6295846822454805`*^9, 
  3.6296282862185936`*^9, 3.6296285596751704`*^9, 3.629630879451166*^9, 
  3.6296339026557674`*^9, 3.6296356797984643`*^9, 3.6296387438388376`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
  RowBox[{"Cells", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
    RowBox[{"CellStyle", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.629027046758527*^9, 3.629027047533046*^9}, {
  3.6290271913900614`*^9, 3.629027261793125*^9}, {3.629027308712485*^9, 
  3.629027311484335*^9}, {3.629027361772229*^9, 3.6290273784693966`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Section\"\>", ",", "\<\"Subsection\"\>", 
   ",", "\<\"Subsection\"\>", ",", "\<\"Section\"\>", 
   ",", "\<\"Subsection\"\>", ",", "\<\"Subsection\"\>", 
   ",", "\<\"Subsection\"\>", ",", "\<\"Section\"\>", ",", "\<\"Section\"\>", 
   ",", "\<\"Section\"\>", ",", "\<\"Section\"\>"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6290270487558603`*^9, 3.629027115181258*^9, {3.62902719562189*^9, 
   3.6290272626036572`*^9}, 3.6290273118976054`*^9, {3.6290273656958556`*^9, 
   3.629027378916688*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DynamicModule", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"RPItutorial`TOC`sectionCounter", " ", "=", " ", "0"}], ",", " ", 
     RowBox[{"RPItutorial`TOC`subsectionCounter", " ", "=", " ", "0"}]}], 
    "}"}], ",", "\n", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"cellsTOC", " ", "=", " ", 
       RowBox[{"Cells", "[", 
        RowBox[{
         RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
         RowBox[{"CellStyle", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}], 
           "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"cellTypes", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
          "cellsTOC"}]}], "}"}], ",", "\n", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cellTitles", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
            "cellsTOC"}]}], "}"}], ",", "\n", "\t", 
         RowBox[{"MapIndexed", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cell", " ", "=", " ", 
                RowBox[{"cellsTOC", "[", 
                 RowBox[{"[", 
                  RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
              ",", "\n", "\t\t", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"cellType", " ", "=", " ", 
                  RowBox[{"cellTypes", "[", 
                   RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                ",", "\n", "\t\t", 
                RowBox[{"With", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"action", " ", "=", " ", 
                    RowBox[{"Hold", " ", "@", " ", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell", ",", " ", "After", ",", " ", "Cell"}], 
                    "]"}]}]}], "}"}], ",", "\n", "\t\t\t", 
                  RowBox[{"RuleDelayed", "[", "\n", "\t\t\t\t", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "cellType", " ", "\[Equal]", " ", "\"\<Section\>\""}], 
                    ",", " ", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"RPItutorial`TOC`sectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", 
                    "]"}]}], ",", " ", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"RPItutorial`TOC`subsectionCounter", "++"}], ";", 
                    " ", 
                    RowBox[{"\"\<   \>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`sectionCounter", "]"}], 
                    " ", "<>", " ", "\"\<.\>\"", " ", "<>", " ", 
                    RowBox[{
                    "ToString", "[", "RPItutorial`TOC`subsectionCounter", 
                    "]"}]}]}]}], "\n", "\t\t\t\t", "]"}], " ", "<>", " ", 
                    "\"\< - \>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "#1", "]"}]}], ",", " ", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], 
                   "]"}]}], "\n", "\t\t", "]"}]}], "]"}]}], "]"}], "&"}], ",",
            "\n", "\t\t", "cellTitles"}], "\n", "\t", "]"}]}], "\n", "]"}]}], 
      "]"}]}], "]"}]}], "]"}]], "Code",
 CellChangeTimes->{{3.6290269983441734`*^9, 3.62902703958173*^9}, {
  3.6290271290055056`*^9, 3.629027145675641*^9}, {3.6290274143503723`*^9, 
  3.6290274811590295`*^9}, {3.629027514961623*^9, 3.629027651049825*^9}, {
  3.6290276831662827`*^9, 3.6290277211605406`*^9}, {3.6290277943934956`*^9, 
  3.6290282556166625`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{RPItutorial`TOC`sectionCounter$$ = 10, 
  RPItutorial`TOC`subsectionCounter$$ = 9}, 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\<\"1 - Early Stuff\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{5985,"5985","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   1.1 - sub1\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6177,"6177","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   1.2 - sub2\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6193,"6193","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"2 - Progress\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6001,"6001","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   2.3 - sub3\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6209,"6209","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   2.4 -                                                     \
                                                  9\\nTextData[{another , \
Cell[BoxData[GraphicsBox[DiskBox[{0, 0}]]], Output, CellChangeTimes -> \
{3.62904 10 }]}]\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6225,"6225","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   2.5 -                                                     \
                                       9\\nTextData[Cell[BoxData[GraphicsBox[\
DiskBox[{0, 0}]]], Output, CellChangeTimes -> {3.62904 10 }]]\"\>", 
     "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6241,"6241","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"3 - hjhjjjjj\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6017,"6017","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   3.6 - sub5\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6257,"6257","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"4 - cell stuff\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6033,"6033","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"5 - ScreenEnvironment changing\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6049,"6049","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"6 - Menubar Items\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6065,"6065","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"7 - contentsMenu\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{5361,"5361","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   7.7 - tester\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6273,"6273","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   7.8 - another\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6289,"6289","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"   7.9 - new2\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{5617,"5617","\"Subsection\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"8 - displayMenu\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6081,"6081","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"9 - insertCellMenu\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6097,"6097","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}], 
    ",", 
    RowBox[{"\<\"10 - Building navBar cells\"\>", "\[RuleDelayed]", 
     RowBox[{"ReleaseHold", "[", 
      RowBox[{"Hold", "[", 
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         TemplateBox[{6113,"6113","\"Section\""},
          "CellObject"], ",", "After", ",", "Cell"}], "]"}], "]"}], "]"}]}]}],
    "}"}],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.629027146403126*^9, {3.6290274712784204`*^9, 3.62902748185649*^9}, 
   3.629027520077036*^9, 3.6290275688498764`*^9, {3.6290276151788406`*^9, 
   3.6290276517352753`*^9}, {3.629027701209345*^9, 3.629027722191228*^9}, 
   3.6290278791031055`*^9, 3.629027972148729*^9, 3.629028110414607*^9, 
   3.6290281589920745`*^9, {3.62902819400848*^9, 3.629028256124899*^9}, 
   3.629028299052588*^9, 3.6290296535880156`*^9, 3.629038339334618*^9, 
   3.6290401034141097`*^9, 3.6290404549196663`*^9, 3.6291147251752243`*^9, 
   3.629115983673484*^9, 3.6291226895256066`*^9, 3.629122786376252*^9, 
   3.6291228176076903`*^9, 3.629123015518509*^9, 3.629291449651168*^9, 
   3.629309689482704*^9, 3.629310829568162*^9, 3.6293225299521065`*^9, 
   3.629333096191374*^9, 3.6293350883299036`*^9, 3.629335767777319*^9, 
   3.6295744951173725`*^9, 3.629584682318408*^9, 3.629628286296646*^9, 
   3.629628559773239*^9, 3.629630879525216*^9, 3.6296339027157736`*^9, 
   3.629635679872472*^9, 3.629638743894843*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jump", " ", "=", " ", 
  RowBox[{"Column", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dynamic", "[", "\n", "\t", 
      RowBox[{"Refresh", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Overlay", "[", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"ProgressIndicator", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                   "}"}], "]"}], " ", "+", " ", "1"}], ")"}], "\n", 
               "\t\t\t\t", "/", "\n", "\t\t\t\t", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                   "}"}], "]"}], " ", "+", " ", "1"}], ")"}]}], ",", " ", 
              RowBox[{"ImageSize", " ", "->", " ", 
               RowBox[{"{", 
                RowBox[{"60", ",", " ", "25"}], "}"}]}], ",", " ", 
              RowBox[{"BaseStyle", "\[Rule]", " ", "Blue"}]}], "]"}], ",", 
            " ", "\n", "\t\t\t", 
            RowBox[{"Style", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", "\n", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                    "}"}], "]"}], " ", "+", " ", "1"}], ")"}], ",", " ", "\n",
                  "\t\t\t\t\t", "\"\</\>\"", ",", " ", "\n", "\t\t\t\t\t", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}],
                     "}"}], "]"}], " ", "+", " ", "1"}], ")"}]}], "\n", 
                "\t\t\t\t", "}"}], "]"}], ",", " ", "\n", "\t\t\t\t", "14", 
              ",", " ", 
              RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", 
              RowBox[{"FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}],
              "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], ",", " ", 
          RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ", 
        "\n", "\t\t", 
        RowBox[{"UpdateInterval", " ", "->", " ", "0.5"}]}], "\n", "\t", 
       "]"}], "]"}], ",", "\n", 
     RowBox[{"Button", "[", "\"\<Contents\>\"", "]"}]}], "}"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.628972885409663*^9, 3.6289729010991535`*^9}, {
  3.6292913961965895`*^9, 3.6292914417608953`*^9}, {3.629291548040936*^9, 
  3.6292915750850134`*^9}, {3.6292916126639233`*^9, 3.629291675288782*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     DynamicBox[ToBoxes[
       Refresh[
        Overlay[{
          
          ProgressIndicator[(CurrentValue[{"CounterValue", "slideRPI"}] + 1)/(
           CurrentValue[{"MaxCounterValue", "slideRPI"}] + 1), 
           ImageSize -> {60, 25}, BaseStyle -> Blue], 
          Style[
           
           Row[{CurrentValue[{"CounterValue", "slideRPI"}] + 1, "/", 
             CurrentValue[{"MaxCounterValue", "slideRPI"}] + 1}], 14, 
           FontColor -> Black, FontFamily -> "Arial Black"]}, Alignment -> 
         Center], UpdateInterval -> 0.5], StandardForm],
      ImageSizeCache->{60., {9., 16.}}]},
    {
     ButtonBox["\<\"Contents\"\>",
      Appearance->Automatic,
      ButtonFunction:>{},
      Evaluator->None,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.629291648830092*^9, 3.629291675724067*^9}, 
   3.629309689500716*^9, 3.6293108295941777`*^9, 3.6293225299771233`*^9, 
   3.6293330962103853`*^9, 3.6293350883479147`*^9, 3.6293357677913322`*^9, 
   3.629574495128374*^9, 3.6295846823303957`*^9, 3.6296282863146567`*^9, 
   3.629628559790248*^9, 3.6296308795422335`*^9, 3.6296339027277746`*^9, 
   3.629635679884473*^9, 3.629638743906844*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jumpAuthor", " ", "=", " ", 
  RowBox[{"Dynamic", "[", "\n", "\t", 
   RowBox[{"Refresh", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"Overlay", "[", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"ProgressIndicator", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"CurrentValue", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], "}"}],
                "]"}], " ", "+", " ", "1"}], ")"}], "\n", "\t\t\t\t", "/", 
            "\n", "\t\t\t\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{"{", 
                 RowBox[{
                 "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                 "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", "1", 
              ",", 
              RowBox[{"CurrentValue", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                "}"}], "\n", "\t\t\t", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{"ImageSize", " ", "->", " ", 
            RowBox[{"{", 
             RowBox[{"60", ",", " ", "25"}], "}"}]}]}], "]"}], ",", " ", "\n",
          "\t\t\t", 
         RowBox[{"Style", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{"Row", "[", 
            RowBox[{"{", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"CurrentValue", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<CounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                  "}"}], "]"}], " ", "+", " ", "1"}], ")"}], ",", " ", "\n", 
              "\t\t\t\t\t", "\"\</\>\"", ",", " ", "\n", "\t\t\t\t\t", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                   "}"}], "\n", "\t\t\t", "]"}], "\[Equal]", "0"}], ",", "1", 
                ",", 
                RowBox[{"CurrentValue", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<MaxCounterValue\>\"", ",", " ", "\"\<slideRPI\>\""}], 
                  "}"}], "\n", "\t\t\t", "]"}]}], "]"}]}], "\n", "\t\t\t\t", 
             "}"}], "]"}], ",", " ", "\n", "\t\t\t\t", "14", ",", " ", 
           RowBox[{"FontColor", " ", "->", " ", "Black"}], ",", " ", 
           RowBox[{"FontFamily", " ", "->", " ", "\"\<Arial Black\>\""}]}], 
          "\n", "\t\t\t", "]"}]}], "\n", "\t\t", "}"}], ",", " ", 
       RowBox[{"Alignment", " ", "->", " ", "Center"}]}], "]"}], ",", " ", 
     "\n", "\t\t", 
     RowBox[{"UpdateInterval", " ", "->", " ", "0.1"}]}], "\n", "\t", "]"}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.628972885409663*^9, 3.6289729010991535`*^9}, {
  3.628976981487197*^9, 3.6289769958548017`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Refresh[
    Overlay[{
      ProgressIndicator[(CurrentValue[{"CounterValue", "slideRPI"}] + 1)/If[
       CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
        CurrentValue[{"MaxCounterValue", "slideRPI"}]], 
       ImageSize -> {60, 25}], 
      Style[
       Row[{CurrentValue[{"CounterValue", "slideRPI"}] + 1, "/", 
         If[CurrentValue[{"MaxCounterValue", "slideRPI"}] == 0, 1, 
          CurrentValue[{"MaxCounterValue", "slideRPI"}]]}], 14, FontColor -> 
       Black, FontFamily -> "Arial Black"]}, Alignment -> Center], 
    UpdateInterval -> 0.1], StandardForm],
  ImageSizeCache->{60., {9., 16.}}]], "Output",
 CellChangeTimes->{3.628976997290753*^9, 3.629029653627041*^9, 
  3.6290383393746467`*^9, 3.629040103488158*^9, 3.6290404549546876`*^9, 
  3.6291147252262573`*^9, 3.629115983747534*^9, 3.6291226895546255`*^9, 
  3.6291227864082747`*^9, 3.6291228176377087`*^9, 3.6291230155895567`*^9, 
  3.6292914496841908`*^9, 3.629309689517728*^9, 3.629310829614191*^9, 
  3.6293225299961367`*^9, 3.629333096222395*^9, 3.6293350883599234`*^9, 
  3.629335767805338*^9, 3.629574495139375*^9, 3.629584682340386*^9, 
  3.6296282863326693`*^9, 3.629628559806261*^9, 3.629630879557238*^9, 
  3.6296339027397757`*^9, 3.629635679895474*^9, 3.6296387439148455`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEndToken", "[", 
   RowBox[{
    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\n", "\t", 
    RowBox[{"{", 
     RowBox[{"\"\<ScrollPage\>\"", ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6289727773202276`*^9, 3.6289728312282596`*^9}}],

Cell["increments slideRPI", "Text",
 CellChangeTimes->{
  3.6289680003940926`*^9, {3.6289680518594894`*^9, 3.628968072809493*^9}},
 CounterIncrements->"slideRPI"],

Cell["increments slideRPI", "Text",
 CellChangeTimes->{
  3.6289680003940926`*^9, {3.6289680518594894`*^9, 3.628968072809493*^9}},
 CounterIncrements->"slideRPI"],

Cell["increments slideRPI", "Text",
 CellChangeTimes->{
  3.6289680003940926`*^9, {3.6289680518594894`*^9, 3.628968072809493*^9}},
 CounterIncrements->"slideRPI"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dynamic", "@", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"steps", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"#", "-", "1"}], ")"}], "-", 
          RowBox[{"CurrentValue", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<CounterValue\>\"", ",", "\"\<slideRPI\>\""}], "}"}], 
           "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"cmds", " ", "=", " ", 
           RowBox[{"Flatten", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"FrontEndToken", "[", 
                 RowBox[{
                  RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\n", 
                  "\t", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"steps", "\[GreaterEqual]", "0"}], ",", 
                    "\"\<ScrollPageNext\>\"", ",", 
                    "\"\<ScrollPagePrevious\>\""}], "]"}]}], "]"}], ",", "\n",
                 "\t", 
                RowBox[{"{", 
                 RowBox[{"Abs", "[", "steps", "]"}], "}"}]}], "]"}], "&"}], "/@", 
             RowBox[{"{", "steps", "}"}]}], "]"}]}], "}"}], ",", 
         RowBox[{"RuleDelayed", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"FrontEnd`SelectionMove", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "Before", 
                 ",", "Notebook", ",", 
                 RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ",", 
               "\n", "\t", "cmds"}], "\[IndentingNewLine]", "}"}], "]"}], 
            "]"}]}], "]"}]}], "]"}]}], "]"}], "&"}], ",", "\n", "\t\t", 
    RowBox[{"Range", "[", 
     RowBox[{"CurrentValue", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<MaxCounterValue\>\"", ",", "\"\<slideRPI\>\""}], "}"}], 
      "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6289722227880116`*^9, 3.628972251061917*^9}, {
  3.628972297813155*^9, 3.628972486930534*^9}, {3.6289726537859488`*^9, 
  3.6289726700568314`*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   Map[With[{$CellContext`steps = (# - 1) - 
       CurrentValue[{"CounterValue", "slideRPI"}]}, 
     With[{$CellContext`cmds = Flatten[
         Map[Table[
           FrontEndToken[
            FrontEnd`InputNotebook[], 
            
            If[$CellContext`steps >= 0, "ScrollPageNext", 
             "ScrollPagePrevious"]], {
            Abs[$CellContext`steps]}]& , {$CellContext`steps}]]}, # :> 
      FrontEndExecute[
        Flatten[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Before, Notebook, AutoScroll -> 
           False], $CellContext`cmds}]]]]& , 
    Range[
     CurrentValue[{"MaxCounterValue", "slideRPI"}]]], StandardForm],
  ImageSizeCache->{16., {2., 8.}}]], "Output",
 CellChangeTimes->{
  3.6289722033400116`*^9, 3.628972252460847*^9, {3.6289724035428*^9, 
   3.6289724511426144`*^9}, 3.6289724883524857`*^9, {3.6289726549197063`*^9, 
   3.628972670916398*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NotebookFind", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<PageBreak\>\"", ",", "All",
     ",", "CellStyle", ",", 
    RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SelectedCells", "[", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6289690936596518`*^9, 3.6289691989490237`*^9}, {
  3.6289693150607896`*^9, 3.6289693459094105`*^9}}],

Cell[BoxData[
 TemplateBox[{8433,"8433","\"PageBreak\""},
  "CellObject"]], "Output",
 CellChangeTimes->{{3.628969320141179*^9, 3.628969346929084*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", 
    RowBox[{"#", ",", "\"\<CellID\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"Cells", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", 
    RowBox[{"CellStyle", "\[Rule]", "\"\<PageBreak\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6289694392662106`*^9, 3.6289694874244037`*^9}, {
  3.6289696084852705`*^9, 3.6289696844010105`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"CellID", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"CellID", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"CellID", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"CellID", "\[Rule]", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.628969488123867*^9, {3.6289696162314463`*^9, 3.62896968484831*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", "Next", ",", "Cell", ",", "2"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.62896922948744*^9, 3.6289692594306097`*^9}}],

Cell[BoxData[
 RowBox[{"FrontEndTokenExecute", "[", 
  RowBox[{"\"\<ScrollPage\>\"", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.628968453787601*^9, 3.628968525996371*^9}, 
   3.628968583846036*^9}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell["increments slideRPI", "Text",
 CellChangeTimes->{
  3.6289680003940926`*^9, {3.6289680518594894`*^9, 3.628968072809493*^9}},
 CounterIncrements->"slideRPI"],

Cell["increments slideRPI", "Text",
 CellChangeTimes->{
  3.6289680003940926`*^9, {3.6289680518594894`*^9, 3.628968072809493*^9}},
 CounterIncrements->"slideRPI"],

Cell["increments slideRPI", "Text",
 CellChangeTimes->{
  3.6289680003940926`*^9, {3.6289680630960045`*^9, 3.628968076530981*^9}},
 CounterIncrements->"slideRPI"],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{"fg", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6289682576521187`*^9, 3.628968301110151*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"fg", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"fg", "[", 
    RowBox[{"2", ",", "1"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.628968289279252*^9, 3.6289683015244274`*^9}}]
}, Open  ]],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToBoxes", "@", 
  RowBox[{"Dynamic", "[", 
   RowBox[{"ActionMenu", "[", 
    RowBox[{"\"\<d\>\"", ",", 
     RowBox[{"Range", "[", 
      RowBox[{"CurrentValue", "[", 
       RowBox[{
        RowBox[{"InputNotebook", "[", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<MaxCounterValue\>\"", ",", "\"\<Section\>\""}], "}"}]}],
        "]"}], "]"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6289668864059467`*^9, 3.6289670637350593`*^9}, {
  3.628967096963128*^9, 3.6289671299421663`*^9}, {3.6289673819347534`*^9, 
  3.6289674263974714`*^9}, {3.628967458809333*^9, 3.6289674610728407`*^9}}],

Cell[BoxData[
 RowBox[{"DynamicBox", "[", 
  RowBox[{"ToBoxes", "[", 
   RowBox[{
    RowBox[{"ActionMenu", "[", 
     RowBox[{"\<\"d\"\>", ",", 
      RowBox[{"Range", "[", 
       RowBox[{"CurrentValue", "[", 
        RowBox[{
         RowBox[{"InputNotebook", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"\<\"MaxCounterValue\"\>", ",", "\<\"Section\"\>"}], 
          "}"}]}], "]"}], "]"}]}], "]"}], ",", "StandardForm"}], "]"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.6289669065479984`*^9, 3.6289669518943005`*^9}, {
   3.6289670339161224`*^9, 3.6289670642393937`*^9}, 3.628967397196946*^9, 
   3.6289674613600345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\"\<MaxCounterValue\>\"", ",", "\"\<slideRPI\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6289671397907543`*^9, 3.628967140247058*^9}, {
  3.6289672327108583`*^9, 3.6289673673560085`*^9}}],

Cell[BoxData["\<\"5\"\>"], "Output",
 CellChangeTimes->{{3.6289672335524144`*^9, 3.6289672412695727`*^9}, 
   3.628967274631028*^9, {3.6289673063102036`*^9, 3.628967333631461*^9}}]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["cell stuff", "Section",
 CellChangeTimes->{{3.629325223754484*^9, 3.6293252255036545`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"hori", "=", 
  RowBox[{"PaletteNotebook", "[", "\n", 
   RowBox[{
    RowBox[{"Grid", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"item", " ", "=", " ", "#"}], ",", " ", 
             RowBox[{"do", " ", "=", " ", 
              RowBox[{"action", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", " ",
            "\n", "\t\t", 
           RowBox[{"Button", "[", "\[IndentingNewLine]", "\t\t\t", 
            RowBox[{
             RowBox[{"column", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"icon", "[", 
                RowBox[{"Sequence", " ", "@@", " ", 
                 RowBox[{"Take", "[", 
                  RowBox[{"item", ",", " ", 
                   RowBox[{
                    RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                    "2"}]}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"item", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "2"}], "]"}], "]"}]}], "\n", "\t\t\t", "]"}], 
             ",", "\n", "\t\t\t", 
             RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}], "\n", "\t\t", 
            "]"}]}], "\n", "\t", "]"}], "&"}], " ", "/@", " ", "itemInfo"}], 
       "}"}], ",", "\n", 
      RowBox[{"Spacings", " ", "\[Rule]", " ", "0"}]}], "]"}], ",", "\n", 
    RowBox[{"WindowTitle", " ", "\[Rule]", " ", "\"\<Cell Insertion\>\""}], 
    ",", "\n", 
    RowBox[{"WindowMargins", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"50", ",", " ", "Automatic"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "50"}], "}"}]}], "}"}]}], ",", "\n", 
    RowBox[{"Deployed", " ", "\[Rule]", " ", "True"}], ",", "\n", 
    RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627403213132044*^9, 3.6274032146891994`*^9}}],

Cell[BoxData[
 InterpretationBox[
  PanelBox[GridBox[{
     {
      TooltipBox[
       ButtonBox[
        StyleBox[
         DynamicBox[FEPrivate`FrontEndResource[
          "FEBitmaps", "ManipulatePasteIcon"],
          ImageSizeCache->{13., {4., 9.}}],
         DynamicUpdating->True],
        Appearance->{Automatic, None},
        ButtonFunction:>FrontEndExecute[{
           FrontEnd`NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                RowBox[{"Grid", "[", 
                  RowBox[{
                    RowBox[{"{", "itemInfo", "}"}], ",", 
                    RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]]]}, 
             WindowTitle -> "Cell Insertion", 
             WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> 
             True, Saveable -> False, WindowElements -> {}, 
             WindowMargins -> {{Automatic, 0}, {Automatic, 0}}, WindowSize -> 
             All, StyleDefinitions -> "Palette.nb"]]}],
        DefaultBaseStyle->{},
        Evaluator->None,
        Method->"Queued"],
       DynamicBox[
        ToBoxes[
         FEPrivate`FrontEndResource["FEStrings", "NotebookInNewWindow"]]]]},
     {
      ItemBox[GridBox[{
         {Cell[BoxData[
           RowBox[{"Grid", "[", 
            RowBox[{
             RowBox[{"{", "itemInfo", "}"}], ",", 
             RowBox[{"Spacings", "\[Rule]", "0"}]}], "]"}]]]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}}],
       Background->GrayLevel[1],
       Frame->True,
       FrameStyle->GrayLevel[0, 0.2]]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}}],
   BaseStyle->{FontFamily -> "Times"},
   DefaultBaseStyle->{},
   FrameMargins->5],
  PaletteNotebook[
   Grid[{$CellContext`itemInfo}, Spacings -> 0], WindowTitle -> 
   "Cell Insertion", WindowMargins -> {{50, Automatic}, {Automatic, 50}}, 
   Deployed -> True, Saveable -> False]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQB2LWc6K/drC9dozgEjuyC0grqdzr3gekb7AeYtsPpNlX
c+iZsgPFHZmcQfTqL95RWpyvHV/IHW9JAdJGa48qLAHS0/4frFgJpPn437wD
0f/kK4y3AGl27leqW4G0xm2WjyD609+9SpeBtEBbWcJ1IB1j/9/mBpA+MOFl
Boi2v7hlzR8gfbSEyesvSP1niwkMXK8ddU6EzAHRcgY2C0D03VN/doDo41/s
vgcBactXpvejgfSJuztzY4C0Srm7ShKQdi7h9E0H0mr2vG4ZQHpe/u9ZINr+
3lPtu0D6jLaP6iMg/aDjTP53IP3xwO+JINqm89PmH0D6pfsN3V9AmsH4L/dv
IL3h4t+uP0AaAEW0leE=
  "]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"cellPalette", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"hori", " ", "=", " ", 
       RowBox[{"PaletteNotebook", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"With", "[", "\n", "\t\t\t", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"item", " ", "=", " ", "#"}], ",", " ", 
                  RowBox[{"do", " ", "=", " ", 
                   RowBox[{"action", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
                " ", "\n", "\t\t\t", 
                RowBox[{"Button", "[", "\[IndentingNewLine]", "\t\t\t\t", 
                 RowBox[{
                  RowBox[{"column", "[", "\n", "\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"icon", "[", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"item", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                    "2"}]}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"item", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "\n", "\t\t\t\t", 
                   "]"}], ",", "\n", "\t\t\t\t", 
                  RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}], "\n", 
                 "\t\t\t", "]"}]}], "\n", "\t\t", "]"}], "&"}], " ", "/@", 
             " ", "itemInfo"}], "}"}], ",", "\n", "\t", 
           RowBox[{"Spacings", " ", "\[Rule]", " ", "0"}]}], "]"}], ",", "\n",
          "\t", 
         RowBox[{
         "WindowTitle", " ", "\[Rule]", " ", "\"\<Cell Insertion\>\""}], ",", 
         "\n", "\t", 
         RowBox[{"WindowMargins", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", " ", "Automatic"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", " ", "50"}], "}"}]}], "}"}]}], ",", 
         "\n", "\t", 
         RowBox[{"Deployed", " ", "\[Rule]", " ", "True"}], ",", "\n", "\t", 
         RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], "\n", "]"}]}], 
      ",", "\n", 
      RowBox[{"vert", " ", "=", " ", 
       RowBox[{"PaletteNotebook", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"With", "[", "\n", "\t\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"item", " ", "=", " ", "#"}], ",", " ", 
                RowBox[{"do", " ", "=", " ", 
                 RowBox[{"action", "[", 
                  RowBox[{"#", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
              "\n", "\t\t\t\t", 
              RowBox[{"{", "\n", "\t\t\t\t", 
               RowBox[{
                RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"Button", "[", "\[IndentingNewLine]", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"icon", "[", 
                   RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"item", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                    "2"}]}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}], "\n", 
                 "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"\"\<Alt + \>\"", " ", "<>", " ", 
                   RowBox[{"item", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], ",", " ", "12", ",", 
                  " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", "\n", "\t\t\t\t", 
                RowBox[{"Spacer", "[", "5", "]"}]}], "\n", "\t\t\t\t", 
               "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}], "&"}], " ", "/@",
            " ", "itemInfo"}], "]"}], ",", "\n", "\t", 
         RowBox[{
         "WindowTitle", " ", "\[Rule]", " ", "\"\<Cell Insertion\>\""}], ",", 
         "\n", "\t", 
         RowBox[{"WindowMargins", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"50", ",", " ", "Automatic"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"Automatic", ",", " ", "50"}], "}"}]}], "}"}]}], ",", 
         "\n", "\t", 
         RowBox[{"Deployed", " ", "\[Rule]", " ", "True"}], ",", "\n", "\t", 
         RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], "\n", 
        "]"}]}]}], "}"}], ",", "\n", "\t", 
    RowBox[{"ActionMenu", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Cell Palette\>\"", ",", " ", "14", ",", " ", 
        RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
       "]"}], ",", "\n", "\t\t", 
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Horizontal\>\"", ",", " ", "14", ",", " ", 
           RowBox[{
           "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
          "]"}], " ", "\[RuleDelayed]", " ", 
         RowBox[{"CreateWindow", " ", "@", " ", "hori"}]}], ",", "\n", 
        "\t\t\t", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Vertical\>\"", ",", " ", "14", ",", " ", 
           RowBox[{
           "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
          "]"}], " ", "\[RuleDelayed]", " ", 
         RowBox[{"CreateWindow", " ", "@", " ", "vert"}]}]}], "\n", "\t\t", 
       "}"}]}], "\n", "\t", "]"}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.627234453719458*^9, 3.6272345101559634`*^9}, {
   3.6272345511682177`*^9, 3.62723456290701*^9}, {3.62723459356485*^9, 
   3.627234597419411*^9}, {3.627235353729911*^9, 3.6272353562295713`*^9}, {
   3.627236152491474*^9, 3.6272363963011336`*^9}, {3.627236458670586*^9, 
   3.6272365620782976`*^9}, {3.62723664864489*^9, 3.627236676652502*^9}, {
   3.6272368592960653`*^9, 3.627237051902417*^9}, {3.6272377375272303`*^9, 
   3.6272377428347645`*^9}, {3.627238358224145*^9, 3.627238391201711*^9}, {
   3.6272386140984464`*^9, 3.6272386393212104`*^9}, {3.627238673961229*^9, 
   3.627238674445546*^9}, {3.627238908146248*^9, 3.627238914979641*^9}, {
   3.6272401241194196`*^9, 3.6272401333065248`*^9}, {3.6272571473080997`*^9, 
   3.6272573309184475`*^9}, {3.6273302854892416`*^9, 3.627330291455237*^9}, 
   3.62740311128486*^9, {3.6274031566333947`*^9, 3.627403159534685*^9}, {
   3.6274032060213327`*^9, 3.6274032361213427`*^9}, {3.6274033263383636`*^9, 
   3.627403350025732*^9}, {3.6274033957573047`*^9, 3.627403502711999*^9}, 
   3.627661318872468*^9}],

Cell[BoxData[
 ActionMenuBox[
  StyleBox["\<\"Cell Palette\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14], {
  StyleBox["\<\"Horizontal\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14]:>CreateWindow[
   PaletteNotebook[
    Grid[{$CellContext`itemInfo}, Spacings -> 0], WindowTitle -> 
    "Cell Insertion", WindowMargins -> {{50, Automatic}, {Automatic, 50}}, 
    Deployed -> True, Saveable -> False]], 
  StyleBox["\<\"Vertical\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14]:>CreateWindow[
   PaletteNotebook[
    Grid[$CellContext`itemInfo], WindowTitle -> "Cell Insertion", 
    WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> True, 
    Saveable -> False]]}]], "Output",
 CellChangeTimes->{3.6276613193027573`*^9, 3.6284379881032476`*^9, 
  3.628683032887057*^9, 3.62868399056742*^9, 3.6288031102875643`*^9, 
  3.6289333822434387`*^9, 3.6289443260904675`*^9, 3.6289452714148645`*^9, 
  3.62896629979193*^9, 3.6289682393548756`*^9, 3.6289698641877747`*^9, 
  3.629029653974272*^9, 3.6290383397408895`*^9, 3.6290401040255194`*^9, 
  3.6290404553339434`*^9, 3.6291147257366004`*^9, 3.629115984115779*^9, 
  3.6291226898127995`*^9, 3.629122786682457*^9, 3.6291228179158983`*^9, 
  3.62912301599883*^9, 3.629291450011409*^9, 3.6293096897258687`*^9, 
  3.62931082986736*^9, 3.6293225302953367`*^9, 3.629333096322461*^9, 
  3.6293350884339724`*^9, 3.6293357678793926`*^9, 3.6295744951963806`*^9, 
  3.629584682394332*^9, 3.629628286411724*^9, 3.6296285598893156`*^9, 
  3.629630879599264*^9, 3.62963390277378*^9, 3.629635679927477*^9, 
  3.629638743944848*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{"cellPalette", ",", 
    RowBox[{"Spacer", "[", "5", "]"}], ",", "insertCell"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6273302954308863`*^9, 3.6273303299309473`*^9}}],

Cell[BoxData[
 TemplateBox[{ActionMenuBox[
    StyleBox[
    "\"Cell Palette\"", 14, FontFamily -> "Arial Black", StripOnInput -> 
     False], {StyleBox[
      "\"Horizontal\"", 14, FontFamily -> "Arial Black", StripOnInput -> 
       False] :> CreateWindow[
       PaletteNotebook[
        Grid[{{
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[
                 RGBColor[1, 0.5, 1]], 
                Rectangle[{0, 0}], 
                RGBColor[0.4, 0, 0.7], 
                Thickness[0.04], Null, 
                Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Title", 12, TextAlignment -> Center, FontColor -> 
                  RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
                 0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 1", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Title"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[
                 RGBColor[1, 0.5, 1]], 
                Rectangle[{0, 0}], 
                RGBColor[0.4, 0, 0.7], 
                Thickness[0.025], Null, 
                Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Section", 12, TextAlignment -> Center, FontColor -> 
                  RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
                 0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 2", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Section"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[
                 RGBColor[1, 0.5, 1]], 
                Rectangle[{0, 0}], 
                RGBColor[0.4, 0, 0.7], 
                Thickness[0.01], Null, 
                Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Subsection", 12, TextAlignment -> Center, FontColor -> 
                  RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
                 0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 3", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Subsection"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.2, 0, 0.8]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.2, 0, 0.8]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                   FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 4", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "READ"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.9, 0.55, 0]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.9, 0.55, 0]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                  FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 5", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "DO"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.2, 0.65, 0.2]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.2, 0.65, 0.2]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                  FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 6", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TRY"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[1, 0.1, 0.3]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[1, 0.1, 0.3]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                   FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 7", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "CODE"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.7, 0.6, 0.5]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.7, 0.6, 0.5]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "TEACH", 12, TextAlignment -> Left, FontColor -> 
                  GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                 0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 8", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TEACH"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[None], 
                Rectangle[{0, 0}], 
                FaceForm[
                 GrayLevel[0.85]], 
                
                Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {
                  1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Page", 12, TextAlignment -> Center, Background -> None, 
                  FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                 0.475, 0.5}, {1, 0}], 
                Text[
                 Style[
                 "Break", 12, TextAlignment -> Center, Background -> None, 
                  FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                 0.525, 0.5}, {-1, 0}], 
                Thickness[0.02], Null, 
                Dashing[Tiny], 
                Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
               AspectRatio -> Rational[1, 3]], 
              Style["Alt + 9", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "PageBreak"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]]}}, Spacings -> 0], WindowTitle -> 
        "Cell Insertion", WindowMargins -> {{50, Automatic}, {Automatic, 50}},
         Deployed -> True, Saveable -> False]], 
     StyleBox["\"Vertical\"", 14, FontFamily -> "Arial Black", StripOnInput -> 
       False] :> CreateWindow[
       PaletteNotebook[
        Grid[{{
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[
               RGBColor[1, 0.5, 1]], 
              Rectangle[{0, 0}], 
              RGBColor[0.4, 0, 0.7], 
              Thickness[0.04], Null, 
              Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Title", 12, TextAlignment -> Center, FontColor -> 
                RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
               0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
             Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Title"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 1", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[
               RGBColor[1, 0.5, 1]], 
              Rectangle[{0, 0}], 
              RGBColor[0.4, 0, 0.7], 
              Thickness[0.025], Null, 
              Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Section", 12, TextAlignment -> Center, FontColor -> 
                RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
               0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
             Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Section"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 2", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[
               RGBColor[1, 0.5, 1]], 
              Rectangle[{0, 0}], 
              RGBColor[0.4, 0, 0.7], 
              Thickness[0.01], Null, 
              Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Subsection", 12, TextAlignment -> Center, FontColor -> 
                RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
               0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
             Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Subsection"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 3", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.2, 0, 0.8]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.2, 0, 0.8]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "READ"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 4", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.9, 0.55, 0]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.9, 0.55, 0]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "DO"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 5", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.2, 0.65, 0.2]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.2, 0.65, 0.2]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TRY"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 6", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[1, 0.1, 0.3]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[1, 0.1, 0.3]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "CODE"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 7", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.7, 0.6, 0.5]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.7, 0.6, 0.5]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "TEACH", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TEACH"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 8", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[None], 
              Rectangle[{0, 0}], 
              FaceForm[
               GrayLevel[0.85]], 
              
              Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1, 
                1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Page", 12, TextAlignment -> Center, Background -> None, 
                FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
               0.475, 0.5}, {1, 0}], 
              Text[
               Style[
               "Break", 12, TextAlignment -> Center, Background -> None, 
                FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
               0.525, 0.5}, {-1, 0}], 
              Thickness[0.02], Null, 
              Dashing[Tiny], 
              Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
             AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "PageBreak"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 9", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}}], WindowTitle -> "Cell Insertion", 
        WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> True,
         Saveable -> False]]}],InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[5]],ActionMenuBox[
    StyleBox[
    "\"Insert Cell\"", 14, FontFamily -> "Arial Black", StripOnInput -> 
     False], {TagBox[
       GridBox[{{
          GraphicsBox[{
            EdgeForm[None], 
            FaceForm[
             RGBColor[1, 0.5, 1]], 
            RectangleBox[{0, 0}], 
            RGBColor[0.4, 0, 0.7], 
            Thickness[0.04], Null, 
            LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"Title\"", 12, TextAlignment -> Center, FontColor -> 
               RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black", 
               StripOnInput -> False], TraditionalForm], {0.5, 0.5}, {0, 0}]},
            ImageSize -> {90, 30}, AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 1\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "Title"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            EdgeForm[None], 
            FaceForm[
             RGBColor[1, 0.5, 1]], 
            RectangleBox[{0, 0}], 
            RGBColor[0.4, 0, 0.7], 
            Thickness[0.025], Null, 
            LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"Section\"", 12, TextAlignment -> Center, FontColor -> 
               RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black", 
               StripOnInput -> False], TraditionalForm], {0.5, 0.5}, {0, 0}]},
            ImageSize -> {90, 30}, AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 2\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "Section"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            EdgeForm[None], 
            FaceForm[
             RGBColor[1, 0.5, 1]], 
            RectangleBox[{0, 0}], 
            RGBColor[0.4, 0, 0.7], 
            Thickness[0.01], Null, 
            LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"Subsection\"", 12, TextAlignment -> Center, FontColor -> 
               RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black", 
               StripOnInput -> False], TraditionalForm], {0.5, 0.5}, {0, 0}]},
            ImageSize -> {90, 30}, AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 3\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "Subsection"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            FaceForm[
             RGBColor[0.2, 0, 0.8]], 
            RectangleBox[{0, 0}], 
            RectangleBox[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.2, 0, 0.8]], 
            RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"READ\"", 12, TextAlignment -> Left, FontColor -> 
               GrayLevel[1], FontFamily -> "Arial Black", StripOnInput -> 
               False], TraditionalForm], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 4\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "READ"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            FaceForm[
             RGBColor[0.9, 0.55, 0]], 
            RectangleBox[{0, 0}], 
            RectangleBox[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.9, 0.55, 0]], 
            RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"DO\"", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
               FontFamily -> "Arial Black", StripOnInput -> False], 
              TraditionalForm], {0.15, 0.5}, {-1, 0}]}, ImageSize -> {90, 30},
            AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 5\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "DO"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            FaceForm[
             RGBColor[0.2, 0.65, 0.2]], 
            RectangleBox[{0, 0}], 
            RectangleBox[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.2, 0.65, 0.2]], 
            RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"TRY\"", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                FontFamily -> "Arial Black", StripOnInput -> False], 
              TraditionalForm], {0.15, 0.5}, {-1, 0}]}, ImageSize -> {90, 30},
            AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 6\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "TRY"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            FaceForm[
             RGBColor[1, 0.1, 0.3]], 
            RectangleBox[{0, 0}], 
            RectangleBox[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[1, 0.1, 0.3]], 
            RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"CODE\"", 12, TextAlignment -> Left, FontColor -> 
               GrayLevel[1], FontFamily -> "Arial Black", StripOnInput -> 
               False], TraditionalForm], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 7\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "CODE"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            FaceForm[
             RGBColor[0.7, 0.6, 0.5]], 
            RectangleBox[{0, 0}], 
            RectangleBox[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.7, 0.6, 0.5]], 
            RectangleBox[{0.1, 0.1}, {0.9, 0.9}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"TEACH\"", 12, TextAlignment -> Left, FontColor -> 
               GrayLevel[1], FontFamily -> "Arial Black", StripOnInput -> 
               False], TraditionalForm], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 8\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "TEACH"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], TagBox[
       GridBox[{{
          GraphicsBox[{
            EdgeForm[None], 
            FaceForm[None], 
            RectangleBox[{0, 0}], 
            FaceForm[
             GrayLevel[0.85]], 
            
            PolygonBox[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1,
               1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"Page\"", 12, TextAlignment -> Center, Background -> None, 
               FontColor -> GrayLevel[0], FontFamily -> "Arial Black", 
               StripOnInput -> False], TraditionalForm], {0.475, 0.5}, {1, 
             0}], 
            InsetBox[
             FormBox[
              StyleBox[
              "\"Break\"", 12, TextAlignment -> Center, Background -> None, 
               FontColor -> GrayLevel[0], FontFamily -> "Arial Black", 
               StripOnInput -> False], TraditionalForm], {0.525, 0.5}, {-1, 
             0}], 
            Thickness[0.02], Null, 
            Dashing[Tiny], 
            LineBox[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
           AspectRatio -> NCache[
             Rational[1, 3], 0.3333333333333333]], 
          InterpretationBox[
           StyleBox[
            
            GraphicsBox[{}, ImageSize -> {1, 0}, BaselinePosition -> 
             Baseline], "CacheGraphics" -> False], 
           Spacer[1]], 
          StyleBox[
          "\"Alt + 9\"", 12, FontFamily -> "Arial Black", StripOnInput -> 
           False]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"] :> 
     ReleaseHold[
       Hold[
        FrontEndExecute[{
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
          FrontEnd`NotebookWrite[
           FrontEnd`InputNotebook[], 
           Cell["", "PageBreak"]], 
          FrontEnd`SelectionMove[
           FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
           False]}]]], Delimiter, 
     StyleBox["\"Launch Horizontal Palette\"", 12, FontFamily -> 
       "Arial Black", StripOnInput -> False] :> CreateWindow[
       PaletteNotebook[
        Grid[{{
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[
                 RGBColor[1, 0.5, 1]], 
                Rectangle[{0, 0}], 
                RGBColor[0.4, 0, 0.7], 
                Thickness[0.04], Null, 
                Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Title", 12, TextAlignment -> Center, FontColor -> 
                  RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
                 0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 1", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Title"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[
                 RGBColor[1, 0.5, 1]], 
                Rectangle[{0, 0}], 
                RGBColor[0.4, 0, 0.7], 
                Thickness[0.025], Null, 
                Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Section", 12, TextAlignment -> Center, FontColor -> 
                  RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
                 0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 2", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Section"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[
                 RGBColor[1, 0.5, 1]], 
                Rectangle[{0, 0}], 
                RGBColor[0.4, 0, 0.7], 
                Thickness[0.01], Null, 
                Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Subsection", 12, TextAlignment -> Center, FontColor -> 
                  RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
                 0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 3", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Subsection"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.2, 0, 0.8]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.2, 0, 0.8]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                   FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 4", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "READ"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.9, 0.55, 0]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.9, 0.55, 0]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                  FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 5", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "DO"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.2, 0.65, 0.2]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.2, 0.65, 0.2]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                  FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 6", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TRY"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[1, 0.1, 0.3]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[1, 0.1, 0.3]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                   FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 7", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "CODE"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.7, 0.6, 0.5]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.7, 0.6, 0.5]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "TEACH", 12, TextAlignment -> Left, FontColor -> 
                  GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                 0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 8", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TEACH"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[None], 
                Rectangle[{0, 0}], 
                FaceForm[
                 GrayLevel[0.85]], 
                
                Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {
                  1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Page", 12, TextAlignment -> Center, Background -> None, 
                  FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                 0.475, 0.5}, {1, 0}], 
                Text[
                 Style[
                 "Break", 12, TextAlignment -> Center, Background -> None, 
                  FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                 0.525, 0.5}, {-1, 0}], 
                Thickness[0.02], Null, 
                Dashing[Tiny], 
                Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
               AspectRatio -> Rational[1, 3]], 
              Style["Alt + 9", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "PageBreak"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]]}}, Spacings -> 0], WindowTitle -> 
        "Cell Insertion", WindowMargins -> {{50, Automatic}, {Automatic, 50}},
         Deployed -> True, Saveable -> False]], 
     StyleBox["\"Launch Vertical Palette\"", 12, FontFamily -> "Arial Black", 
       StripOnInput -> False] :> CreateWindow[
       PaletteNotebook[
        Grid[{{
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[
               RGBColor[1, 0.5, 1]], 
              Rectangle[{0, 0}], 
              RGBColor[0.4, 0, 0.7], 
              Thickness[0.04], Null, 
              Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Title", 12, TextAlignment -> Center, FontColor -> 
                RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
               0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
             Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Title"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 1", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[
               RGBColor[1, 0.5, 1]], 
              Rectangle[{0, 0}], 
              RGBColor[0.4, 0, 0.7], 
              Thickness[0.025], Null, 
              Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Section", 12, TextAlignment -> Center, FontColor -> 
                RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
               0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
             Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Section"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 2", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[
               RGBColor[1, 0.5, 1]], 
              Rectangle[{0, 0}], 
              RGBColor[0.4, 0, 0.7], 
              Thickness[0.01], Null, 
              Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Subsection", 12, TextAlignment -> Center, FontColor -> 
                RGBColor[0.4, 0, 0.7], FontFamily -> "Arial Black"], {0.5, 
               0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
             Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "Subsection"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 3", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.2, 0, 0.8]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.2, 0, 0.8]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "READ"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 4", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.9, 0.55, 0]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.9, 0.55, 0]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "DO"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 5", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.2, 0.65, 0.2]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.2, 0.65, 0.2]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TRY"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 6", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[1, 0.1, 0.3]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[1, 0.1, 0.3]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "CODE"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 7", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.7, 0.6, 0.5]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.7, 0.6, 0.5]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "TEACH", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "TEACH"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 8", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[None], 
              Rectangle[{0, 0}], 
              FaceForm[
               GrayLevel[0.85]], 
              
              Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1, 
                1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Page", 12, TextAlignment -> Center, Background -> None, 
                FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
               0.475, 0.5}, {1, 0}], 
              Text[
               Style[
               "Break", 12, TextAlignment -> Center, Background -> None, 
                FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
               0.525, 0.5}, {-1, 0}], 
              Thickness[0.02], Null, 
              Dashing[Tiny], 
              Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
             AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[{
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                FrontEnd`NotebookWrite[
                 FrontEnd`InputNotebook[], 
                 Cell["", "PageBreak"]], 
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], Previous, CellContents, AutoScroll -> 
                 False]}]]]], 
           Style["Alt + 9", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}}], WindowTitle -> "Cell Insertion", 
        WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> True,
         Saveable -> False]]}]},
  "RowDefault"]], "Output",
 CellChangeTimes->{{3.6273303063091574`*^9, 3.6273303307865157`*^9}, 
   3.6274027250612416`*^9, 3.6274035090146294`*^9, 3.627414622989916*^9, 
   3.627415606142221*^9, 3.6286840081771903`*^9}]
}, Open  ]],

Cell["Make button to launch this as Dialog", "Text",
 CellChangeTimes->{{3.627235513553757*^9, 3.627235523296236*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"CreateWindow", " ", "@"}], " ", "*)"}], 
  RowBox[{
   RowBox[{"PaletteNotebook", "[", "\n", 
    RowBox[{
     RowBox[{"Grid", "[", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{"With", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"item", " ", "=", " ", "#"}], ",", " ", 
            RowBox[{"do", " ", "=", " ", 
             RowBox[{"action", "[", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", "\n",
           "\t\t\t", 
          RowBox[{"{", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Button", "[", "\[IndentingNewLine]", "\t\t\t\t", 
             RowBox[{
              RowBox[{"icon", "[", 
               RowBox[{"Sequence", " ", "@@", " ", 
                RowBox[{"Take", "[", 
                 RowBox[{"item", ",", " ", 
                  RowBox[{
                   RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                   "2"}]}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t", 
              RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}], "\n", "\t\t\t", 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"\"\<Alt + \>\"", " ", "<>", " ", 
               RowBox[{"item", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "2"}], "]"}], "]"}]}], ",", " ", "12", ",", " ", 
              RowBox[{
              "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
             "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Spacer", "[", "5", "]"}]}], "\n", "\t\t\t", "}"}]}], 
         "\[IndentingNewLine]", "\t", "]"}], "&"}], " ", "/@", " ", 
       "itemInfo"}], "]"}], ",", "\n", 
     RowBox[{"WindowTitle", " ", "\[Rule]", " ", "\"\<Cell Insertion\>\""}], 
     ",", "\n", 
     RowBox[{"WindowMargins", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"50", ",", " ", "Automatic"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"Automatic", ",", " ", "50"}], "}"}]}], "}"}]}], ",", "\n", 
     RowBox[{"Deployed", " ", "\[Rule]", " ", "True"}], ",", "\n", 
     RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], "\n", "]"}], 
   ";"}]}]], "Code",
 CellChangeTimes->{{3.6272346097746296`*^9, 3.6272346232015476`*^9}, {
   3.6272350800758057`*^9, 3.627235347647869*^9}, {3.627235535918623*^9, 
   3.627235544117075*^9}, {3.627235613224991*^9, 3.6272358130754013`*^9}, {
   3.6272371683139253`*^9, 3.6272372134529257`*^9}, {3.6272372527820625`*^9, 
   3.6272373222406206`*^9}, 3.6272391455501404`*^9, {3.6272401380716925`*^9, 
   3.6272401555042763`*^9}, {3.6272572857054043`*^9, 3.627257289827135*^9}, {
   3.627657773610853*^9, 3.627657780845681*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ScreenEnvironment changing", "Section",
 CellChangeTimes->{{3.627240438508025*^9, 3.627240443960651*^9}}],

Cell[BoxData[
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEnd`SelectionMove", "[", 
   RowBox[{
    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", "All", ",", " ", 
    "Notebook", ",", " ", 
    RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"FrontEndExecute", "[", 
  RowBox[{"FrontEndToken", "[", 
   RowBox[{
    RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<SelectAll\>\""}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.627417849323517*^9, 3.627417854107995*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   "\"\<ScreenStyleEnvironment\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.627240446675454*^9, 3.6272404562468166`*^9}, {
  3.6272405257810183`*^9, 3.627240533756324*^9}, {3.6272405860411034`*^9, 
  3.627240607916645*^9}}],

Cell[BoxData["\<\"Working\"\>"], "Output",
 CellChangeTimes->{3.6272404569092536`*^9, 3.627240534402985*^9, 
  3.6272405910924573`*^9, 3.6274146292495413`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   "\"\<NotebookDynamicExpression\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6272408530569153`*^9, 3.6272408573217545`*^9}, {
   3.627240943180684*^9, 3.62724097876692*^9}, {3.6291177819716773`*^9, 
   3.629117789510723*^9}, {3.6291178839778557`*^9, 3.6291178874191647`*^9}, {
   3.629117947434744*^9, 3.6291179561755867`*^9}, 3.6291180893137035`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CurrentValue", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<DynamicUpdating\>\""}], 
   "]"}], "=", "Automatic"}]], "Input",
 CellChangeTimes->{{3.6291181056246047`*^9, 3.629118108910801*^9}, {
  3.6291184838038044`*^9, 3.629118485939231*^9}, {3.629118520673441*^9, 
  3.6291185514339995`*^9}}],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{{3.629118109620289*^9, 3.6291181171473045`*^9}, {
   3.629118491412882*^9, 3.6291185522225266`*^9}, 3.6291190125058374`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{"$FrontEnd", ",", "\"\<DynamicUpdating\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6291191534122553`*^9, 3.629119171695473*^9}}],

Cell[BoxData["Automatic"], "Output",
 CellChangeTimes->{{3.629119157520994*^9, 3.62911916290059*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"screenEnv", " ", "=", " ", 
  RowBox[{"ActionMenu", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Display\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\n", "\t", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Mode - Teacher\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", " ", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "\[Equal]", 
               " ", "\"\<Teacher\>\""}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"FrontEndExecute", "[", 
          RowBox[{"FrontEnd`SelectionMove", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", "All", 
            ",", " ", "Notebook", ",", " ", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{"FrontEndExecute", "[", 
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<SelectionOpenAllGroups\>\""}], "]"}], "]"}], ";", "\n", 
         "\t\t", 
         RowBox[{"FrontEndExecute", "[", 
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<SelectionCloseUnselectedCells\>\""}], "]"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "=", " ", 
          "\"\<Teacher\>\""}], ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Mode - Student\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "\[Equal]", 
               " ", "\"\<Student\>\""}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"FrontEndExecute", "[", 
          RowBox[{"FrontEnd`SelectionMove", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "All", ",", 
            "Notebook", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{"FrontEndExecute", "[", 
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<SelectionOpenAllGroups\>\""}], "]"}], "]"}], ";", "\n", 
         "\t\t", 
         RowBox[{"FrontEndExecute", "[", 
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<SelectionCloseUnselectedCells\>\""}], "]"}], "]"}], ";", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "=", " ", 
          "\"\<Student\>\""}], ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Mode - Author\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "\[Equal]", 
               " ", "\"\<Author\>\""}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "=", " ", 
          "\"\<Author\>\""}], ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      "Delimiter", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Dynamic - On\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", " ", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
               "True"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "True"}], 
         ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Dynamic - Off\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
               "False"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "False"}], 
         ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Dynamic - Auto\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
               "Automatic"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "Automatic"}], 
         ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", "Delimiter", ",", 
      "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Zoom - 80%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", " ", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               ".8"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", ".8"}], "\n", 
        "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Zoom - 100%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               "1"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1"}], "\n", 
        "\t\t", "}"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Zoom - 120%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               "1.2"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1.2"}], "\n", 
        "\t\t", ")"}]}], ",", "\n", "\t", "Delimiter", ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<About...\>\"", ",", " ", "14", ",", " ", 
         RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}],
         "]"}], " ", "\[RuleDelayed]", "\n", "\t\t", 
       RowBox[{"CreateDialog", "[", "\n", "\t", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"Column", "[", 
            RowBox[{"{", "\n", "\t", 
             RowBox[{
              RowBox[{"Pane", "[", "\n", "\t", 
               RowBox[{
                RowBox[{"Grid", "[", 
                 RowBox[{
                  RowBox[{"{", "\n", "\t\t", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<License\>\"", ",", " ", "16", ",", " ", "Bold"}], 
                    "]"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t", 
                    RowBox[{
                    "\"\<The design and contents of this tutorial are \
licensed under a\>\"", ",", "\n", "\t\t\t\t", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<Creative Commons Attribution-ShareAlike 4.0 \
International License\>\"", ",", " ", 
                    "\"\<http://creativecommons.org/licenses/by-sa/4.0/\>\""}]\
, "]"}], ",", "\"\<.\>\""}], "}"}], "]"}]}], "\n", "\t\t\t", "}"}], "]"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Attribution\>\"", ",", " ", "16", ",", " ", "Bold"}],
                     "]"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<This tutorial is derived from work originally done \
by \>\"", ",", "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<Kyle Keane\>\"", ",", 
                    "\"\<http://www.kylekeane.com\>\""}], "]"}], ",", 
                    "\"\<.\>\""}], "}"}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<The original work can be found at \>\"", ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<www.kylekeane.com\>\"", ",", 
                    "\"\<http://www.kylekeane.com\>\""}], "]"}]}], "}"}], 
                    "]"}]}], "\n", "\t\t\t", "}"}], "]"}], ",", "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Intention\>\"", ",", " ", "16", ",", " ", "Bold"}], 
                    "]"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "\"\<The original work was provided as a free educational \
resource for teaching and learning computer programming. \>\"", "<>", "\n", 
                    "\t\t\t", 
                    "\"\<It is hoped that derivative works will also be \
shared for little or no cost in service of all who seek and provide \
education.\>\""}], ",", "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "\n", 
                    "\t\t", "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Resources\>\"", ",", " ", "16", ",", " ", "Bold"}], 
                    "]"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<www.wolfram.com/language\>\"", ",", 
                    "\"\<http://www.wolfram.com/language\>\""}], "]"}], ",", 
                    "\n", "\t\t\t\t\t", 
                    "\"\< - more about the Wolfram Language\>\"", ","}], "\n",
                     "\t\t\t\t\t", "\n", "\t\t\t\t", "}"}], "]"}], ",", "\n", 
                    "\t\t\t\t", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<www.demonstrations.wolfram.com\>\"", ",", 
                    "\"\<http://demonstrations.wolfram.com\>\""}], "]"}], ",",
                     "\n", "\t\t\t\t\t", 
                    "\"\< - free programming examples\>\""}], "\n", 
                    "\t\t\t\t", "}"}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<www.wolframalpha.com\>\"", ",", 
                    "\"\<http://www.wolframalpha.com\>\""}], "]"}], ",", "\n",
                     "\t\t\t\t\t", 
                    "\"\< - free computational-knowledge engine\>\""}], "\n", 
                    "\t\t\t\t", "}"}], "]"}]}], "\n", "\t\t\t", "}"}], ",", 
                    " ", 
                    RowBox[{"Spacings", "\[Rule]", ".25"}]}], "]"}], ",", 
                    "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "\n", 
                    "\t\t", "}"}]}], "\n", "\t", "}"}], ",", " ", "\n", "\t", 
                  RowBox[{"Dividers", " ", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "False", ",", " ", "True", ",", " ", "False", ",", " ", 
                    "True", ",", " ", "False", ",", " ", "True", ",", " ", 
                    "False", ",", " ", "True"}], "}"}]}], "}"}]}], ",", " ", 
                  "\n", "\t", 
                  RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}], ",", 
                  "\n", "\t", 
                  RowBox[{"Spacings", " ", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1.5"}], 
                    RowBox[{"(*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "0"}], ",", " ", 
                    RowBox[{"2", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"3", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"4", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"5", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"6", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"7", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"8", "\[Rule]", "1.5"}]}], "}"}], "*)"}], "}"}]}],
                   ",", "\n", "\t", 
                  RowBox[{"ItemSize", " ", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", ".95", "]"}], ",", " ", 
                    "Automatic"}], "}"}]}]}], "\n", "\t", "]"}], ",", " ", 
                "\n", "\t", 
                RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"400", ",", " ", "All"}], "}"}]}], ",", "\n", "\t", 
                RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                "\t", 
                RowBox[{"AppearanceElements", "\[Rule]", "None"}]}], "\n", 
               "\t", "]"}], ",", "\n", "\t", 
              RowBox[{"Spacer", "[", "2", "]"}], ",", "\n", "\t", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"DefaultButton", "[", "]"}], ",", " ", 
                RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}]}], "}"}], 
            "]"}], ",", "\n", "\t", "12", ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], ",", 
         "  ", "\n", "\t", 
         RowBox[{"WindowTitle", "\[Rule]", "\"\<About this document\>\""}]}], 
        "\n", "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627240622412279*^9, 3.6272407921994886`*^9}, {
   3.6272411648685255`*^9, 3.627241260893558*^9}, {3.6272413427620487`*^9, 
   3.627241470217898*^9}, {3.62724151185406*^9, 3.627241523709937*^9}, {
   3.627241817183076*^9, 3.6272418588632526`*^9}, {3.627241935962245*^9, 
   3.6272422838212056`*^9}, 3.6272423773254347`*^9, {3.627330364714194*^9, 
   3.6273303718279486`*^9}, {3.6274056944591517`*^9, 3.62740577565127*^9}, {
   3.6274156999095964`*^9, 3.6274157419377995`*^9}, {3.627416373240923*^9, 
   3.627416378845484*^9}, {3.6274168393865333`*^9, 3.6274168608156757`*^9}, {
   3.6274170984564376`*^9, 3.627417110527644*^9}, {3.6274175304276304`*^9, 
   3.627417532595847*^9}, {3.6274179967102537`*^9, 3.6274180353471174`*^9}, {
   3.627662697312158*^9, 3.627662697478261*^9}, {3.6276627868069673`*^9, 
   3.6276628334235463`*^9}, {3.628933417060717*^9, 3.6289335102429943`*^9}, {
   3.628933563255306*^9, 3.62893358589043*^9}, {3.628933646377866*^9, 
   3.6289336605733504`*^9}, {3.6289338011307225`*^9, 3.628933809722473*^9}, {
   3.6289339054841657`*^9, 3.6289340323389473`*^9}, {3.628943967285635*^9, 
   3.628943985099537*^9}, {3.628944357096196*^9, 3.6289444054149413`*^9}, {
   3.629117743983289*^9, 3.6291177678602467`*^9}, {3.629118299733286*^9, 
   3.6291184359648256`*^9}, {3.6291186006288853`*^9, 
   3.6291186659802303`*^9}, {3.629118791741434*^9, 3.6291189164217677`*^9}, {
   3.629121350440156*^9, 3.629121382063292*^9}, {3.6291214459302597`*^9, 
   3.6291214472131166`*^9}, {3.629121611971238*^9, 3.629121628881821*^9}, {
   3.6291216797518215`*^9, 3.6291216801300755`*^9}, {3.6291217681789303`*^9, 
   3.629121771485135*^9}, {3.629309665815894*^9, 3.6293097257749624`*^9}, {
   3.6293097866586556`*^9, 3.6293098120562305`*^9}, {3.629309847160701*^9, 
   3.6293099022465115`*^9}, {3.6293099510481343`*^9, 
   3.6293100071634784`*^9}, {3.6293100565884995`*^9, 3.629310071026149*^9}, {
   3.6293103031005983`*^9, 3.62931039057051*^9}}],

Cell[BoxData[
 ActionMenuBox[
  StyleBox["\<\"Display\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14], {
  TagBox[GridBox[{
     {
      StyleBox["\<\"Mode - Teacher\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == "Teacher", 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(FrontEndExecute[
    FrontEnd`SelectionMove[
     FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> False]]; 
  FrontEndExecute[
    FrontEndToken[
     FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; FrontEndExecute[
    FrontEndToken[
     FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; CurrentValue[
     FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Teacher"; Null), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Mode - Student\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == "Student", 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(FrontEndExecute[
    FrontEnd`SelectionMove[
     FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> False]]; 
  FrontEndExecute[
    FrontEndToken[
     FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; FrontEndExecute[
    FrontEndToken[
     FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; CurrentValue[
     FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Student"; Null), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Mode - Author\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == "Author", 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Author"; Null), 
  Delimiter, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Dynamic - On\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "DynamicUpdating"] == True, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "DynamicUpdating"] = True; Null), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Dynamic - Off\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "DynamicUpdating"] == False, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "DynamicUpdating"] = False; Null), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Dynamic - Auto\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "DynamicUpdating"] == Automatic, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "DynamicUpdating"] = Automatic; Null), 
  Delimiter, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Zoom - 80%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 0.8, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
    FrontEnd`InputNotebook[], "Magnification"] = 0.8), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Zoom - 100%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 1, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>{CurrentValue[
     FrontEnd`InputNotebook[], "Magnification"] = 1}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Zoom - 120%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 1.2, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
    FrontEnd`InputNotebook[], "Magnification"] = 1.2), Delimiter, 
  StyleBox["\<\"About...\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14]:>CreateDialog[
   Style[
    Column[{
      Pane[
       Grid[{{
          Style["License", 16, Bold]}, {
          Style[
           Pane[
            
            Column[{"The design and contents of this tutorial are licensed \
under a", 
              Row[{
                Hyperlink[
                "Creative Commons Attribution-ShareAlike 4.0 International \
License", "http://creativecommons.org/licenses/by-sa/4.0/"], "."}]}], 
            ImageSize -> {
              Scaled[1], All}, Scrollbars -> {False, False}, 
            AppearanceElements -> None], LineIndent -> 0]}, {
          Style["Attribution", 16, Bold]}, {
          Style[
           Pane[
            Column[{
              Row[{"This tutorial is derived from work originally done by ", 
                Hyperlink["Kyle Keane", "http://www.kylekeane.com"], "."}], 
              Row[{"The original work can be found at ", 
                Hyperlink[
                "www.kylekeane.com", "http://www.kylekeane.com"]}]}], 
            ImageSize -> {
              Scaled[1], All}, Scrollbars -> {False, False}, 
            AppearanceElements -> None], LineIndent -> 0]}, {
          Style["Intention", 16, Bold]}, {
          Style[
           Pane[
            StringJoin[
            "The original work was provided as a free educational resource \
for teaching and learning computer programming. ", 
             "It is hoped that derivative works will also be shared for \
little or no cost in service of all who seek and provide education."], 
            ImageSize -> {
              Scaled[1], All}, Scrollbars -> {False, False}, 
            AppearanceElements -> None], LineIndent -> 0]}, {
          Style["Resources", 16, Bold]}, {
          Style[
           Pane[
            Column[{
              Row[{
                Hyperlink[
                "www.wolfram.com/language", 
                 "http://www.wolfram.com/language"], 
                " - more about the Wolfram Language", Null}], 
              Row[{
                Hyperlink[
                "www.demonstrations.wolfram.com", 
                 "http://demonstrations.wolfram.com"], 
                " - free programming examples"}], 
              Row[{
                Hyperlink[
                "www.wolframalpha.com", "http://www.wolframalpha.com"], 
                " - free computational-knowledge engine"}]}, Spacings -> 
             0.25], ImageSize -> {
              Scaled[1], All}, Scrollbars -> {False, False}, 
            AppearanceElements -> None], LineIndent -> 0]}}, 
        Dividers -> {
         False, {False, True, False, True, False, True, False, True}}, 
        Alignment -> Left, Spacings -> {0, 1.5}, ItemSize -> {
          Scaled[0.95], Automatic}], ImageSize -> {400, All}, 
       Scrollbars -> {False, False}, AppearanceElements -> None], 
      Spacer[2], 
      Item[
       DefaultButton[], Alignment -> Right]}], 12, FontFamily -> "Arial"], 
   WindowTitle -> "About this document"]}]], "Output",
 DynamicUpdating->True,
 CellChangeTimes->{
  3.627241859884929*^9, {3.6272420379654503`*^9, 3.6272420460122395`*^9}, {
   3.6272420787275314`*^9, 3.627242150797077*^9}, {3.6272421921844435`*^9, 
   3.627242206854192*^9}, 3.627242290590703*^9, 3.6272423780709286`*^9, 
   3.627247913394055*^9, 3.6273302184326143`*^9, 3.6273303731108036`*^9, {
   3.62740255802954*^9, 3.6274025580825453`*^9}, 3.627405792092914*^9, 
   3.627406927131407*^9, {3.627414604780095*^9, 3.627414629307547*^9}, {
   3.627415605883195*^9, 3.6274156136679735`*^9}, 3.6274157450781136`*^9, 
   3.6274163839029894`*^9, 3.6274168631529093`*^9, 3.6274171230738993`*^9, 
   3.62741716449104*^9, {3.627417499552543*^9, 3.6274174995765457`*^9}, {
   3.627418047085291*^9, 3.627418047111294*^9}, {3.627657097475355*^9, 
   3.627657097569418*^9}, 3.6276626979555783`*^9, {3.6276627982490377`*^9, 
   3.627662834398197*^9}, 3.628437988182297*^9, 3.628683032942092*^9, 
   3.6286840285007753`*^9, 3.628803110360614*^9, 3.628933382302476*^9, {
   3.6289334387101793`*^9, 3.628933510927454*^9}, 3.6289336625116405`*^9, 
   3.628933810966296*^9, {3.628933926673328*^9, 3.628933952826806*^9}, 
   3.6289340003415623`*^9, {3.6289439566685295`*^9, 3.628943985879053*^9}, 
   3.6289443261535096`*^9, 3.628944406250502*^9, {3.628945271476907*^9, 
   3.628945272180377*^9}, 3.6289662998809905`*^9, 3.628968239444935*^9, 
   3.628969864273834*^9, 3.6290296540613327`*^9, 3.62903833983095*^9, 
   3.629040104134592*^9, 3.6290404554199996`*^9, 3.6291147258266582`*^9, 
   3.629115984209843*^9, 3.6291177173494864`*^9, 3.629117754749482*^9, 
   3.629118675316464*^9, 3.629118796382537*^9, 3.629118840198821*^9, 
   3.6291189192766747`*^9, {3.6291189897406197`*^9, 3.6291190161882963`*^9}, {
   3.6291213561559753`*^9, 3.629121383350151*^9}, 3.629121449306512*^9, {
   3.6291216210483*^9, 3.6291216305849657`*^9}, 3.629121772559853*^9, 
   3.6291220610894747`*^9, 3.629122689867837*^9, {3.6291227867354937`*^9, 
   3.629122787229823*^9}, {3.629122817978938*^9, 3.6291228184942837`*^9}, 
   3.629123016080885*^9, 3.6292914501074734`*^9, {3.629309689785907*^9, 
   3.6293096907075243`*^9}, 3.629309726700579*^9, 3.6293098131109343`*^9, 
   3.6293098654158945`*^9, 3.6293099032741966`*^9, {3.6293099599730935`*^9, 
   3.6293099781400642`*^9}, 3.6293100131264496`*^9, 3.6293100773583794`*^9, {
   3.629310309189667*^9, 3.6293103576785164`*^9}, 3.6293103917492895`*^9, 
   3.6293108299294024`*^9, 3.6293225304044075`*^9, 3.629333096408518*^9, 
   3.6293350885210323`*^9, 3.6293357679694476`*^9, 3.629574495266388*^9, 
   3.6295846824742517`*^9, 3.629628286513791*^9, 3.6296285600113964`*^9, 
   3.6296308796953297`*^9, 3.6296339028467865`*^9, 3.6296356800084853`*^9, 
   3.6296387440178556`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dynamic", " ", "=", " ", 
  RowBox[{"ActionMenu", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Dynamic\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\n", "\t", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Allow\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", " ", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
               "True"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "True"}], 
         ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Disallow\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
               "False"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "False"}], 
         ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Automatic\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
               "Automatic"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"CurrentValue", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
            "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "Automatic"}], 
         ";"}], "\n", "\t\t", ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "\n",
    "]"}]}]], "Code",
 CellChangeTimes->{{3.6291217878811*^9, 3.629122227437488*^9}, {
  3.6291225318001947`*^9, 3.629122534068716*^9}}],

Cell[BoxData[
 ActionMenuBox[
  StyleBox["\<\"Dynamic\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14], {
  TagBox[GridBox[{
     {
      StyleBox["\<\"Allow\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "DynamicUpdating"] == True, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "DynamicUpdating"] = True; Null), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Disallow\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "DynamicUpdating"] == False, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "DynamicUpdating"] = False; Null), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"Automatic\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "DynamicUpdating"] == Automatic, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "DynamicUpdating"] = Automatic; 
  Null)}]], "Output",
 CellChangeTimes->{{3.6291218687604527`*^9, 3.6291219210644083`*^9}, {
   3.629122018190801*^9, 3.6291220582625837`*^9}, {3.629122190129552*^9, 
   3.6291221975385084`*^9}, 3.6291222279818516`*^9, 3.629122536230155*^9, 
   3.6291226898808455`*^9, 3.6291227867525053`*^9, 3.629122818006956*^9, 
   3.629123016113906*^9, 3.6292914501334915`*^9, 3.6293096897999163`*^9, 
   3.6293108299504175`*^9, 3.629322530426423*^9, 3.6293330964275317`*^9, 
   3.629335088541044*^9, 3.6293357679914627`*^9, 3.629574495281389*^9, 
   3.6295846824882383`*^9, 3.6296282865348053`*^9, 3.629628560035411*^9, 
   3.6296308797133427`*^9, 3.629633902859788*^9, 3.6296356800224867`*^9, 
   3.629638744030857*^9}]
}, Open  ]],

Cell["\<\
CreateDialog[
 \tStyle[Column[{
    \tPane[
     \tGrid[{
       \t\t{Style[\"License\", 16, Bold]},
       \t\t{Style[Pane[
          \t\t\tColumn[{
            \t\t\t\t\"The design and contents of this tutorial are licensed \
under a\",
            \t\t\t\tRow[{Hyperlink[\"Creative Commons Attribution-ShareAlike \
4.0 International License\", \"http://creativecommons.org/licenses/by-sa/4.0/\
\"], \".\"}]
            \t\t\t}],
          \t\tImageSize -> {Scaled[1], All},
          \t\tScrollbars -> {False, False},
          \t\tAppearanceElements -> None
          \t\t], LineIndent -> 0]},
       \t\t{Style[\"Attribution\", 16, Bold]},
       \t\t{Style[Pane[
          \t\t\tColumn[{
            \t\t\t\tRow[{\"This tutorial is derived from work originally done \
by \",
              \t\t\t\tHyperlink[\"Kyle Keane\", \
\"http://www.kylekeane.com\"], \".\"}],
            \t\t\t\tRow[{\"The original work can be found at \",
              \t\t\t\tHyperlink[\"www.kylekeane.com\", \
\"http://www.kylekeane.com\"]}]
            \t\t\t}],
          \t\tImageSize -> {Scaled[1], All},
          \t\tScrollbars -> {False, False},
          \t\tAppearanceElements -> None
          \t\t], LineIndent -> 0]},
       \t\t{Style[\"Intention\", 16, Bold]},
       \t\t{Style[Pane[
          \t\t\t\"The original work was provided as a free educational \
resource for teaching and learning computer programming. \" <>
           \t\t\t\"It is hoped that derivative works will also be shared for \
little or no cost in service of all who seek and provide education.\",
          \t\tImageSize -> {Scaled[1], All},
          \t\tScrollbars -> {False, False},
          \t\tAppearanceElements -> None
          \t\t], LineIndent -> 0]
        \t\t},
       \t\t{Style[\"Resources\", 16, Bold]},
       \t\t{Style[Pane[
          \t\t\tColumn[{
            \t\t\t\tRow[{
              \t\t\t\t\tHyperlink[\"www.wolfram.com/language\", \
\"http://www.wolfram.com/language\"],
              \t\t\t\t\t\" - more about the Wolfram Language\",
              \t\t\t\t\t
              \t\t\t\t}],
            \t\t\t\tRow[{
              \t\t\t\t\tHyperlink[\"www.demonstrations.wolfram.com\", \
\"http://demonstrations.wolfram.com\"],
              \t\t\t\t\t\" - free programming examples\"
              \t\t\t\t}],
            \t\t\t\tRow[{
              \t\t\t\t\tHyperlink[\"www.wolframalpha.com\", \
\"http://www.wolframalpha.com\"],
              \t\t\t\t\t\" - free computational-knowledge engine\"
              \t\t\t\t}]
            \t\t\t}, Spacings -> .25],
          \t\tImageSize -> {Scaled[1], All},
          \t\tScrollbars -> {False, False},
          \t\tAppearanceElements -> None
          \t\t], LineIndent -> 0]
        \t\t}
       \t}, 
      \tDividers -> {False, {False, True, False, True, False, True, False, \
True}}, 
      \tAlignment -> Left,
      \tSpacings -> {0, 1.5(*{1\[Rule]0, 2\[Rule]1.5, 3\[Rule]1.5, \
4\[Rule]1.5, 5\[Rule]1.5, 6\[Rule]1.5, 7\[Rule]1.5, 8\[Rule]1.5}*)},
      \tItemSize -> {Scaled[.95], Automatic}
      \t], 
     \tImageSize -> {400, All},
     \tScrollbars -> {False, False},
     \tAppearanceElements -> None
     \t],
    \tSpacer[2],
    \tItem[DefaultButton[], Alignment -> Right]}],
  \t12, FontFamily -> \"Arial\"],  
 \tWindowTitle -> \"About this document\"
 ]\
\>", "Text",
 CellChangeTimes->{3.629122709055919*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", 
    RowBox[{
     RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<SelectAll\>\""}],
     "]"}], "]"}], ";"}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", 
    RowBox[{
     RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
     "\"\<SelectionOpenAllGroups\>\""}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{3.627415797922397*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"cellPalette", ",", "insertCell", ",", "screenEnv"}], "}"}], 
    "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.627330378333297*^9, 3.6273304208294497`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ActionMenuBox[
      StyleBox["\<\"Cell Palette\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], {
      StyleBox["\<\"Horizontal\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14]:>CreateWindow[
       PaletteNotebook[
        Grid[{{
           Button[
            Column[{
              Graphics[{
                Thickness[0.1], 
                Line[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
                EdgeForm[None], 
                FaceForm[
                 GrayLevel[0.85]], 
                Rectangle[{0, 0}], 
                Text[
                 Style[
                 "Title", 12, TextAlignment -> Center, FontColor -> 
                  GrayLevel[0], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
                 0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 1", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "Title"]]]]]], 
           Button[
            Column[{
              Graphics[{
                Thickness[0.06], 
                Line[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
                EdgeForm[None], 
                FaceForm[
                 GrayLevel[0.85]], 
                Rectangle[{0, 0}], 
                Text[
                 Style[
                 "Section", 12, TextAlignment -> Center, FontColor -> 
                  GrayLevel[0], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
                 0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 2", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "Section"]]]]]], 
           Button[
            Column[{
              Graphics[{
                Thickness[0.03], 
                Line[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
                EdgeForm[None], 
                FaceForm[
                 GrayLevel[0.85]], 
                Rectangle[{0, 0}], 
                Text[
                 Style[
                 "Subsection", 12, TextAlignment -> Center, FontColor -> 
                  GrayLevel[0], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
                 0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 3", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "Subsection"]]]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0, 0, 1]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0, 0, 1]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                   FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 4", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "READ"]]]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[1, 0, 0]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[1, 0, 0]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                  FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 5", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "DO"]]]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0, 
                  Rational[4, 9], 0]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0, 
                  Rational[4, 9], 0]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                  FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 6", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "TRY"]]]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[1, 0.5, 0]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[1, 0.5, 0]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1],
                   FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
               ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
              Style["Alt + 7", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "CODE"]]]]]], 
           Button[
            Column[{
              Graphics[{
                FaceForm[
                 RGBColor[0.6, 0.4, 0.2]], 
                Rectangle[{0, 0}], 
                Rectangle[{-0.1, 0.7}, {0, 1}], 
                FaceForm[
                 RGBColor[0.6, 0.4, 0.2]], 
                Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                Text[
                 Style[
                 "TEACH", 12, TextAlignment -> Left, FontColor -> 
                  GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                 0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
               Rational[1, 3]], 
              Style["Alt + 8", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "TEACH"]]]]]], 
           Button[
            Column[{
              Graphics[{
                EdgeForm[None], 
                FaceForm[None], 
                Rectangle[{0, 0}], 
                FaceForm[
                 GrayLevel[0.85]], 
                
                Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {
                  1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
                Text[
                 Style[
                 "Page", 12, TextAlignment -> Center, Background -> None, 
                  FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                 0.475, 0.5}, {1, 0}], 
                Text[
                 Style[
                 "Break", 12, TextAlignment -> Center, Background -> None, 
                  FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                 0.525, 0.5}, {-1, 0}], 
                Thickness[0.02], Null, 
                Dashing[Tiny], 
                Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
               AspectRatio -> Rational[1, 3]], 
              Style["Alt + 9", 12, FontFamily -> "Arial Black"]}, 
             Alignment -> {Center, Center}], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "PageBreak"]]]]]]}}, Spacings -> 0], WindowTitle -> 
        "Cell Insertion", WindowMargins -> {{50, Automatic}, {Automatic, 50}},
         Deployed -> True, Saveable -> False]], 
      StyleBox["\<\"Vertical\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14]:>CreateWindow[
       PaletteNotebook[
        Grid[{{
           Spacer[5], 
           Button[
            Graphics[{
              Thickness[0.1], 
              Line[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
              EdgeForm[None], 
              FaceForm[
               GrayLevel[0.85]], 
              Rectangle[{0, 0}], 
              Text[
               Style[
               "Title", 12, TextAlignment -> Center, FontColor -> 
                GrayLevel[0], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
               0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "Title"]]]]]], 
           Style["Alt + 1", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              Thickness[0.06], 
              Line[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
              EdgeForm[None], 
              FaceForm[
               GrayLevel[0.85]], 
              Rectangle[{0, 0}], 
              Text[
               Style[
               "Section", 12, TextAlignment -> Center, FontColor -> 
                GrayLevel[0], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
               0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "Section"]]]]]], 
           Style["Alt + 2", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              Thickness[0.03], 
              Line[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
              EdgeForm[None], 
              FaceForm[
               GrayLevel[0.85]], 
              Rectangle[{0, 0}], 
              Text[
               Style[
               "Subsection", 12, TextAlignment -> Center, FontColor -> 
                GrayLevel[0], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
               0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "Subsection"]]]]]], 
           Style["Alt + 3", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0, 0, 1]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0, 0, 1]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "READ"]]]]]], 
           Style["Alt + 4", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[1, 0, 0]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[1, 0, 0]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "DO"]]]]]], 
           Style["Alt + 5", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0, 
                Rational[4, 9], 0]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0, 
                Rational[4, 9], 0]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "TRY"]]]]]], 
           Style["Alt + 6", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[1, 0.5, 0]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[1, 0.5, 0]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "CODE"]]]]]], 
           Style["Alt + 7", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              FaceForm[
               RGBColor[0.6, 0.4, 0.2]], 
              Rectangle[{0, 0}], 
              Rectangle[{-0.1, 0.7}, {0, 1}], 
              FaceForm[
               RGBColor[0.6, 0.4, 0.2]], 
              Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
              Text[
               Style[
               "TEACH", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
                FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
             ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "TEACH"]]]]]], 
           Style["Alt + 8", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}, {
           Spacer[5], 
           Button[
            Graphics[{
              EdgeForm[None], 
              FaceForm[None], 
              Rectangle[{0, 0}], 
              FaceForm[
               GrayLevel[0.85]], 
              
              Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1, 
                1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
              Text[
               Style[
               "Page", 12, TextAlignment -> Center, Background -> None, 
                FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
               0.475, 0.5}, {1, 0}], 
              Text[
               Style[
               "Break", 12, TextAlignment -> Center, Background -> None, 
                FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
               0.525, 0.5}, {-1, 0}], 
              Thickness[0.02], Null, 
              Dashing[Tiny], 
              Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
             AspectRatio -> Rational[1, 3]], 
            ReleaseHold[
             Hold[
              FrontEndExecute[
               FrontEnd`NotebookWrite[
                FrontEnd`InputNotebook[], 
                Cell["", "PageBreak"]]]]]], 
           Style["Alt + 9", 12, FontFamily -> "Arial Black"], 
           Spacer[5]}}], WindowTitle -> "Cell Insertion", 
        WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> True,
         Saveable -> False]]}], 
     ActionMenuBox[
      StyleBox["\<\"Insert Cell\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], {
      TagBox[GridBox[{
         {
          GraphicsBox[
           {Thickness[0.1], LineBox[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
            {EdgeForm[None], FaceForm[GrayLevel[0.85]], RectangleBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"Title\"\>",
               StripOnInput->False,
               TextAlignment->Center,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[0]], {0.5, 0.5}, {0, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 1\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "Title"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[
           {Thickness[0.06], LineBox[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
            {EdgeForm[None], FaceForm[GrayLevel[0.85]], RectangleBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"Section\"\>",
               StripOnInput->False,
               TextAlignment->Center,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[0]], {0.5, 0.5}, {0, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 2\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "Section"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[
           {Thickness[0.03], LineBox[{{0, 0.2}, {0, 0}, {1, 0}, {1, 0.2}}], 
            {EdgeForm[None], FaceForm[GrayLevel[0.85]], RectangleBox[{0, 0}], 
             InsetBox[
              StyleBox["\<\"Subsection\"\>",
               StripOnInput->False,
               TextAlignment->Center,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[0]], {0.5, 0.5}, {0, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 3\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "Subsection"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[{
            {FaceForm[RGBColor[0, 0, 1]], RectangleBox[{0, 0}], 
             RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
            {FaceForm[RGBColor[0, 0, 1]], 
             RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
              StyleBox["\<\"READ\"\>",
               StripOnInput->False,
               TextAlignment->Left,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 4\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "READ"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[{
            {FaceForm[RGBColor[1, 0, 0]], RectangleBox[{0, 0}], 
             RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
            {FaceForm[RGBColor[1, 0, 0]], 
             RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
              StyleBox["\<\"DO\"\>",
               StripOnInput->False,
               TextAlignment->Left,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 5\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "DO"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[{
            {FaceForm[RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0]], RectangleBox[{0, 0}],
              RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
            {FaceForm[RGBColor[0, 
              NCache[
               Rational[4, 9], 0.4444444444444444], 0]], 
             RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
              StyleBox["\<\"TRY\"\>",
               StripOnInput->False,
               TextAlignment->Left,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 6\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "TRY"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[{
            {FaceForm[RGBColor[1, 0.5, 0]], RectangleBox[{0, 0}], 
             RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
            {FaceForm[RGBColor[1, 0.5, 0]], 
             RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
              StyleBox["\<\"CODE\"\>",
               StripOnInput->False,
               TextAlignment->Left,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 7\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "CODE"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[{
            {FaceForm[RGBColor[0.6, 0.4, 0.2]], RectangleBox[{0, 0}], 
             RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
            {FaceForm[RGBColor[0.6, 0.4, 0.2]], 
             RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
              StyleBox["\<\"TEACH\"\>",
               StripOnInput->False,
               TextAlignment->Left,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 8\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "TEACH"]]]]], 
      TagBox[GridBox[{
         {
          GraphicsBox[
           {EdgeForm[None], FaceForm[None], RectangleBox[{0, 0}], 
            {FaceForm[GrayLevel[0.85]], 
             PolygonBox[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {
               1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
             InsetBox[
              StyleBox["\<\"Page\"\>",
               StripOnInput->False,
               TextAlignment->Center,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[0],
               Background->None], {0.475, 0.5}, {1, 0}], InsetBox[
              StyleBox["\<\"Break\"\>",
               StripOnInput->False,
               TextAlignment->Center,
               FontFamily->"Arial Black",
               FontSize->12,
               FontColor->GrayLevel[0],
               Background->None], {0.525, 0.5}, {-1, 0}], 
             {Thickness[0.02], Dashing[Tiny], 
              LineBox[{{0.49, 0.75}, {0.49, 0.25}}]}}},
           AspectRatio->NCache[
             Rational[1, 3], 0.3333333333333333],
           ImageSize->{90, 30}], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{1, 0}],
            CacheGraphics->False],
           Spacer[1]], 
          StyleBox["\<\"Alt + 9\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->12]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>ReleaseHold[
       Hold[
        FrontEndExecute[
         FrontEnd`NotebookWrite[
          FrontEnd`InputNotebook[], 
          Cell["", "PageBreak"]]]]]}], 
     ActionMenuBox[
      StyleBox["\<\"Change Display\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], {
      TagBox[GridBox[{
         {
          StyleBox["\<\"Teacher\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->14], 
          DynamicBox[ToBoxes[
            If[CurrentValue[
               InputNotebook[], "ScreenStyleEnvironment"] == "Teacher", 
             Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
            StandardForm],
           ImageSizeCache->{0., {0., 6.}}]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>(CurrentValue[
         FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Teacher"; 
      FrontEndExecute[
        FrontEndToken[
         FrontEnd`InputNotebook[], "SelectAll"]]; FrontEndExecute[
        FrontEndToken[
         FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]), 
      TagBox[GridBox[{
         {
          StyleBox["\<\"Student\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->14], 
          DynamicBox[ToBoxes[
            If[CurrentValue[
               InputNotebook[], "ScreenStyleEnvironment"] == "Student", 
             Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
            StandardForm],
           ImageSizeCache->{0., {0., 6.}}]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>(CurrentValue[
         FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Student"; 
      FrontEndExecute[
        FrontEndToken[
         FrontEnd`InputNotebook[], "SelectAll"]]; FrontEndExecute[
        FrontEndToken[
         FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]), 
      TagBox[GridBox[{
         {
          StyleBox["\<\"Author\"\>",
           StripOnInput->False,
           FontFamily->"Arial Black",
           FontSize->14], 
          DynamicBox[ToBoxes[
            If[CurrentValue[
               InputNotebook[], "ScreenStyleEnvironment"] == "Author", 
             Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
            StandardForm],
           ImageSizeCache->{0., {0., 6.}}]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]:>(CurrentValue[
         FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Author"; 
      Null)}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.627330401713924*^9, 3.627330421105627*^9}, 
   3.6274025644841857`*^9, 3.6274146293475513`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<Magnification\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.627659928405142*^9, 3.6276599488167777`*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.6276599497834234`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magnificationMenu", " ", "=", " ", 
  RowBox[{"ActionMenu", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Zoom\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\n", "\t", 
    RowBox[{"{", "\[IndentingNewLine]", "\t", 
     RowBox[{
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<80%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", " ", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               ".8"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", ".8"}], "\n", 
        "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<90%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               ".9"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", ".9"}], "\n", 
        "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<100%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               "1"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1"}], "\n", 
        "\t\t", "}"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<110%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               "1.1"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1.1"}], "\n", 
        "\t\t", ")"}]}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"Grid", "[", 
        RowBox[{"{", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<120%\>\"", ",", " ", "14", ",", " ", 
             RowBox[{
             "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
            "]"}], ",", "\n", "\t\t", 
           RowBox[{"Dynamic", "[", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                 "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
               "1.2"}], ",", " ", "\n", "\t\t\t", 
              RowBox[{"Style", "[", 
               RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                RowBox[{
                "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
               "]"}], ",", " ", "\"\<\>\""}], "]"}], "]"}]}], "}"}], "}"}], 
        "]"}], " ", "\[RuleDelayed]", " ", "\n", "\t\t", 
       RowBox[{"(", "\n", "\t\t", 
        RowBox[{
         RowBox[{"CurrentValue", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1.2"}], "\n", 
        "\t\t", ")"}]}]}], "\[IndentingNewLine]", "}"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627240622412279*^9, 3.6272407921994886`*^9}, {
   3.6272411648685255`*^9, 3.627241260893558*^9}, {3.6272413427620487`*^9, 
   3.627241470217898*^9}, {3.62724151185406*^9, 3.627241523709937*^9}, {
   3.627241817183076*^9, 3.6272418588632526`*^9}, {3.627241935962245*^9, 
   3.6272422838212056`*^9}, 3.6272423773254347`*^9, {3.627330364714194*^9, 
   3.6273303718279486`*^9}, {3.6274056944591517`*^9, 3.62740577565127*^9}, {
   3.6274156999095964`*^9, 3.6274157419377995`*^9}, {3.627416373240923*^9, 
   3.627416378845484*^9}, {3.6274168393865333`*^9, 3.6274168608156757`*^9}, {
   3.6274170984564376`*^9, 3.627417110527644*^9}, {3.6274175304276304`*^9, 
   3.627417532595847*^9}, {3.6274179967102537`*^9, 3.6274180353471174`*^9}, {
   3.627659837502401*^9, 3.6276598504750633`*^9}, {3.6276598909651265`*^9, 
   3.6276598961996245`*^9}, {3.6276599623208027`*^9, 3.62765997081548*^9}, {
   3.627660005698803*^9, 3.6276600093402295`*^9}, {3.6276601472501783`*^9, 
   3.627660192475413*^9}, {3.627660230373741*^9, 3.6276603129247737`*^9}, {
   3.627660347437842*^9, 3.627660403530332*^9}}],

Cell[BoxData[
 ActionMenuBox[
  StyleBox["\<\"Zoom\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14], {
  TagBox[GridBox[{
     {
      StyleBox["\<\"80%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 0.8, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
    FrontEnd`InputNotebook[], "Magnification"] = 0.8), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"90%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 0.9, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
    FrontEnd`InputNotebook[], "Magnification"] = 0.9), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"100%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 1, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>{CurrentValue[
     FrontEnd`InputNotebook[], "Magnification"] = 1}, 
  TagBox[GridBox[{
     {
      StyleBox["\<\"110%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 1.1, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
    FrontEnd`InputNotebook[], "Magnification"] = 1.1), 
  TagBox[GridBox[{
     {
      StyleBox["\<\"120%\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->14], 
      DynamicBox[ToBoxes[
        If[CurrentValue[
           FrontEnd`InputNotebook[], "Magnification"] == 1.2, 
         Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
        StandardForm]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>(CurrentValue[
    FrontEnd`InputNotebook[], "Magnification"] = 1.2)}]], "Output",
 CellChangeTimes->{{3.6276602917606244`*^9, 3.6276603136262393`*^9}, {
   3.627660386742106*^9, 3.627660404417918*^9}, 3.628437988216322*^9, 
   3.6286830329721117`*^9, 3.6288031103906326`*^9, 3.6289333823324966`*^9, 
   3.628944326372656*^9, 3.628945271730074*^9, 3.6289663000601234`*^9, 
   3.628968239638063*^9, 3.6289698644709644`*^9, 3.629029654310497*^9, 
   3.629038340090124*^9, 3.629040104362744*^9, 3.6290404556531568`*^9, 
   3.629114726030795*^9, 3.6291159844269886`*^9, 3.6291226900989904`*^9, 
   3.629122786782524*^9, 3.6291228180439806`*^9, 3.6291230161529355`*^9, 
   3.6292914501685133`*^9, 3.6293096898349404`*^9, 3.629310829973431*^9, 
   3.629322530455443*^9, 3.6293330964595547`*^9, 3.6293350885730667`*^9, 
   3.629335768022483*^9, 3.6295744953033915`*^9, 3.6295846825102158`*^9, 
   3.629628286567827*^9, 3.6296285600724354`*^9, 3.629630879742365*^9, 
   3.62963390288079*^9, 3.629635680044489*^9, 3.6296387440528593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StyleBox", "[", 
  RowBox[{
   RowBox[{"GraphicsBox", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], "]"}], ",", 
   RowBox[{"\"\<CacheGraphics\>\"", "\[Rule]", "False"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"StyleBox", "[", 
  RowBox[{
   RowBox[{"GraphicsBox", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"10", ",", "0"}], "}"}]}], ",", 
     RowBox[{"BaselinePosition", "\[Rule]", "Baseline"}]}], "]"}], ",", 
   RowBox[{"\<\"CacheGraphics\"\>", "\[Rule]", "False"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6274146293555517`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"backNavAuthor", " ", "=", " ", 
   RowBox[{"Button", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"20", ",", "20"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FrontEndExecute", "[", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<ScrollPagePrevious\>\""}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}], "]"}], ";"}], "\[IndentingNewLine]", 
      ")"}], ",", 
     RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"30", ",", "30"}], "}"}]}], ",", 
     RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6289706624370813`*^9, 3.628970687506856*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forwardNavAuthor", " ", "=", " ", 
   RowBox[{"Button", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", ".5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"20", ",", "20"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FrontEndExecute", "[", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"FrontEndToken", "[", 
          RowBox[{
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
           "\"\<ScrollPageNext\>\""}], "]"}], "\[IndentingNewLine]", ")"}], 
        "]"}], ";"}], "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"30", ",", "30"}], "}"}]}], ",", 
     RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.628970640964733*^9, 3.6289706499937677`*^9}, {
  3.6289707114768133`*^9, 3.6289707194451466`*^9}, {3.6289709408073025`*^9, 
  3.628970941481757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FrontEndExecute", "[", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FrontEndToken", "[", 
        RowBox[{
         RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
         "\"\<ScrollPagePrevious\>\""}], "]"}], ",", 
       RowBox[{"{", "#", "}"}]}], "]"}], "\[IndentingNewLine]", ")"}], "]"}], 
   "&"}], "/@", 
  RowBox[{"{", "2", "}"}]}]], "Input",
 CellChangeTimes->{{3.6289709544193974`*^9, 3.6289709648023367`*^9}, {
  3.6289710551331835`*^9, 3.6289710874548416`*^9}}],

Cell[BoxData[
 RowBox[{"{", "Null", "}"}]], "Output",
 CellChangeTimes->{3.6289710891289587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FrontEnd`SelectionMove", "[", 
     RowBox[{
      RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "Before", ",", 
      "Notebook", ",", 
      RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
          "\"\<ScrollPageNext\>\""}], "]"}], ",", 
        RowBox[{"{", "#", "}"}]}], "]"}], "&"}], "/@", 
     RowBox[{"{", "6", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "Null", "}"}]], "Output",
 CellChangeTimes->{3.6289713688719993`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CurrentValue", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<CounterValue\>\"", ",", "\"\<slideRPI\>\""}], "}"}], "]"}], 
  "-", "6"}]], "Input",
 CellChangeTimes->{{3.6289714419246635`*^9, 3.6289714624363737`*^9}}],

Cell[BoxData[
 RowBox[{"-", "4"}]], "Output",
 CellChangeTimes->{{3.628971438349266*^9, 3.628971462674525*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"backNav", " ", "=", " ", 
   RowBox[{"Button", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"20", ",", "20"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FrontEndExecute", "[", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<ScrollPagePrevious\>\""}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"FrontEnd`SelectionMove", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "All", ",", 
            "Notebook", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<SelectionOpenAllGroups\>\""}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}], "]"}], ";"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RPIStylesheet`title", "=", 
          RowBox[{"NotebookFind", "[", 
           RowBox[{
            RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<Title\>\"", ",", 
            "Previous", ",", "CellStyle", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RPIStylesheet`subsection", "=", 
          RowBox[{"NotebookFind", "[", 
           RowBox[{
            RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<Subsection\>\"", 
            ",", "Previous", ",", "CellStyle", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RPIStylesheet`display", "=", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"RPIStylesheet`subsection", ",", "$Failed"}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NotebookRead", "[", 
              RowBox[{"Cells", "[", "RPIStylesheet`subsection", "]"}], "]"}], 
             "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"RPIStylesheet`title", ",", "$Failed"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NotebookRead", "[", 
              RowBox[{"Cells", "[", "RPIStylesheet`title", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Mathematica\>\"", ",", 
              RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}]}], "]"}]}], 
         ";"}], "\[IndentingNewLine]", ")"}], "*)"}], "\[IndentingNewLine]", 
      ")"}], ",", 
     RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"30", ",", "30"}], "}"}]}], ",", 
     RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.6274054620049086`*^9, 3.627405468429551*^9}, 
   3.627405537764484*^9, 3.627407181380829*^9, {3.6274120294605885`*^9, 
   3.627412033533996*^9}, {3.6274166728788843`*^9, 3.6274166735719533`*^9}, {
   3.6274168844950438`*^9, 3.6274168910617*^9}, {3.627416947146308*^9, 
   3.6274169616737604`*^9}, {3.6274170467942715`*^9, 
   3.6274170686004524`*^9}, {3.6276645751979103`*^9, 
   3.6276647175252657`*^9}, {3.6276647526667557`*^9, 3.627664755062363*^9}, {
   3.6276653746817846`*^9, 3.6276654409360743`*^9}, {3.627665494585933*^9, 
   3.6276656575691137`*^9}, 3.627665901590689*^9, 3.6276660821719756`*^9, 
   3.6276663070028973`*^9, {3.6290297439706264`*^9, 3.629029744556018*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"forwardNav", " ", "=", " ", 
   RowBox[{"Button", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", ".5"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"20", ",", "20"}], "}"}]}], ",", 
       RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
       RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FrontEndExecute", "[", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<ScrollPageNext\>\""}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"FrontEnd`SelectionMove", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "All", ",", 
            "Notebook", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"FrontEndToken", "[", 
           RowBox[{
            RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
            "\"\<SelectionOpenAllGroups\>\""}], "]"}], ";"}], 
         "\[IndentingNewLine]", ")"}], "]"}], ";"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"(", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RPIStylesheet`title", "=", 
          RowBox[{"NotebookFind", "[", 
           RowBox[{
            RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<Title\>\"", ",", 
            "Previous", ",", "CellStyle", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RPIStylesheet`subsection", "=", 
          RowBox[{"NotebookFind", "[", 
           RowBox[{
            RowBox[{"InputNotebook", "[", "]"}], ",", "\"\<Subsection\>\"", 
            ",", "Previous", ",", "CellStyle", ",", 
            RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"RPIStylesheet`display", "=", 
          RowBox[{"Which", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"RPIStylesheet`subsection", ",", "$Failed"}], "]"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NotebookRead", "[", 
              RowBox[{"Cells", "[", "RPIStylesheet`subsection", "]"}], "]"}], 
             "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"!", 
             RowBox[{"MatchQ", "[", 
              RowBox[{"RPIStylesheet`title", ",", "$Failed"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NotebookRead", "[", 
              RowBox[{"Cells", "[", "RPIStylesheet`title", "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            "\[IndentingNewLine]", "True", ",", "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Mathematica\>\"", ",", 
              RowBox[{"FontSlant", "\[Rule]", "Italic"}]}], "]"}]}], "]"}]}], 
         ";"}], "\[IndentingNewLine]", ")"}], "*)"}], "\[IndentingNewLine]", 
      ")"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"30", ",", "30"}], "}"}]}], ",", 
     RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.627405472392947*^9, 3.6274054804157495`*^9}, 
   3.6274055386685743`*^9, 3.6274071836020513`*^9, {3.6274120399686394`*^9, 
   3.6274120402286654`*^9}, {3.6274166466992664`*^9, 
   3.6274166579343896`*^9}, {3.6274166997005663`*^9, 
   3.6274167332179174`*^9}, {3.6274167715697517`*^9, 3.6274168206766624`*^9}, 
   3.627416990932686*^9, {3.6274170793885307`*^9, 3.627417080148607*^9}, {
   3.6276647677028055`*^9, 3.6276647928548183`*^9}, 3.627665680448406*^9, {
   3.6276658117121964`*^9, 3.627665812615805*^9}, {3.6276658575318265`*^9, 
   3.6276658899298973`*^9}, {3.627666059697955*^9, 3.6276660677743597`*^9}, 
   3.6276663003714647`*^9, {3.628970623679183*^9, 3.628970624914008*^9}, {
   3.62902975953202*^9, 3.6290297633715863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"homeNav", "=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
        RowBox[{"LineBox", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.25"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "1.75"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", "1"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0.5", ",", "1.5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FaceForm", "[", 
           RowBox[{"GrayLevel", "[", "1", "]"}], "]"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0.4", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0.6", ",", "0.5"}], "}"}]}], "]"}]}], "}"}]}], "}"}], 
      ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
        "\"\<ScrollPageFirst\>\""}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.6274054844461527`*^9, 3.627405492163924*^9}, 
   3.627405540442752*^9, 3.627407173801071*^9, {3.6274120449901414`*^9, 
   3.6274120453591785`*^9}, 3.6293042492896514`*^9}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], LineBox[{{-0.25, 1}, {0.5, 1.75}, {1.25, 1}}], 
    PolygonBox[{{0, 0}, {1, 0}, {1, 1}, {0.5, 1.5}, {0, 1}, {0, 0}}], 
    {FaceForm[GrayLevel[1]], RectangleBox[{0.4, 0}, {0.6, 0.5}]}},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "ScrollPageFirst"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.629304249733943*^9, 3.629309689901984*^9, 
  3.629310830018463*^9, 3.6293225305174847`*^9, 3.6293330965215936`*^9, 
  3.6293350886311045`*^9, 3.629335768098534*^9, 3.6295744953523965`*^9, 
  3.629584682560166*^9, 3.629628286635872*^9, 3.6296285601504893`*^9, 
  3.6296308797993994`*^9, 3.6296339029217944`*^9, 3.629635680097494*^9, 
  3.629638744094863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pageButton", "=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", ".7"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".7", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Save\>\""}], 
       "]"}], "}"}], "]"}], ",", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.6274054945071583`*^9, 3.627405528295537*^9}, {
  3.627405862179922*^9, 3.627405897041408*^9}, {3.6274070724559374`*^9, 
  3.6274070761223044`*^9}, {3.627407108291521*^9, 3.6274071568603773`*^9}, {
  3.6274072041751084`*^9, 3.6274072854312334`*^9}, {3.6274120502526674`*^9, 
  3.6274120509407363`*^9}, {3.6293055383110685`*^9, 3.629305603649745*^9}, {
  3.6293239018253326`*^9, 3.6293239103010054`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], 
    LineBox[{{0, 0}, {1, 0}, {1, 0.7}, {0.7, 1}, {0, 1}, {0, 0}}]},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Save"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.6286842124611263`*^9, 3.62880311047569*^9, 3.628933382391536*^9, 
   3.628944326425692*^9, 3.628945271802123*^9, 3.62896630012916*^9, 
   3.62896823970811*^9, 3.628969864531007*^9, 3.6290296543985553`*^9, 
   3.629038340177182*^9, 3.6290401045218496`*^9, 3.6290404557292085`*^9, 
   3.6291147261308618`*^9, 3.6291159846161137`*^9, 3.6291226902120647`*^9, 
   3.6291227868465652`*^9, 3.629122818111026*^9, 3.629123016291024*^9, 
   3.629291450318613*^9, {3.629305564681692*^9, 3.629305585563649*^9}, 
   3.6293096900380754`*^9, 3.629310830183573*^9, 3.6293225306575775`*^9, {
   3.629323903579505*^9, 3.6293239111835933`*^9}, 3.6293330965376053`*^9, 
   3.629335088648116*^9, 3.629335768112544*^9, 3.629574495362397*^9, 
   3.629584682570156*^9, 3.6296282866508827`*^9, 3.62962856016651*^9, 
   3.629630879815411*^9, 3.629633902937796*^9, 3.629635680108495*^9, 
   3.6296387441058645`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saveButtonIcon", "=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", ".4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", ".4"}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{".5", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".5", ",", ".5"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{".3", ",", ".6"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".5", ",", ".4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".7", ",", ".6"}], "}"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Thickness", "[", ".01", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".2", ",", ".2"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".8", ",", ".2"}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Save\>\""}], 
       "]"}], "}"}], "]"}], ",", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.627411711072753*^9, 3.627411963808024*^9}, {
  3.6274120155962024`*^9, 3.627412019628606*^9}, {3.6276596328043847`*^9, 
  3.6276596334598207`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[{
    {Thickness[0.1], LineBox[{{0, 0.4}, {0, 0}, {1, 0}, {1, 0.4}}], 
     LineBox[{{{0.5, 1}, {0.5, 0.5}}, {{0.3, 0.6}, {0.5, 0.4}, {0.7, 0.6}}}]}, 
    {Thickness[0.01], LineBox[{{0.2, 0.2}, {0.8, 0.2}}]}},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Save"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6274117323788834`*^9, 3.6274117641120567`*^9}, {
   3.6274118235550003`*^9, 3.6274118896146054`*^9}, {3.6274119318938327`*^9, 
   3.627411964736117*^9}, 3.627412020966739*^9, 3.6274120547051125`*^9, 
   3.627414629389556*^9, 3.6274156266312695`*^9, {3.6276596159301033`*^9, 
   3.6276596357853737`*^9}, 3.6286842147296515`*^9, 3.6288031104977055`*^9, 
   3.628933382405545*^9, 3.6289443264427032`*^9, 3.628945271821135*^9, 
   3.628966300146172*^9, 3.6289682397281237`*^9, 3.628969864552019*^9, 
   3.6290296544235754`*^9, 3.629038340197194*^9, 3.6290401045498686`*^9, 
   3.6290404557492223`*^9, 3.62911472615588*^9, 3.6291159846441317`*^9, 
   3.6291226902310777`*^9, 3.629122786864579*^9, 3.629122818128037*^9, 
   3.629123016321045*^9, 3.6292914503406296`*^9, 3.629309690075101*^9, 
   3.6293108302976484`*^9, 3.6293225307726545`*^9, 3.6293330965536146`*^9, 
   3.6293350886651287`*^9, 3.629335768131556*^9, 3.629574495376399*^9, 
   3.629584682582144*^9, 3.629628286669894*^9, 3.629628560187513*^9, 
   3.6296308798324213`*^9, 3.6296339029547977`*^9, 3.6296356801204967`*^9, 
   3.6296387441178656`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tocButtonIcon", "=", 
  RowBox[{"ActionMenu", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.1", "]"}], ",", "White", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", ".8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", ".8"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", ".5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", ".5"}], "}"}]}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", " ", ".2"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", " ", ".2"}], "}"}]}], "}"}]}], "}"}], "]"}], 
         ","}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"FaceForm", "@", "None"}], ",", 
        RowBox[{"EdgeForm", "@", "Black"}], ",", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", "\[IndentingNewLine]", 
        RowBox[{"Text", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<1\>\"", ",", "14", ",", "Bold"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{".5", ",", ".5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
        "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"ImageMargins", "\[Rule]", "0"}], ",", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "\"\<Button\>\""}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6293042781499357`*^9, 3.629304433799697*^9}, {
  3.6293048195222387`*^9, 3.6293048933575954`*^9}, {3.629304954979476*^9, 
  3.6293050976798472`*^9}, {3.629305137207288*^9, 3.6293054750087585`*^9}}],

Cell[BoxData[
 ActionMenuBox[
  GraphicsBox[
   {EdgeForm[GrayLevel[0]], FaceForm[None], RectangleBox[{0, 0}], 
    {GrayLevel[0], InsetBox[
      StyleBox["\<\"1\"\>",
       StripOnInput->False,
       FontSize->14,
       FontWeight->Bold], {0.5, 0.5}]}},
   Background->None,
   ImageSize->{20, 20}], {"1":>1, "2":>2},
  Appearance->"Button",
  Enabled->True,
  Evaluator->None,
  ImageMargins->0,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.629304321311795*^9, {3.6293043577051167`*^9, 3.6293044345582047`*^9}, {
   3.6293048320015774`*^9, 3.6293048938369083`*^9}, {3.6293049589081044`*^9, 
   3.629305098459382*^9}, 3.6293051378327055`*^9, {3.6293051690996017`*^9, 
   3.6293054755841427`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saveButton", "=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Save\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Save\>\""}], 
       "]"}], "}"}], "]"}], ",", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9}],

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Save\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Save"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6274122629489355`*^9, 3.627412280079648*^9}, 
   3.627413619400567*^9, {3.6274136654311695`*^9, 3.627413688400466*^9}, 
   3.62741373124475*^9, 3.627414629399556*^9, 3.6274152436679773`*^9, 
   3.6274156279313993`*^9, 3.6274169013967333`*^9, 3.627417173106902*^9, 
   3.6274180953591175`*^9, {3.6276596181155725`*^9, 3.627659638443159*^9}, 
   3.628684217333383*^9, 3.6288031105187187`*^9, 3.6289333824195538`*^9, 
   3.6289443264577127`*^9, 3.6289452718401475`*^9, 3.628966300163179*^9, 
   3.628968239744135*^9, 3.62896986456703*^9, 3.629029654438582*^9, 
   3.6290383402132053`*^9, 3.6290401045788875`*^9, 3.6290404557612295`*^9, 
   3.6291147261718903`*^9, 3.629115984667148*^9, 3.629122690243086*^9, 
   3.6291227868775873`*^9, 3.6291228181400447`*^9, 3.6291230163450603`*^9, 
   3.629291450360642*^9, 3.629309690202185*^9, 3.6293108303216643`*^9, 
   3.62932253080868*^9, 3.6293330965656266`*^9, 3.629335088676134*^9, 
   3.6293357681455655`*^9, 3.6295744953854*^9, 3.629584682592134*^9, 
   3.6296282866819024`*^9, 3.6296285602545576`*^9, 3.629630879843429*^9, 
   3.629633902966799*^9, 3.6296356801314974`*^9, 3.6296387441268663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\"\<ModifiedInMemory\>\"", "/.", 
  RowBox[{"NotebookInformation", "[", 
   RowBox[{"InputNotebook", "[", "]"}], "]"}]}], "\n", "False"}], "Code",
 CellChangeTimes->{3.6293253464151545`*^9}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.6293330965786314`*^9, 3.629335088691145*^9, 
  3.629335768164578*^9, 3.6295744953984013`*^9, 3.62958468260612*^9, 
  3.629628286697913*^9, 3.6296285602745714`*^9, 3.629630879858439*^9, 
  3.6296339029828005`*^9, 3.629635680149499*^9, 3.629638744141868*^9}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.6293330965786314`*^9, 3.629335088691145*^9, 
  3.629335768164578*^9, 3.6295744953984013`*^9, 3.62958468260612*^9, 
  3.629628286697913*^9, 3.6296285602745714`*^9, 3.629630879858439*^9, 
  3.6296339029828005`*^9, 3.629635680149499*^9, 3.629638744142868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"undoButton", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"end", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"6", " ", 
          RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}]}]}], ",", " ", 
      RowBox[{"head", " ", "=", " ", ".75"}]}], "}"}], ",", "\n", 
    RowBox[{"Button", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"FaceForm", " ", "@", " ", "None"}], ",", 
          RowBox[{"(*", "\n", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "head"}], ",", 
                RowBox[{"1", "+", "head"}]}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "0.1", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", " ", "1", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
              RowBox[{"6", " ", 
               RowBox[{"Pi", "/", "8"}]}]}], "}"}]}], "]"}], ",", "\n", 
          RowBox[{"FaceForm", "[", "Black", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"6", " ", 
                 RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"head", ",", " ", "0"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "head"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "head"}], ",", " ", "0"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"20", ",", "20"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
        RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"{", 
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Undo\>\""}],
          "]"}], "}"}], "]"}], ",", 
      RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
      RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
      RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9, {3.6287831791435146`*^9, 3.6287831952843027`*^9}, {
   3.6287832989915247`*^9, 3.628783401966279*^9}, {3.628783454916676*^9, 
   3.628783895900528*^9}, {3.628784157231408*^9, 3.6287841678124847`*^9}, {
   3.6287842359490266`*^9, 3.6287842733480177`*^9}, 3.6287844595566587`*^9}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], FaceForm[None], 
    CircleBox[{0, 0}, 1, 
     NCache[{Rational[-1, 2] Pi, Rational[3, 4] Pi}, {-1.5707963267948966`, 
      2.356194490192345}]], 
    {FaceForm[GrayLevel[0]], 
     PolygonBox[{{-0.17677669529663687`, 
      0.17677669529663687`}, {-1.237436867076458, 
      1.237436867076458}, {-1.237436867076458, 0.17677669529663687`}}]}},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Undo"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.6287832598893833`*^9, {3.6287833398018255`*^9, 3.6287833770987225`*^9}, {
   3.62878354825806*^9, 3.628783599000231*^9}, 3.6287836347511168`*^9, {
   3.6287836843532696`*^9, 3.6287838662887373`*^9}, 3.6287838989205456`*^9, {
   3.6287841616833906`*^9, 3.628784169030294*^9}, {3.6287842370527625`*^9, 
   3.628784274150552*^9}, 3.628784460163064*^9, 3.628803110544736*^9, 
   3.6289333824445715`*^9, 3.628944326475725*^9, 3.628945271868168*^9, 
   3.628966300188199*^9, 3.628968239770155*^9, 3.6289698645890446`*^9, 
   3.6290296544615993`*^9, 3.6290383402372217`*^9, 3.6290401046159115`*^9, 
   3.6290404557872467`*^9, 3.629114726197909*^9, 3.629115984696167*^9, 
   3.6291226902631083`*^9, 3.6291227868986015`*^9, 3.629122818161065*^9, 
   3.629123016378083*^9, 3.6292914503886633`*^9, 3.629309690241212*^9, 
   3.629310830365694*^9, 3.6293225308437014`*^9, 3.6293330966016483`*^9, 
   3.629335088713161*^9, 3.629335768188594*^9, 3.6295744954174027`*^9, 
   3.629584682623103*^9, 3.62962828672293*^9, 3.62962856030359*^9, 
   3.6296308798794537`*^9, 3.629633902999802*^9, 3.629635680168501*^9, 
   3.6296387441598697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"redoButton", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"end", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"Pi", "/", "4"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}]}]}], ",", " ", 
      RowBox[{"head", " ", "=", " ", ".75"}]}], "}"}], ",", "\n", 
    RowBox[{"Button", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"FaceForm", " ", "@", " ", "None"}], ",", 
          RowBox[{"(*", "\n", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "head"}], ",", 
                RowBox[{"1", "+", "head"}]}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "0.1", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", " ", "1", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Pi", "/", "4"}], ",", " ", 
              RowBox[{"3", " ", 
               RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], ",", "\n", 
          RowBox[{"FaceForm", "[", "Black", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"Pi", "/", "4"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"head", ",", " ", "0"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"Pi", "/", "4"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "head"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"Pi", "/", "4"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "head"}], ",", " ", "0"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"20", ",", "20"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
        RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"{", 
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Redo\>\""}],
          "]"}], "}"}], "]"}], ",", 
      RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
      RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
      RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9, {3.6287831791435146`*^9, 3.6287831952843027`*^9}, {
   3.6287832989915247`*^9, 3.628783401966279*^9}, {3.628783454916676*^9, 
   3.628783895900528*^9}, {3.628784157231408*^9, 3.6287841678124847`*^9}, {
   3.6287842359490266`*^9, 3.6287843038656*^9}, {3.6287843468723516`*^9, 
   3.628784468253479*^9}, {3.6287846086850457`*^9, 3.628784611641029*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], FaceForm[None], 
    CircleBox[{0, 0}, 1, 
     NCache[{Rational[1, 4] Pi, Rational[3, 2] Pi}, {0.7853981633974483, 
      4.71238898038469}]], 
    {FaceForm[GrayLevel[0]], 
     PolygonBox[{{0.17677669529663687`, 0.17677669529663687`}, {
      1.237436867076458, 0.17677669529663687`}, {1.237436867076458, 
      1.237436867076458}}]}},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Redo"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6287843534647493`*^9, 3.628784468595709*^9}, 
   3.628784612540621*^9, 3.62880311056575*^9, 3.6289333824645844`*^9, 
   3.6289443264927373`*^9, 3.6289452718871794`*^9, 3.6289663002062073`*^9, 
   3.6289682398371954`*^9, 3.628969864605054*^9, 3.6290296544826145`*^9, 
   3.629038340258238*^9, 3.6290401046869593`*^9, 3.6290404558092594`*^9, 
   3.629114726222925*^9, 3.62911598472619*^9, 3.6291226902801104`*^9, 
   3.6291227869156127`*^9, 3.6291228182281046`*^9, 3.6291230164091053`*^9, 
   3.62929145041568*^9, 3.629309690274234*^9, 3.6293108303997173`*^9, 
   3.62932253087072*^9, 3.6293330966176586`*^9, 3.6293350887311735`*^9, 
   3.6293357682076087`*^9, 3.6295744954414053`*^9, 3.629584682637089*^9, 
   3.6296282867389402`*^9, 3.6296285603236046`*^9, 3.629630879895464*^9, 
   3.629633903012803*^9, 3.6296356801825027`*^9, 3.629638744170871*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saveButton", "=", 
  RowBox[{"Button", "[", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Save\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Save\>\""}], 
       "]"}], "}"}], "]"}], ",", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9}],

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Save\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Save"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.6288031105847626`*^9, 3.6289333824775934`*^9, 
  3.6289443265077457`*^9, 3.6289452719031897`*^9, 3.6289663002192154`*^9, 
  3.6289682398502045`*^9, 3.6289698646190643`*^9, 3.6290296544956207`*^9, 
  3.629038340272246*^9, 3.6290401047279916`*^9, 3.629040455823269*^9, 
  3.6291147262389355`*^9, 3.6291159847472*^9, 3.6291226902911177`*^9, 
  3.6291227869776525`*^9, 3.629122818239111*^9, 3.6291230164321184`*^9, 
  3.629291450432689*^9, 3.629309690295248*^9, 3.6293108304177294`*^9, 
  3.6293225308957376`*^9, 3.6293330966256647`*^9, 3.629335088740177*^9, 
  3.629335768222618*^9, 3.629574495450406*^9, 3.62958468264608*^9, 
  3.6296282867509484`*^9, 3.629628560339615*^9, 3.6296308799044695`*^9, 
  3.6296339030208044`*^9, 3.6296356801935034`*^9, 3.6296387441788716`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"undoButton2", " ", "=", " ", 
  RowBox[{"Button", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Undo\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Undo\>\""}], 
       "]"}], "}"}], "]"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.6293039179380927`*^9, 3.6293039801726913`*^9}}],

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Undo\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Undo"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6293039749762087`*^9, 3.6293039808101077`*^9}, 
   3.6293040130956926`*^9, 3.629309690315261*^9, 3.629310830432739*^9, 
   3.629322530909745*^9, 3.6293330966366725`*^9, 3.6293350887491827`*^9, 
   3.629335768235628*^9, 3.629574495458407*^9, 3.629584682655071*^9, 
   3.629628286819995*^9, 3.6296285603546247`*^9, 3.629630879914476*^9, 
   3.629633903028805*^9, 3.6296356802035046`*^9, 3.629638744185872*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"redoButton2", " ", "=", " ", 
  RowBox[{"Button", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Redo\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Redo\>\""}], 
       "]"}], "}"}], "]"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.629303995767106*^9, 3.629304008884878*^9}}],

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Redo\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14],
  Appearance->Automatic,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Redo"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.629304003115026*^9, 3.629304009568331*^9}, 
   3.6293096903372755`*^9, 3.629310830446752*^9, 3.6293225309237556`*^9, 
   3.6293330966456785`*^9, 3.62933508875819*^9, 3.6293357683056726`*^9, 
   3.629574495468408*^9, 3.629584682665061*^9, 3.629628286831002*^9, 
   3.6296285603696346`*^9, 3.629630879922481*^9, 3.629633903036806*^9, 
   3.629635680216506*^9, 3.629638744192873*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SelectionMove", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", " ", "Previous", ",", "Cell", 
   ",", "2"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"NotebookDelete", " ", "@", " ", 
  RowBox[{"SelectedCells", " ", "@", " ", 
   RowBox[{"InputNotebook", "[", "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.62868474991263*^9, 3.628684779386335*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<ModifiedInMemory\>\"", "/.", 
  RowBox[{"NotebookInformation", "[", "]"}]}]], "Input"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.6274139383394575`*^9, 3.627413967778401*^9}, 
   3.627414629425559*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Button", "[", 
  RowBox[{"\"\<d\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FrontEnd`SelectionMove", "[", 
        RowBox[{
         RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", "All", ",", 
         " ", "Cell", ",", " ", 
         RowBox[{"AutoScroll", " ", "\[Rule]", " ", "False"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"FrontEnd`NotebookDelete", "@", 
        RowBox[{"FrontEndExecute", "@", 
         RowBox[{"FrontEnd`Cells", "[", 
          RowBox[{"FrontEnd`NotebookSelection", "[", 
           RowBox[{"FrontEnd`InputNotebook", "[", "]"}], "]"}], "]"}]}]}]}], 
      "\[IndentingNewLine]", "}"}], "]"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6276579267950115`*^9, 3.627657964988533*^9}, {
  3.6276582581886826`*^9, 3.6276582584598713`*^9}, {3.627658351520626*^9, 
  3.627658396538707*^9}, {3.6276585604239097`*^9, 3.627658695944796*^9}, {
  3.627658732571277*^9, 3.6276588124106407`*^9}, {3.62765888872791*^9, 
  3.6276590048235083`*^9}, {3.627659037772873*^9, 3.62765904876522*^9}, {
  3.6276591436536417`*^9, 3.6276592246582932`*^9}, {3.6276592618331394`*^9, 
  3.6276593618610015`*^9}, {3.627659409496415*^9, 3.6276594633323927`*^9}}],

Cell[BoxData[
 ButtonBox["\<\"d\"\>",
  Appearance->Automatic,
  ButtonFunction:>{
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], All, Cell, AutoScroll -> False], 
      FrontEnd`NotebookDelete[
       FrontEndExecute[
        FrontEnd`Cells[
         FrontEnd`NotebookSelection[
          FrontEnd`InputNotebook[]]]]]}]},
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.627657965343772*^9, 3.627658259164333*^9, {3.6276583632504683`*^9, 
   3.62765837473814*^9}, 3.6276586269213557`*^9, 3.627658666942421*^9, 
   3.62765869705955*^9, {3.627658779061349*^9, 3.6276588131101065`*^9}, {
   3.62765889732065*^9, 3.6276589075234685`*^9}, 3.6276589558207474`*^9, 
   3.627659005545991*^9, {3.6276590388105664`*^9, 3.6276590491224613`*^9}, {
   3.62765913497484*^9, 3.6276592254608293`*^9}, {3.627659266184065*^9, 
   3.6276593440500937`*^9}, {3.6276594223900347`*^9, 3.6276594644031153`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Names", "[", "\"\<FrontEnd`Notebook*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6274161917587767`*^9, 3.627416206765277*^9}, {
  3.627659378936985*^9, 3.6276593856194515`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"FrontEnd`NotebookApply\"\>", 
   ",", "\<\"FrontEnd`NotebookClose\"\>", 
   ",", "\<\"FrontEnd`NotebookConvert\"\>", 
   ",", "\<\"FrontEnd`NotebookCreate\"\>", 
   ",", "\<\"FrontEnd`NotebookCreateReturnObject\"\>", 
   ",", "\<\"FrontEnd`NotebookDelete\"\>", 
   ",", "\<\"FrontEnd`NotebookEvaluate\"\>", 
   ",", "\<\"FrontEnd`NotebookFind\"\>", 
   ",", "\<\"FrontEnd`NotebookFindReturnObject\"\>", 
   ",", "\<\"FrontEnd`NotebookGet\"\>", 
   ",", "\<\"FrontEnd`NotebookInformation\"\>", 
   ",", "\<\"FrontEnd`NotebookInterfaceObject\"\>", 
   ",", "\<\"FrontEnd`NotebookLocate\"\>", 
   ",", "\<\"FrontEnd`NotebookObject\"\>", 
   ",", "\<\"FrontEnd`NotebookOpen\"\>", 
   ",", "\<\"FrontEnd`NotebookOpenReturnObject\"\>", 
   ",", "\<\"FrontEnd`NotebookPrint\"\>", ",", "\<\"FrontEnd`NotebookPut\"\>",
    ",", "\<\"FrontEnd`NotebookPutReturnObject\"\>", 
   ",", "\<\"FrontEnd`NotebookRead\"\>", 
   ",", "\<\"FrontEnd`NotebookResumeScreenUpdates\"\>", 
   ",", "\<\"FrontEnd`Notebooks\"\>", ",", "\<\"FrontEnd`NotebookSave\"\>", 
   ",", "\<\"FrontEnd`NotebookSelection\"\>", 
   ",", "\<\"FrontEnd`NotebookSuspendScreenUpdates\"\>", 
   ",", "\<\"FrontEnd`NotebookWrite\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.6274162028818893`*^9, 3.627416207013302*^9}, {
  3.6276593822431927`*^9, 3.627659386019722*^9}}]
}, Open  ]],

Cell[BoxData["SelectionMove"], "Input",
 CellChangeTimes->{{3.627416169215523*^9, 3.627416184240025*^9}}]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Latest Stuff", "Subchapter",
 CellChangeTimes->{{3.6293303744424553`*^9, 3.6293303881556253`*^9}}],

Cell[CellGroupData[{

Cell["Menubar Items", "Section",
 CellChangeTimes->{{3.629324896728176*^9, 3.6293248983282413`*^9}, {
  3.629325252329584*^9, 3.6293252563572693`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"saveButton", " ", "=", " ", 
  RowBox[{"Button", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Save\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"FrontEndExecute", "[", 
     RowBox[{"{", 
      RowBox[{"FrontEndToken", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Save\>\""}], 
       "]"}], "}"}], "]"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9, {3.629324594918398*^9, 3.6293246119147515`*^9}, {
   3.6293267137453833`*^9, 3.6293267142147064`*^9}}],

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Save\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Save"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{3.6288031105847626`*^9, 3.6289333824775934`*^9, 
  3.6289443265077457`*^9, 3.6289452719031897`*^9, 3.6289663002192154`*^9, 
  3.6289682398502045`*^9, 3.6289698646190643`*^9, 3.6290296544956207`*^9, 
  3.629038340272246*^9, 3.6290401047279916`*^9, 3.629040455823269*^9, 
  3.6291147262389355`*^9, 3.6291159847472*^9, 3.6291226902911177`*^9, 
  3.6291227869776525`*^9, 3.629122818239111*^9, 3.6291230164321184`*^9, 
  3.629291450432689*^9, 3.629309690295248*^9, 3.6293108304177294`*^9, 
  3.6293225308957376`*^9, 3.6293254302802052`*^9, 3.6293261986655564`*^9, 
  3.6293267147180343`*^9, 3.6293330966576853`*^9, 3.6293350887711973`*^9, 
  3.6293357683206825`*^9, 3.629574495479409*^9, 3.62958468267605*^9, 
  3.6296282868420095`*^9, 3.6296285603876467`*^9, 3.6296308799344893`*^9, 
  3.629633903045807*^9, 3.629635680228507*^9, 3.629638744202874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"undoButton", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"end", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"6", " ", 
          RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}]}]}], ",", " ", 
      RowBox[{"head", " ", "=", " ", ".75"}]}], "}"}], ",", "\n", 
    RowBox[{"Button", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"FaceForm", " ", "@", " ", "None"}], ",", 
          RowBox[{"(*", "\n", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "head"}], ",", 
                RowBox[{"1", "+", "head"}]}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "0.1", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", " ", "1", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
              RowBox[{"6", " ", 
               RowBox[{"Pi", "/", "8"}]}]}], "}"}]}], "]"}], ",", "\n", 
          RowBox[{"FaceForm", "[", "Black", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"6", " ", 
                 RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"head", ",", " ", "0"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "head"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{
                 RowBox[{"-", "6"}], " ", 
                 RowBox[{"Pi", "/", "8"}]}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "head"}], ",", " ", "0"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"20", ",", "20"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
        RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"{", 
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Undo\>\""}],
          "]"}], "}"}], "]"}], ",", 
      RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
      RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
      RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9, {3.6287831791435146`*^9, 3.6287831952843027`*^9}, {
   3.6287832989915247`*^9, 3.628783401966279*^9}, {3.628783454916676*^9, 
   3.628783895900528*^9}, {3.628784157231408*^9, 3.6287841678124847`*^9}, {
   3.6287842359490266`*^9, 3.6287842733480177`*^9}, 3.6287844595566587`*^9, {
   3.629326708110627*^9, 3.629326708566931*^9}, {3.629327997065814*^9, 
   3.6293280040214624`*^9}, {3.629328938472441*^9, 3.6293289421779094`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], FaceForm[None], 
    CircleBox[{0, 0}, 1, 
     NCache[{Rational[-1, 2] Pi, Rational[3, 4] Pi}, {-1.5707963267948966`, 
      2.356194490192345}]], 
    {FaceForm[GrayLevel[0]], 
     PolygonBox[{{-0.17677669529663687`, 
      0.17677669529663687`}, {-1.237436867076458, 
      1.237436867076458}, {-1.237436867076458, 0.17677669529663687`}}]}},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Undo"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.6287832598893833`*^9, {3.6287833398018255`*^9, 3.6287833770987225`*^9}, {
   3.62878354825806*^9, 3.628783599000231*^9}, 3.6287836347511168`*^9, {
   3.6287836843532696`*^9, 3.6287838662887373`*^9}, 3.6287838989205456`*^9, {
   3.6287841616833906`*^9, 3.628784169030294*^9}, {3.6287842370527625`*^9, 
   3.628784274150552*^9}, 3.628784460163064*^9, 3.628803110544736*^9, 
   3.6289333824445715`*^9, 3.628944326475725*^9, 3.628945271868168*^9, 
   3.628966300188199*^9, 3.628968239770155*^9, 3.6289698645890446`*^9, 
   3.6290296544615993`*^9, 3.6290383402372217`*^9, 3.6290401046159115`*^9, 
   3.6290404557872467`*^9, 3.629114726197909*^9, 3.629115984696167*^9, 
   3.6291226902631083`*^9, 3.6291227868986015`*^9, 3.629122818161065*^9, 
   3.629123016378083*^9, 3.6292914503886633`*^9, 3.629309690241212*^9, 
   3.629310830365694*^9, 3.6293225308437014`*^9, 3.629324949130314*^9, 
   3.629326708890149*^9, 3.629328004681903*^9, 3.6293289433556976`*^9, 
   3.6293330966777024`*^9, 3.629335088791213*^9, 3.629335768341698*^9, 
   3.6295744954944105`*^9, 3.629584682691035*^9, 3.629628286864025*^9, 
   3.6296285604096627`*^9, 3.629630879953502*^9, 3.629633903060808*^9, 
   3.6296356802445087`*^9, 3.629638744216875*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"redoButton", " ", "=", " ", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"end", " ", "=", " ", 
       RowBox[{
        RowBox[{"RotationMatrix", "[", 
         RowBox[{"Pi", "/", "4"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{"1", ",", " ", "0"}], "}"}]}]}], ",", " ", 
      RowBox[{"head", " ", "=", " ", ".75"}]}], "}"}], ",", "\n", 
    RowBox[{"Button", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\n", 
         RowBox[{
          RowBox[{"FaceForm", " ", "@", " ", "None"}], ",", 
          RowBox[{"(*", "\n", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}], ",", " ", 
                RowBox[{
                 RowBox[{"-", "1"}], "-", "head"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "+", "head"}], ",", 
                RowBox[{"1", "+", "head"}]}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "0.1", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", " ", "1", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Pi", "/", "4"}], ",", " ", 
              RowBox[{"3", " ", 
               RowBox[{"Pi", "/", "2"}]}]}], "}"}]}], "]"}], ",", "\n", 
          RowBox[{"FaceForm", "[", "Black", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"Pi", "/", "4"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"head", ",", " ", "0"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"Pi", "/", "4"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "head"}], "}"}]}]}], ",", " ", 
             RowBox[{"end", " ", "-", " ", 
              RowBox[{
               RowBox[{"RotationMatrix", "[", 
                RowBox[{"Pi", "/", "4"}], "]"}], ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "head"}], ",", " ", "0"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"20", ",", "20"}], "}"}]}], ",", 
        RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
        RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"{", 
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "\"\<Redo\>\""}],
          "]"}], "}"}], "]"}], ",", 
      RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
      RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
      RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627412232140855*^9, 3.627412279507591*^9}, {
   3.6274135827379007`*^9, 3.6274136189525223`*^9}, {3.6274136493325596`*^9, 
   3.627413687871413*^9}, {3.627413727224348*^9, 3.6274137300386295`*^9}, 
   3.627415242233834*^9, {3.6287831791435146`*^9, 3.6287831952843027`*^9}, {
   3.6287832989915247`*^9, 3.628783401966279*^9}, {3.628783454916676*^9, 
   3.628783895900528*^9}, {3.628784157231408*^9, 3.6287841678124847`*^9}, {
   3.6287842359490266`*^9, 3.6287843038656*^9}, {3.6287843468723516`*^9, 
   3.628784468253479*^9}, {3.6287846086850457`*^9, 3.628784611641029*^9}, {
   3.62932669983809*^9, 3.6293267002954006`*^9}, {3.62932797264349*^9, 
   3.62932798932865*^9}, {3.629328947804675*^9, 3.6293289516212273`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], FaceForm[None], 
    CircleBox[{0, 0}, 1, 
     NCache[{Rational[1, 4] Pi, Rational[3, 2] Pi}, {0.7853981633974483, 
      4.71238898038469}]], 
    {FaceForm[GrayLevel[0]], 
     PolygonBox[{{0.17677669529663687`, 0.17677669529663687`}, {
      1.237436867076458, 0.17677669529663687`}, {1.237436867076458, 
      1.237436867076458}}]}},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[{
     FrontEndToken[
      FrontEnd`InputNotebook[], "Redo"]}],
  Enabled->True,
  Evaluator->None,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6287843534647493`*^9, 3.628784468595709*^9}, 
   3.628784612540621*^9, 3.62880311056575*^9, 3.6289333824645844`*^9, 
   3.6289443264927373`*^9, 3.6289452718871794`*^9, 3.6289663002062073`*^9, 
   3.6289682398371954`*^9, 3.628969864605054*^9, 3.6290296544826145`*^9, 
   3.629038340258238*^9, 3.6290401046869593`*^9, 3.6290404558092594`*^9, 
   3.629114726222925*^9, 3.62911598472619*^9, 3.6291226902801104`*^9, 
   3.6291227869156127`*^9, 3.6291228182281046`*^9, 3.6291230164091053`*^9, 
   3.62929145041568*^9, 3.629309690274234*^9, 3.6293108303997173`*^9, 
   3.62932253087072*^9, {3.6293249405475717`*^9, 3.629324951120636*^9}, 
   3.629326702881122*^9, 3.629327989992086*^9, 3.6293289523357*^9, 
   3.6293330966937094`*^9, 3.6293350888132257`*^9, 3.629335768363716*^9, 
   3.629574495509412*^9, 3.629584682705021*^9, 3.6296282868850384`*^9, 
   3.6296285604356794`*^9, 3.629630879969513*^9, 3.629633903072809*^9, 
   3.6296356802605104`*^9, 3.6296387442298765`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"backButton", "=", " ", 
  RowBox[{"Button", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"(", "\[IndentingNewLine]", "\t\t", 
       RowBox[{
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
          "\"\<ScrollPagePrevious\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        "\t\t", 
        RowBox[{"FrontEnd`SelectionMove", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "All", ",", 
          "Notebook", ",", 
          RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\t\t", 
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
          "\"\<SelectionOpenAllGroups\>\""}], "]"}], ";"}], 
       "\[IndentingNewLine]", "\t", ")"}], "]"}], ")"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.6274054620049086`*^9, 3.627405468429551*^9}, 
   3.627405537764484*^9, 3.627407181380829*^9, {3.6274120294605885`*^9, 
   3.627412033533996*^9}, {3.6274166728788843`*^9, 3.6274166735719533`*^9}, {
   3.6274168844950438`*^9, 3.6274168910617*^9}, {3.627416947146308*^9, 
   3.6274169616737604`*^9}, {3.6274170467942715`*^9, 
   3.6274170686004524`*^9}, {3.6276645751979103`*^9, 
   3.6276647175252657`*^9}, {3.6276647526667557`*^9, 3.627664755062363*^9}, {
   3.6276653746817846`*^9, 3.6276654409360743`*^9}, {3.627665494585933*^9, 
   3.6276656575691137`*^9}, 3.627665901590689*^9, 3.6276660821719756`*^9, 
   3.6276663070028973`*^9, {3.6290297439706264`*^9, 3.629029744556018*^9}, {
   3.6293250705944977`*^9, 3.6293251154064426`*^9}, {3.629326207270091*^9, 
   3.629326230334509*^9}, {3.629326687149616*^9, 3.6293266875799046`*^9}, {
   3.6293278420269103`*^9, 3.6293279082371674`*^9}, {3.629327944477667*^9, 
   3.6293279487425213`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], LineBox[{{0, 0}, {-1, 0.5}, {0, 1}}]},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[FrontEndToken[
      FrontEnd`InputNotebook[], "ScrollPagePrevious"]; FrontEnd`SelectionMove[
      FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> False]; 
    FrontEndToken[
      FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]; Null],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.629325115905781*^9, 3.6293262327811403`*^9, 3.6293266922380095`*^9, 
   3.6293272048526735`*^9, {3.6293278744165535`*^9, 3.6293279088805895`*^9}, 
   3.6293279494730115`*^9, 3.6293330967077193`*^9, 3.6293350888292365`*^9, 
   3.6293357683777227`*^9, 3.629574495521413*^9, 3.62958468271601*^9, 
   3.629628286905053*^9, 3.6296285604506903`*^9, 3.6296308799855237`*^9, 
   3.6296339030878105`*^9, 3.6296356802725115`*^9, 3.629638744240878*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nextButton", " ", "=", " ", 
  RowBox[{"Button", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", ".5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"(", "\[IndentingNewLine]", "\t\t\t", 
       RowBox[{
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
          "\"\<ScrollPageNext\>\""}], "]"}], ";", "\[IndentingNewLine]", 
        "\t\t\t", 
        RowBox[{"FrontEnd`SelectionMove", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "All", ",", 
          "Notebook", ",", 
          RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "\t\t\t", 
        RowBox[{"FrontEndToken", "[", 
         RowBox[{
          RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
          "\"\<SelectionOpenAllGroups\>\""}], "]"}], ";"}], 
       "\[IndentingNewLine]", "\t", ")"}], "]"}], ")"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.627405472392947*^9, 3.6274054804157495`*^9}, 
   3.6274055386685743`*^9, 3.6274071836020513`*^9, {3.6274120399686394`*^9, 
   3.6274120402286654`*^9}, {3.6274166466992664`*^9, 
   3.6274166579343896`*^9}, {3.6274166997005663`*^9, 
   3.6274167332179174`*^9}, {3.6274167715697517`*^9, 3.6274168206766624`*^9}, 
   3.627416990932686*^9, {3.6274170793885307`*^9, 3.627417080148607*^9}, {
   3.6276647677028055`*^9, 3.6276647928548183`*^9}, 3.627665680448406*^9, {
   3.6276658117121964`*^9, 3.627665812615805*^9}, {3.6276658575318265`*^9, 
   3.6276658899298973`*^9}, {3.627666059697955*^9, 3.6276660677743597`*^9}, 
   3.6276663003714647`*^9, {3.628970623679183*^9, 3.628970624914008*^9}, {
   3.62902975953202*^9, 3.6290297633715863`*^9}, {3.629325022847579*^9, 
   3.629325058698552*^9}, {3.629325102215626*^9, 3.6293251186051993`*^9}, {
   3.6293257351472445`*^9, 3.6293257418867407`*^9}, {3.629325791181696*^9, 
   3.629325794205717*^9}, {3.629325896018914*^9, 3.629325903193711*^9}, {
   3.629326180819628*^9, 3.6293262213314962`*^9}, {3.629326682735665*^9, 
   3.6293266832109766`*^9}, {3.6293278933111897`*^9, 3.629327904280521*^9}, {
   3.629327957388294*^9, 3.6293279604683533`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[FrontEndToken[
      FrontEnd`InputNotebook[], "ScrollPageNext"]; FrontEnd`SelectionMove[
      FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> False]; 
    FrontEndToken[
      FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]; Null],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.629325119054512*^9, {3.6293257426372447`*^9, 3.6293257668674374`*^9}, 
   3.629325799214059*^9, 3.629326186467411*^9, 3.6293262342991543`*^9, 
   3.629326690220666*^9, 3.6293272078506823`*^9, {3.6293278966784344`*^9, 
   3.6293279048498955`*^9}, 3.629327961103776*^9, 3.6293330967707605`*^9, 
   3.6293350888442473`*^9, 3.62933576839073*^9, 3.629574495530414*^9, 
   3.629584682726999*^9, 3.629628286922063*^9, 3.6296285604687014`*^9, 
   3.6296308800025344`*^9, 3.6296339031048126`*^9, 3.6296356802825127`*^9, 
   3.629638744250879*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"backButtonAuthor", " ", "=", " ", 
  RowBox[{"Button", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", ".5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"(", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"FrontEndToken", "[", 
        RowBox[{
         RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
         "\"\<ScrollPagePrevious\>\""}], "]"}], "\[IndentingNewLine]", "\t", 
       ")"}], "]"}], ")"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.629327148442977*^9, 3.629327177814603*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], LineBox[{{0, 0}, {-1, 0.5}, {0, 1}}]},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[
    FrontEndToken[
     FrontEnd`InputNotebook[], "ScrollPagePrevious"]],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.629327172751218*^9, 3.629327179617807*^9}, 
   3.6293330967817717`*^9, 3.6293350888532524`*^9, 3.629335768404741*^9, 
   3.629574495545416*^9, 3.629584682736989*^9, 3.6296282869340706`*^9, 
   3.6296285604847126`*^9, 3.629630880013542*^9, 3.629633903117814*^9, 
   3.6296356802945137`*^9, 3.62963874426188*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nextButtonAuthor", " ", "=", " ", 
  RowBox[{"Button", "[", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.1", "]"}], ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", ".5"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"20", ",", "20"}], "}"}]}], ",", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Background", "\[Rule]", "None"}]}], "]"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(", 
     RowBox[{"FrontEndExecute", "[", 
      RowBox[{"(", "\[IndentingNewLine]", "\t\t", 
       RowBox[{"FrontEndToken", "[", 
        RowBox[{
         RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
         "\"\<ScrollPageNext\>\""}], "]"}], "\[IndentingNewLine]", "\t", 
       ")"}], "]"}], ")"}], ",", "\n", "\t", 
    RowBox[{"Evaluator", "\[Rule]", "None"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"30", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "]"}]}]], "Code",
 CellChangeTimes->{{3.6293271644987035`*^9, 3.6293271990988293`*^9}}],

Cell[BoxData[
 ButtonBox[
  GraphicsBox[
   {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
   Background->None,
   BaselinePosition->Center,
   ImageSize->{20, 20}],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>FrontEndExecute[
    FrontEndToken[
     FrontEnd`InputNotebook[], "ScrollPageNext"]],
  Enabled->True,
  Evaluator->None,
  ImageSize->{30, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{{3.6293271704086576`*^9, 3.6293272001935596`*^9}, 
   3.6293330967917757`*^9, 3.6293350888692646`*^9, 3.62933576841875*^9, 
   3.6295744955544167`*^9, 3.6295846827469788`*^9, 3.6296282869460793`*^9, 
   3.629628560499727*^9, 3.629630880028552*^9, 3.629633903125815*^9, 
   3.629635680305515*^9, 3.629638744271881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"deleteButton", " ", "=", " ", 
  RowBox[{"Button", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Remove Cell\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\[IndentingNewLine]", "\t", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"FrontEndExecute", "[", 
       RowBox[{"FrontEnd`SelectionMove", "[", 
        RowBox[{
         RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", "All", ",", 
         " ", "Cell", ",", " ", 
         RowBox[{"AutoScroll", " ", "\[Rule]", " ", "False"}]}], "]"}], "]"}],
       ",", "\n", "\t\t", 
      RowBox[{"NotebookDelete", " ", "@", " ", 
       RowBox[{"Cells", " ", "@", " ", 
        RowBox[{"NotebookSelection", " ", "@", " ", 
         RowBox[{"InputNotebook", "[", "]"}]}]}]}]}], "\n", "\t", "}"}], ",", 
    "\n", "\t", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}], ",", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.6276578640583057`*^9, 3.627657899827207*^9}, {
   3.6276583123484373`*^9, 3.6276583134301605`*^9}, 3.6276594806950026`*^9, {
   3.6276624944260244`*^9, 3.6276625157652893`*^9}, {3.628684276159703*^9, 
   3.6286843372667484`*^9}, {3.6286846175543118`*^9, 3.628684723896247*^9}, {
   3.6286847992295923`*^9, 3.6286848792446117`*^9}, {3.6286849235212107`*^9, 
   3.6286849238254147`*^9}, {3.628684980051995*^9, 3.628685111670061*^9}, {
   3.628685142363571*^9, 3.628685160804897*^9}, {3.6293256940017447`*^9, 
   3.629325701623838*^9}, {3.629326162880645*^9, 3.629326167404665*^9}, {
   3.6293265811047316`*^9, 3.629326581688122*^9}}],

Cell[BoxData[
 ButtonBox[
  StyleBox["\<\"Remove Cell\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14],
  Appearance->Automatic,
  BaselinePosition->Center,
  ButtonFunction:>{
    FrontEndExecute[
     FrontEnd`SelectionMove[
      FrontEnd`InputNotebook[], All, Cell, AutoScroll -> False]], 
    NotebookDelete[
     Cells[
      NotebookSelection[
       InputNotebook[]]]]},
  Enabled->True,
  Evaluator->Automatic,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOI3IQZvtThfOyoEXW5JAdLMm88rLAHS8w5dqFgJpKWy
/r4D0T/a2o23AOmi+b9VtwLprMOiH0H0Y78LSpeBNJNmZ8J1IP1GTtL2BpCe
setXBoj2Vzix5g+Q5uiV8PoLUrfacwIDF9DcxfFzQPTUD+4LQPStBXw7QfSh
aL/vQUD6TZ73/Wgg3bHvXG4MkP75M1YlCUh73TuknwykV9pVZ4FoC8v7G0C0
jS7TUxC9aabuaxCdYsD5BUR7znsslwKkTVZI+qYD6RV3Zd0ygPSRE7yzQXQL
+yftu0D6hUGE6iMgXbLgXv53IO2TITAJRFdrM275AaTZHJ7o/gLSWyW4eH4D
6ZlvOLr/AGkAUBaVkA==
  "]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["contentsMenu", "Section",
 CellChangeTimes->{{3.6293303229320316`*^9, 3.6293303254477067`*^9}}],

Cell["tester", "Subsection",
 CellChangeTimes->{{3.6295813411799107`*^9, 3.6295813421510077`*^9}}],

Cell[CellGroupData[{

Cell["another", "Subsection",
 CellChangeTimes->{{3.629634285133012*^9, 3.6296342860341015`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"TaggingRules", ",", "\"\<firstClickOnStudentTOC\>\""}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6296293945353975`*^9, 3.6296293967318635`*^9}, 
   3.6296295243181458`*^9}],

Cell[BoxData["Inherited"], "Output",
 CellChangeTimes->{3.6296295246123357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
   "\"\<ScreenStyleEnvironment\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.6296295998780785`*^9, 3.6296296006886196`*^9}}],

Cell[BoxData["\<\"Working\"\>"], "Output",
 CellChangeTimes->{3.6296296011589336`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TrueQ", "[", 
  RowBox[{"CurrentValue", "[", 
   RowBox[{
    RowBox[{"InputNotebook", "[", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"TaggingRules", ",", "\"\<studentTOCClickedQ\>\""}], "}"}]}], 
   "]"}], "]"}]], "Input"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.629629689266823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatchQ", "[", 
  RowBox[{
   RowBox[{"CurrentValue", "[", 
    RowBox[{
     RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
     "\"\<ScreenStyleEnvironment\>\""}], "]"}], ",", " ", 
   RowBox[{"\"\<Student\>\"", " ", "|", " ", "\"\<Working\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.629629747678135*^9, 3.6296297544676766`*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.629629741867247*^9, 3.629629754996022*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"contentsMenu", " ", "=", " ", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"sectionCounter", "=", "0"}], ",", 
      RowBox[{"subsectionCounter", "=", "0"}], ",", 
      RowBox[{"TOC", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"oldTOC", "=", 
       RowBox[{"{", "}"}]}], ",", "updateQ"}], "}"}], ",", "\n", 
    RowBox[{"EventHandler", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Dynamic", "[", 
       RowBox[{
        RowBox[{"ActionMenu", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Contents\>\"", ",", "14", ",", 
            RowBox[{"FontFamily", "\[Rule]", "\"\<Arial Black\>\""}]}], "]"}],
           ",", "\n", "\t\t", "TOC", ",", " ", 
          RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
          RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
          RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
          RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "\n", "\t", 
         "]"}], ",", 
        RowBox[{"TrackedSymbols", " ", "\[RuleDelayed]", " ", 
         RowBox[{"{", "TOC", "}"}]}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"\"\<MouseDown\>\"", " ", "\[RuleDelayed]", " ", 
       RowBox[{"{", 
        RowBox[{"(*", "\n", "\t", 
         RowBox[{"If", "[", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Or", "[", "\n", "\t\t", 
            RowBox[{
             RowBox[{"MatchQ", "[", 
              RowBox[{
               RowBox[{"CurrentValue", "[", 
                RowBox[{
                 RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
                 "\"\<ScreenStyleEnvironment\>\""}], "]"}], ",", " ", 
               "\"\<Author\>\""}], "]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{"MatchQ", "[", 
               RowBox[{
                RowBox[{"CurrentValue", "[", 
                 RowBox[{
                  RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
                  "\"\<ScreenStyleEnvironment\>\""}], "]"}], ",", " ", 
                RowBox[{
                "\"\<Student\>\"", " ", "|", " ", "\"\<Teacher\>\""}]}], 
               "]"}], " ", "&&", "\n", "\t\t", 
              RowBox[{"!", 
               RowBox[{"TrueQ", "[", 
                RowBox[{"CurrentValue", "[", 
                 RowBox[{
                  RowBox[{"InputNotebook", "[", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"TaggingRules", ",", "\"\<firstClickTOC\>\""}], 
                   "}"}]}], "]"}], "\n", "\t\t", "]"}]}]}]}], "\n", "\t", 
            "]"}], ",", " ", "\n", "\t", 
           RowBox[{"{", "\n", "\t", 
            RowBox[{
             RowBox[{
              RowBox[{"CurrentValue", "[", 
               RowBox[{
                RowBox[{"InputNotebook", "[", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"TaggingRules", ",", "\"\<firstClickTOC\>\""}], 
                 "}"}]}], "]"}], " ", "=", " ", "True"}], ","}]}]}]}], "*)"}],
         "\n", "\t", 
        RowBox[{
         RowBox[{"sectionCounter", " ", "=", " ", "0"}], ",", "\n", "\t", 
         RowBox[{"subsectionCounter", " ", "=", " ", "0"}], ",", "\n", "\t", 
         RowBox[{"TOC", " ", "=", " ", "\n", 
          RowBox[{"With", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"cellsTOC", " ", "=", " ", 
              RowBox[{"Cells", "[", 
               RowBox[{
                RowBox[{"InputNotebook", "[", "]"}], ",", " ", 
                RowBox[{"CellStyle", " ", "\[Rule]", " ", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Section\>\"", ",", " ", "\"\<Subsection\>\""}],
                   "}"}]}]}], "]"}]}], "}"}], ",", "\n", 
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"cellTypes", " ", "=", " ", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "&"}], " ", "/@", " ", 
                 "cellsTOC"}]}], "}"}], ",", "\n", 
              RowBox[{"With", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"cellTitles", " ", "=", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"NotebookRead", "[", "#", "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "&"}], " ", "/@", " ", 
                   "cellsTOC"}]}], "}"}], ",", "\n", "\t", 
                RowBox[{"MapIndexed", "[", "\n", "\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cell", " ", "=", " ", 
                    RowBox[{"cellsTOC", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellType", " ", "=", " ", 
                    RowBox[{"cellTypes", "[", 
                    RowBox[{"[", 
                    RowBox[{"First", "[", "#2", "]"}], "]"}], "]"}]}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"action", " ", "=", " ", 
                    RowBox[{"Hold", " ", "@", " ", 
                    RowBox[{"SelectionMove", "[", 
                    RowBox[{"cell", ",", " ", "All", ",", " ", "Cell"}], 
                    "]"}]}]}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"cellNumbering", " ", "=", " ", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "cellType", " ", "\[Equal]", " ", "\"\<Section\>\""}], 
                    ",", " ", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"subsectionCounter", " ", "=", " ", "0"}], ";", 
                    " ", 
                    RowBox[{"sectionCounter", "++"}], ";", " ", 
                    RowBox[{"ToString", "[", "sectionCounter", "]"}]}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"subsectionCounter", "++"}], ";", " ", 
                    RowBox[{
                    RowBox[{"ToString", "[", "sectionCounter", "]"}], " ", "<>",
                     " ", "\"\<.\>\"", " ", "<>", " ", 
                    RowBox[{"ToString", "[", "subsectionCounter", "]"}]}]}]}],
                     "\n", "\t\t\t", "]"}]}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"currentCellQ", " ", "=", " ", 
                    RowBox[{"And", "[", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"sectionCounter", " ", "\[Equal]", " ", 
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<CounterValue\>\"", ",", "\"\<Section\>\""}], 
                    "}"}], "]"}]}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"subsectionCounter", " ", "\[Equal]", " ", 
                    RowBox[{"CurrentValue", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<CounterValue\>\"", ",", "\"\<Subsection\>\""}], 
                    "}"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], "}"}], ",", 
                    "\n", "\t\t\t", 
                    RowBox[{"RuleDelayed", "[", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Style", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "subsectionCounter", " ", "\[NotEqual]", " ", "0"}], ",", 
                    " ", 
                    RowBox[{"Spacer", "[", "30", "]"}], ",", " ", 
                    RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{"currentCellQ", ",", " ", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<\[Checkmark] \>\"", ",", " ", "14", ",", " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "]"}], ",", " ", 
                    RowBox[{"Invisible", "@", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<\[Checkmark] \>\"", ",", " ", "14", ",", " ", 
                    RowBox[{"FontColor", "\[Rule]", "Blue"}], ",", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "]"}]}]}], "]"}], ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    "cellNumbering", ",", "\n", "\t\t\t\t\t\t", "\"\<-\>\"", 
                    ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Head", " ", "@@", " ", "#1"}], " ", "===", " ", 
                    "Cell"}], ",", " ", 
                    "\"\<{heading cannot be displayed}\>\"", ",", " ", 
                    RowBox[{"RawBoxes", "[", 
                    RowBox[{"Apply", "[", 
                    RowBox[{"RowBox", ",", "#1"}], "]"}], "]"}]}], "]"}]}], 
                    "\n", "\t\t\t\t\t\t", "}"}], "}"}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"ItemSize", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"(*", 
                    RowBox[{"2", ","}], "*)"}], 
                    RowBox[{"All", ",", "All", ",", "All"}], "}"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "}"}]}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"Alignment", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"(*", 
                    RowBox[{"Center", ","}], "*)"}], 
                    RowBox[{"Right", ",", "Center", ",", "Left"}], "}"}], 
                    "}"}]}]}], "\n", "\t\t\t\t\t", "]"}]}], "}"}], "]"}], ",",
                     "\n", "\t\t\t\t", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "\n", "\t\t\t\t", "]"}], ",", 
                    " ", "\n", "\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "action"}]}], 
                    "]"}]}], "\n", "\t\t", "]"}]}], "]"}]}], "]"}]}], "]"}]}],
                     "]"}], "&"}], ",", "\n", "\t\t", "cellTitles"}], "\n", 
                 "\t", "]"}]}], "\n", "]"}]}], "]"}]}], "]"}]}]}], "\n", "\n", 
        RowBox[{"(*", 
         RowBox[{"}", "]"}], "*)"}], "}"}]}], ",", 
      RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.629310873738104*^9, 3.629310906352809*^9}, {
   3.629311009096481*^9, 3.6293111399252443`*^9}, {3.629311197913997*^9, 
   3.6293112171718683`*^9}, {3.629311303456071*^9, 3.629311363395133*^9}, {
   3.6293113950823174`*^9, 3.6293114080549884`*^9}, {3.629311508644763*^9, 
   3.629311509031019*^9}, {3.6293225116378736`*^9, 3.629322514017456*^9}, {
   3.6293225560075197`*^9, 3.6293229058635416`*^9}, {3.629322971222439*^9, 
   3.6293229843772306`*^9}, {3.6293230303729806`*^9, 3.629323035658513*^9}, {
   3.6293230694711075`*^9, 3.6293230948160524`*^9}, {3.6293237263846807`*^9, 
   3.6293237818467426`*^9}, {3.6293239978635263`*^9, 
   3.6293240031610703`*^9}, {3.6293242286679697`*^9, 3.629324240622958*^9}, {
   3.629324322063395*^9, 3.6293243229039545`*^9}, 3.6293244262809505`*^9, {
   3.6293246861453714`*^9, 3.629324693221095*^9}, {3.6293254560354204`*^9, 
   3.629325516454949*^9}, 3.6293255629210033`*^9, {3.629325963655117*^9, 
   3.6293260736059685`*^9}, {3.6293264547631927`*^9, 3.629326470614791*^9}, {
   3.6293265599114714`*^9, 3.6293265609801855`*^9}, {3.629326621585788*^9, 
   3.629326655478441*^9}, 3.6293268051559625`*^9, {3.629326954423244*^9, 
   3.629326956349537*^9}, {3.6293300611960163`*^9, 3.629330062205685*^9}, {
   3.6293351005750885`*^9, 3.6293351365011*^9}, {3.6293352439933205`*^9, 
   3.6293352571330957`*^9}, {3.6293353374373503`*^9, 
   3.6293354331903477`*^9}, {3.629335479242123*^9, 3.629335551417493*^9}, {
   3.6293357538530145`*^9, 3.6293357632252784`*^9}, {3.6295748653153887`*^9, 
   3.6295748710699644`*^9}, {3.629575106900545*^9, 3.629575110688924*^9}, {
   3.6295752343982935`*^9, 3.629575254557309*^9}, {3.6295756938232317`*^9, 
   3.629575721652014*^9}, {3.6295757534571943`*^9, 3.6295757563084793`*^9}, {
   3.6295763138792305`*^9, 3.6295765304268837`*^9}, {3.629576591510991*^9, 
   3.6295767837062087`*^9}, {3.6295768221340513`*^9, 3.629576987205557*^9}, {
   3.6295770342972655`*^9, 3.629577034509287*^9}, {3.629577086757511*^9, 
   3.6295773115229855`*^9}, {3.629577360524885*^9, 3.6295773697378063`*^9}, {
   3.629577423340166*^9, 3.629577609959826*^9}, {3.6295776485186815`*^9, 
   3.6295777103068595`*^9}, {3.6295777791097393`*^9, 3.629577833933221*^9}, {
   3.62957787852668*^9, 3.6295779235981865`*^9}, {3.6295779555113773`*^9, 
   3.6295779887016964`*^9}, {3.629578021903016*^9, 3.6295780592217474`*^9}, {
   3.629578136309456*^9, 3.629578157715596*^9}, {3.629578228281652*^9, 
   3.6295782320050244`*^9}, {3.629578276373461*^9, 3.6295783398698096`*^9}, {
   3.6295784142782497`*^9, 3.6295784757003913`*^9}, {3.629578510012822*^9, 
   3.6295785378166027`*^9}, {3.629578570786899*^9, 3.6295785710399246`*^9}, {
   3.629578614429263*^9, 3.629578742386057*^9}, 3.629578776255444*^9, {
   3.629578878403658*^9, 3.6295791426390786`*^9}, {3.6295792191257267`*^9, 
   3.6295792282956433`*^9}, {3.629579272293043*^9, 3.6295793218019934`*^9}, {
   3.629579362944107*^9, 3.6295795223890495`*^9}, {3.629579559758786*^9, 
   3.629579581642975*^9}, {3.629579660835893*^9, 3.629579703826192*^9}, {
   3.6295797810549135`*^9, 3.6295798200478125`*^9}, {3.6295798935461617`*^9, 
   3.629579901885996*^9}, {3.62958004304511*^9, 3.629580049882794*^9}, {
   3.6295800823320384`*^9, 3.6295801428690915`*^9}, {3.629580174235228*^9, 
   3.629580285036307*^9}, {3.6295803340082035`*^9, 3.629580346204423*^9}, {
   3.629580377046507*^9, 3.629580378055608*^9}, {3.629580434653267*^9, 
   3.629580525383339*^9}, {3.6295805701848187`*^9, 3.6295805835121517`*^9}, {
   3.62958067310611*^9, 3.629580810398838*^9}, {3.629581081988994*^9, 
   3.629581100176813*^9}, {3.629581250203814*^9, 3.6295813239641895`*^9}, {
   3.629581373518144*^9, 3.6295815012649174`*^9}, {3.629581534452236*^9, 
   3.62958156179897*^9}, {3.629628393038989*^9, 3.6296283965473366`*^9}, {
   3.6296284328075695`*^9, 3.629628434493696*^9}, {3.6296286088650503`*^9, 
   3.629628635108115*^9}, {3.629628668557473*^9, 3.629628833464918*^9}, {
   3.6296289123566475`*^9, 3.629628941487118*^9}, {3.6296289797376833`*^9, 
   3.6296290802254314`*^9}, {3.6296292284640813`*^9, 
   3.6296292290164433`*^9}, {3.6296294799594975`*^9, 3.629629511778764*^9}, {
   3.6296295443869896`*^9, 3.6296295746762333`*^9}, {3.629629607706316*^9, 
   3.629629666456583*^9}, {3.629629705198477*^9, 3.629629863890809*^9}, {
   3.629629957416884*^9, 3.6296300095207105`*^9}, {3.629630048948063*^9, 
   3.629630094109754*^9}, {3.6296301384673944`*^9, 3.629630156715595*^9}, {
   3.629633898560358*^9, 3.629633899369439*^9}, {3.6296339353730392`*^9, 
   3.6296339355480566`*^9}, {3.6296340099714985`*^9, 3.629634019853486*^9}, {
   3.6296340678402843`*^9, 3.629634162515751*^9}, {3.6296341983373327`*^9, 
   3.6296342404175406`*^9}, {3.6296342989643946`*^9, 3.629634301329631*^9}, {
   3.6296345798084764`*^9, 3.6296346667871733`*^9}, {3.6296347524897423`*^9, 
   3.629634764171911*^9}, {3.6296348665011425`*^9, 3.6296348761111035`*^9}, {
   3.6296356731538*^9, 3.6296356968641706`*^9}, {3.6296357714386272`*^9, 
   3.6296357789893827`*^9}, {3.629635821301613*^9, 3.6296358580392866`*^9}, {
   3.6296359355270343`*^9, 3.6296359481292944`*^9}, {3.629636095013982*^9, 
   3.6296360964681273`*^9}, {3.62963617460394*^9, 3.629636176336113*^9}, {
   3.629636263761855*^9, 3.6296362748399625`*^9}, {3.6296363704655237`*^9, 
   3.629636374352913*^9}, {3.629636513350811*^9, 3.6296366486683416`*^9}, {
   3.6296367223357077`*^9, 3.6296367224757214`*^9}, {3.6296367775322266`*^9, 
   3.629636807899263*^9}, {3.6296368710725794`*^9, 3.6296368777282453`*^9}, {
   3.6296369272651987`*^9, 3.629636948542326*^9}, {3.6296387398164353`*^9, 
   3.6296387402814817`*^9}}],

Cell[BoxData[
 DynamicModuleBox[{$CellContext`sectionCounter$$ = 
  0, $CellContext`subsectionCounter$$ = 
  0, $CellContext`TOC$$ = {}, $CellContext`oldTOC$$ = {}, \
$CellContext`updateQ$$}, 
  TagBox[
   DynamicBox[ToBoxes[
     ActionMenu[
      Style["Contents", 14, FontFamily -> "Arial Black"], $CellContext`TOC$$, 
      BaselinePosition -> Center, Enabled -> True, Appearance -> Automatic, 
      ImageSize -> {Automatic, 30}, Method -> "Queued"], StandardForm],
    ImageSizeCache->{108., {15., 15.}},
    TrackedSymbols:>{$CellContext`TOC$$}],
   EventHandlerTag[{
    "MouseDown" :> {$CellContext`sectionCounter$$ = 
       0, $CellContext`subsectionCounter$$ = 0, $CellContext`TOC$$ = 
       With[{$CellContext`cellsTOC$ = Cells[
            InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
         With[{$CellContext`cellTypes$ = Map[Part[
              NotebookRead[#], 2]& , $CellContext`cellsTOC$]}, 
          With[{$CellContext`cellTitles$ = Map[Part[
               NotebookRead[#], 1]& , $CellContext`cellsTOC$]}, 
           MapIndexed[With[{$CellContext`cell$ = Part[$CellContext`cellsTOC$, 
                First[#2]]}, 
             With[{$CellContext`cellType$ = Part[$CellContext`cellTypes$, 
                 First[#2]]}, 
              With[{$CellContext`action$ = Hold[
                  SelectionMove[$CellContext`cell$, All, Cell]]}, 
               
               With[{$CellContext`cellNumbering$ = 
                 If[$CellContext`cellType$ == 
                   "Section", $CellContext`subsectionCounter$$ = 0; 
                   Increment[$CellContext`sectionCounter$$]; 
                   ToString[$CellContext`sectionCounter$$], 
                   Increment[$CellContext`subsectionCounter$$]; StringJoin[
                    ToString[$CellContext`sectionCounter$$], ".", 
                    ToString[$CellContext`subsectionCounter$$]]]}, 
                
                With[{$CellContext`currentCellQ$ = 
                  And[$CellContext`sectionCounter$$ == 
                    CurrentValue[{
                    "CounterValue", 
                    "Section"}], $CellContext`subsectionCounter$$ == 
                    CurrentValue[{"CounterValue", "Subsection"}]]}, Style[
                   Row[{
                    If[$CellContext`subsectionCounter$$ != 0, 
                    Spacer[30], 
                    Spacer[0]], 
                    If[$CellContext`currentCellQ$, 
                    Style["\[Checkmark] ", 14, FontFamily -> "Arial Black"], 
                    Invisible[
                    Style[
                    "\[Checkmark] ", 14, FontColor -> Blue, FontFamily -> 
                    "Arial Black"]]], 
                    Grid[{{$CellContext`cellNumbering$, "-", 
                    If[
                    Apply[Head, #] === Cell, "{heading cannot be displayed}", 
                    RawBoxes[
                    Apply[RowBox, #]]]}}, ItemSize -> {{All, All, All}, {1}}, 
                    Alignment -> {{Right, Center, Left}}]}], FontFamily -> 
                   "Arial Black"] :> 
                 ReleaseHold[$CellContext`action$]]]]]]& , \
$CellContext`cellTitles$]]]]}, PassEventsDown -> True, PassEventsDown -> 
     Automatic, PassEventsUp -> True}]],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{{3.629636582305706*^9, 3.6296366496104355`*^9}, {
   3.6296366972461987`*^9, 3.6296367244659204`*^9}, {3.629636781205594*^9, 
   3.629636809002373*^9}, 3.62963687857533*^9, {3.6296369502134933`*^9, 
   3.62963696978445*^9}, 3.6296370844129114`*^9, {3.629638744304884*^9, 
   3.629638744715925*^9}}]
}, Open  ]]
}, Open  ]],

Cell["new2", "Subsection",
 CellChangeTimes->{{3.6296288489642773`*^9, 3.6296288492624755`*^9}, {
  3.6296292381315365`*^9, 3.62962923915522*^9}, {3.6296301036771436`*^9, 
  3.629630117336283*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["displayMenu", "Section",
 CellChangeTimes->{{3.6293301694117584`*^9, 3.6293301745441895`*^9}, {
  3.629335280798915*^9, 3.6293352813422832`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"displayMenu", " ", "=", " ", 
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\n", 
    RowBox[{"ActionMenu", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Display\>\"", ",", " ", "14", ",", " ", 
        RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
       "]"}], ",", "\n", "\t", 
      RowBox[{"{", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Mode - Teacher\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", " ", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                   "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "\[Equal]",
                  " ", "\"\<Teacher\>\""}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"FrontEnd`SelectionMove", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", "All", 
              ",", " ", "Notebook", ",", " ", 
              RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], "]"}], ";",
            "\n", "\t\t", 
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"FrontEndToken", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
              "\"\<SelectionOpenAllGroups\>\""}], "]"}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"FrontEndToken", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
              "\"\<SelectionCloseUnselectedCells\>\""}], "]"}], "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
              "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "=", " ", 
            "\"\<Teacher\>\""}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"TaggingRules", ",", "\"\<firstClickTOC\>\""}], 
               "}"}]}], "]"}], " ", "=", " ", "False"}], ";"}], "\n", "\t\t", 
          ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Mode - Student\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                   "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "\[Equal]",
                  " ", "\"\<Student\>\""}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"FrontEnd`SelectionMove", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", "All", ",", 
              "Notebook", ",", 
              RowBox[{"AutoScroll", "\[Rule]", "False"}]}], "]"}], "]"}], ";",
            "\n", "\t\t", 
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"FrontEndToken", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
              "\"\<SelectionOpenAllGroups\>\""}], "]"}], "]"}], ";", "\n", 
           "\t\t", 
           RowBox[{"FrontEndExecute", "[", 
            RowBox[{"FrontEndToken", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
              "\"\<SelectionCloseUnselectedCells\>\""}], "]"}], "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
              "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "=", " ", 
            "\"\<Student\>\""}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"TaggingRules", ",", "\"\<firstClickTOC\>\""}], 
               "}"}]}], "]"}], " ", "=", " ", "False"}], ";"}], "\n", "\t\t", 
          ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Mode - Author\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                   "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "\[Equal]",
                  " ", "\"\<Author\>\""}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
              "\"\<ScreenStyleEnvironment\>\""}], "]"}], " ", "=", " ", 
            "\"\<Author\>\""}], ";", "\n", "\t\t", 
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"InputNotebook", "[", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"TaggingRules", ",", "\"\<firstClickTOC\>\""}], 
               "}"}]}], "]"}], " ", "=", " ", "False"}], ";"}], "\n", "\t\t", 
          ")"}]}], ",", "\n", "\t", "Delimiter", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Dynamic - On\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", " ", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                   "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
                 "True"}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
              "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "True"}], 
           ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Dynamic - Off\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                   "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
                 "False"}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
              "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", "False"}], 
           ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Dynamic - Auto\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
                   "\"\<DynamicUpdating\>\""}], "]"}], " ", "\[Equal]", " ", 
                 "Automatic"}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"CurrentValue", "[", 
             RowBox[{
              RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
              "\"\<DynamicUpdating\>\""}], "]"}], " ", "=", " ", 
            "Automatic"}], ";"}], "\n", "\t\t", ")"}]}], ",", "\n", "\t", 
        "Delimiter", ",", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Zoom - 80%\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", " ", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                   "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
                 ".8"}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{"CurrentValue", "[", 
            RowBox[{
             RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
             "\"\<Magnification\>\""}], "]"}], " ", "=", " ", ".8"}], "\n", 
          "\t\t", ")"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Zoom - 100%\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                   "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
                 "1"}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"CurrentValue", "[", 
            RowBox[{
             RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
             "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1"}], "\n", 
          "\t\t", "}"}]}], ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Grid", "[", 
          RowBox[{"{", 
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Zoom - 120%\>\"", ",", " ", "14", ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", "\n", "\t\t", 
             RowBox[{"Dynamic", "[", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"CurrentValue", "[", 
                  RowBox[{
                   RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
                   "\"\<Magnification\>\""}], "]"}], " ", "\[Equal]", " ", 
                 "1.2"}], ",", " ", "\n", "\t\t\t", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<\[Checkmark]\>\"", ",", " ", "14", ",", " ", 
                  RowBox[{
                  "FontFamily", " ", "\[Rule]", " ", 
                   "\"\<Arial Black\>\""}]}], "]"}], ",", " ", "\"\<\>\""}], 
               "]"}], "]"}]}], "}"}], "}"}], "]"}], " ", "\[RuleDelayed]", 
         " ", "\n", "\t\t", 
         RowBox[{"(", "\n", "\t\t", 
          RowBox[{
           RowBox[{"CurrentValue", "[", 
            RowBox[{
             RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", 
             "\"\<Magnification\>\""}], "]"}], " ", "=", " ", "1.2"}], "\n", 
          "\t\t", ")"}]}], ",", "\n", "\t", "Delimiter", ",", "\n", "\t", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Learn more...\>\"", ",", " ", "14", ",", " ", 
           RowBox[{
           "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
          "]"}], " ", "\[RuleDelayed]", "\n", "\t\t", 
         RowBox[{"CreateDialog", "[", "\n", "\t", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"Column", "[", 
              RowBox[{"{", "\n", "\t", 
               RowBox[{
                RowBox[{"Pane", "[", "\n", "\t", 
                 RowBox[{
                  RowBox[{"Grid", "[", 
                   RowBox[{
                    RowBox[{"{", "\n", "\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<About\>\"", ",", " ", "16", ",", " ", "Bold"}], 
                    "]"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{"{", "\n", "\t\t\t\t", 
                    RowBox[{
                    "\"\<LICENSE - The design and contents of this tutorial \
are licensed under a\>\"", ",", "\n", "\t\t\t\t", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<Creative Commons Attribution-ShareAlike 4.0 \
International License\>\"", ",", " ", 
                    "\"\<http://creativecommons.org/licenses/by-sa/4.0/\>\""}]\
, "]"}], ",", "\"\<.\>\""}], "}"}], "]"}]}], "\n", "\t\t\t", "}"}], "]"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<ATTRIBUTION - This tutorial is derived from work \
originally done by Kyle Keane, the original work can be found at \>\"", ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<www.kylekeane.com\>\"", ",", 
                    "\"\<http://www.kylekeane.com\>\""}], "]"}]}], "\n", 
                    "\t\t\t", "}"}], "]"}], ",", "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "}"}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "\"\<INTENT - The original work was provided as a free \
educational resource for teaching and learning computer programming. \>\"", "<>",
                     "\n", "\t\t\t", 
                    "\"\<It is hoped that derivative works will also be \
shared for little or no cost in service of all who seek and provide \
education.\>\""}], ",", "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "\n", 
                    "\t\t", "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    "\"\<Resources\>\"", ",", " ", "16", ",", " ", "Bold"}], 
                    "]"}], "}"}], ",", "\n", "\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"Pane", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<DISCUSS - Forum about Wolfram on the Raspberry Pi \>\
\"", ",", 
                    "\"\<http://community.wolfram.com/content?curTag=\
raspberry%20pi\>\""}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<LEARN - Getting Started with Mathematica on the \
Raspberry Pi\>\"", ",", 
                    "\"\<http://www.raspberrypi.org/learning/getting-started-\
with-mathematica\>\""}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<LEARN - A Fast Introduction to the Wolfram Language \
for Programmers\>\"", ",", 
                    "\"\<http://www.wolfram.com/language/fast-introduction-\
for-programmers\>\""}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<INFO - Homepage of Wolfram on the Raspberry Pi\>\"", 
                    ",", "\"\<http://www.wolfram.com/raspberry-pi\>\""}], 
                    "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<INFO - Homepage of the Wolfram Language\>\"", ",", 
                    "\"\<http://www.wolfram.com/language\>\""}], "]"}], ",", 
                    "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<EXPLORE - Free collection of interactive graphics \
and code\>\"", ",", "\"\<http://demonstrations.wolfram.com\>\""}], "]"}], ",",
                     "\n", "\t\t\t\t", 
                    RowBox[{"Hyperlink", "[", 
                    RowBox[{
                    "\"\<EXPLORE - Free computational-knowledge engine\>\"", 
                    ",", "\"\<http://www.wolframalpha.com\>\""}], "]"}]}], 
                    "\n", "\t\t\t", "}"}], ",", " ", 
                    RowBox[{"Spacings", "\[Rule]", ".25"}]}], "]"}], ",", 
                    "\n", "\t\t", 
                    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", "1", "]"}], ",", "All"}], "}"}]}], 
                    ",", "\n", "\t\t", 
                    RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                    "\t\t", 
                    RowBox[{
                    "AppearanceElements", " ", "\[Rule]", " ", "None"}]}], 
                    "\n", "\t\t", "]"}], ",", " ", 
                    RowBox[{"LineIndent", "\[Rule]", "0"}]}], "]"}], "\n", 
                    "\t\t", "}"}]}], "\n", "\t", "}"}], ",", " ", "\n", "\t", 
                    RowBox[{"Dividers", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    "False", ",", " ", "True", ",", " ", "False", ",", " ", 
                    "False", ",", " ", "False", ",", " ", "True", ",", " ", 
                    "False", ",", " ", "False"}], "}"}]}], "}"}]}], ",", " ", 
                    "\n", "\t", 
                    RowBox[{"Alignment", " ", "\[Rule]", " ", "Left"}], ",", 
                    "\n", "\t", 
                    RowBox[{"Spacings", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", " ", "1.5"}], 
                    RowBox[{"(*", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"1", "\[Rule]", "0"}], ",", " ", 
                    RowBox[{"2", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"3", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"4", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"5", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"6", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"7", "\[Rule]", "1.5"}], ",", " ", 
                    RowBox[{"8", "\[Rule]", "1.5"}]}], "}"}], "*)"}], "}"}]}],
                     ",", "\n", "\t", 
                    RowBox[{"ItemSize", " ", "\[Rule]", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Scaled", "[", ".95", "]"}], ",", " ", 
                    "Automatic"}], "}"}]}]}], "\n", "\t", "]"}], ",", " ", 
                  "\n", "\t", 
                  RowBox[{"ImageSize", " ", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"450", ",", " ", "All"}], "}"}]}], ",", "\n", 
                  "\t", 
                  RowBox[{"Scrollbars", " ", "\[Rule]", " ", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", " ", "False"}], "}"}]}], ",", "\n", 
                  "\t", 
                  RowBox[{"AppearanceElements", "\[Rule]", "None"}]}], "\n", 
                 "\t", "]"}], ",", "\n", "\t", 
                RowBox[{"Spacer", "[", "2", "]"}], ",", "\n", "\t", 
                RowBox[{"Item", "[", 
                 RowBox[{
                  RowBox[{"DefaultButton", "[", "]"}], ",", " ", 
                  RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}]}], "}"}],
               "]"}], ",", "\n", "\t", "12", ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}]}], "]"}], ",",
            "  ", "\n", "\t", 
           RowBox[{
           "WindowTitle", "\[Rule]", "\"\<About this document\>\""}]}], "\n", 
          "]"}]}]}], "\[IndentingNewLine]", "}"}], ",", "\n", 
      RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
      RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
      RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "\n", "]"}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{
  3.6295742854654098`*^9, {3.6295816879585853`*^9, 3.629581716330422*^9}, {
   3.629581756233412*^9, 3.629581828104598*^9}, {3.629581901976985*^9, 
   3.6295820607198577`*^9}, {3.629582106436429*^9, 3.629582137381523*^9}, {
   3.629582193411125*^9, 3.6295823029510784`*^9}, {3.6295823506488476`*^9, 
   3.629582476159397*^9}, {3.6295825169994807`*^9, 3.6295826724400234`*^9}, {
   3.629582745600339*^9, 3.629582779794758*^9}, {3.6295828572935066`*^9, 
   3.629582975674344*^9}, {3.629583026976474*^9, 3.6295830362414*^9}, {
   3.629583079807756*^9, 3.6295831496817427`*^9}, {3.6295832137281466`*^9, 
   3.6295832217119455`*^9}, {3.6295832649022636`*^9, 3.629583319441717*^9}, {
   3.62958461285594*^9, 3.629584678751978*^9}, {3.629630198842748*^9, 
   3.62963023919772*^9}, {3.6296302707208347`*^9, 3.629630277605442*^9}}],

Cell[BoxData[
 DynamicModuleBox[{}, 
  ActionMenuBox[
   StyleBox["\<\"Display\"\>",
    StripOnInput->False,
    FontFamily->"Arial Black",
    FontSize->14], {
   TagBox[GridBox[{
      {
       StyleBox["\<\"Mode - Teacher\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == "Teacher", 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(FrontEndExecute[
     FrontEnd`SelectionMove[
      FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> False]]; 
   FrontEndExecute[
     FrontEndToken[
      FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; FrontEndExecute[
     FrontEndToken[
      FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; 
   CurrentValue[
      FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Teacher"; 
   CurrentValue[
      InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; Null), 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Mode - Student\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == "Student", 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(FrontEndExecute[
     FrontEnd`SelectionMove[
      FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> False]]; 
   FrontEndExecute[
     FrontEndToken[
      FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; FrontEndExecute[
     FrontEndToken[
      FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; 
   CurrentValue[
      FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Student"; 
   CurrentValue[
      InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; Null), 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Mode - Author\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == "Author", 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(CurrentValue[
      FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = "Author"; 
   CurrentValue[
      InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; Null), 
   Delimiter, 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Dynamic - On\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "DynamicUpdating"] == True, 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(CurrentValue[
      FrontEnd`InputNotebook[], "DynamicUpdating"] = True; Null), 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Dynamic - Off\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "DynamicUpdating"] == False, 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(CurrentValue[
      FrontEnd`InputNotebook[], "DynamicUpdating"] = False; Null), 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Dynamic - Auto\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "DynamicUpdating"] == Automatic, 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(CurrentValue[
      FrontEnd`InputNotebook[], "DynamicUpdating"] = Automatic; Null), 
   Delimiter, 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Zoom - 80%\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "Magnification"] == 0.8, 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "Magnification"] = 0.8), 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Zoom - 100%\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "Magnification"] == 1, 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>{CurrentValue[
      FrontEnd`InputNotebook[], "Magnification"] = 1}, 
   TagBox[GridBox[{
      {
       StyleBox["\<\"Zoom - 120%\"\>",
        StripOnInput->False,
        FontFamily->"Arial Black",
        FontSize->14], 
       DynamicBox[ToBoxes[
         If[CurrentValue[
            FrontEnd`InputNotebook[], "Magnification"] == 1.2, 
          Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], ""], 
         StandardForm]]}
     },
     AutoDelete->False,
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Grid"]:>(CurrentValue[
     FrontEnd`InputNotebook[], "Magnification"] = 1.2), Delimiter, 
   StyleBox["\<\"Learn more...\"\>",
    StripOnInput->False,
    FontFamily->"Arial Black",
    FontSize->14]:>CreateDialog[
    Style[
     Column[{
       Pane[
        Grid[{{
           Style["About", 16, Bold]}, {
           Style[
            Pane[
             
             Column[{"LICENSE - The design and contents of this tutorial are \
licensed under a", 
               Row[{
                 Hyperlink[
                 "Creative Commons Attribution-ShareAlike 4.0 International \
License", "http://creativecommons.org/licenses/by-sa/4.0/"], "."}]}], 
             ImageSize -> {
               Scaled[1], All}, Scrollbars -> {False, False}, 
             AppearanceElements -> None], LineIndent -> 0]}, {
           Style[
            Pane[
             
             Row[{"ATTRIBUTION - This tutorial is derived from work \
originally done by Kyle Keane, the original work can be found at ", 
               Hyperlink["www.kylekeane.com", "http://www.kylekeane.com"]}], 
             ImageSize -> {
               Scaled[1], All}, Scrollbars -> {False, False}, 
             AppearanceElements -> None], LineIndent -> 0]}, {
           Style[
            Pane[
             StringJoin[
             "INTENT - The original work was provided as a free educational \
resource for teaching and learning computer programming. ", 
              "It is hoped that derivative works will also be shared for \
little or no cost in service of all who seek and provide education."], 
             ImageSize -> {
               Scaled[1], All}, Scrollbars -> {False, False}, 
             AppearanceElements -> None], LineIndent -> 0]}, {
           Style["Resources", 16, Bold]}, {
           Style[
            Pane[
             Column[{
               Hyperlink[
               "DISCUSS - Forum about Wolfram on the Raspberry Pi ", 
                "http://community.wolfram.com/content?curTag=raspberry%20pi"], 
               Hyperlink[
               "LEARN - Getting Started with Mathematica on the Raspberry Pi",
                 "http://www.raspberrypi.org/learning/getting-started-with-\
mathematica"], 
               Hyperlink[
               "LEARN - A Fast Introduction to the Wolfram Language for \
Programmers", 
                "http://www.wolfram.com/language/fast-introduction-for-\
programmers"], 
               Hyperlink[
               "INFO - Homepage of Wolfram on the Raspberry Pi", 
                "http://www.wolfram.com/raspberry-pi"], 
               Hyperlink[
               "INFO - Homepage of the Wolfram Language", 
                "http://www.wolfram.com/language"], 
               Hyperlink[
               "EXPLORE - Free collection of interactive graphics and code", 
                "http://demonstrations.wolfram.com"], 
               Hyperlink[
               "EXPLORE - Free computational-knowledge engine", 
                "http://www.wolframalpha.com"]}, Spacings -> 0.25], ImageSize -> {
               Scaled[1], All}, Scrollbars -> {False, False}, 
             AppearanceElements -> None], LineIndent -> 0]}}, 
         Dividers -> {
          False, {False, True, False, False, False, True, False, False}}, 
         Alignment -> Left, Spacings -> {0, 1.5}, ItemSize -> {
           Scaled[0.95], Automatic}], ImageSize -> {450, All}, 
        Scrollbars -> {False, False}, AppearanceElements -> None], 
       Spacer[2], 
       Item[
        DefaultButton[], Alignment -> Right]}], 12, FontFamily -> "Arial"], 
    WindowTitle -> "About this document"]},
   Appearance->Automatic,
   BaselinePosition->Center,
   Enabled->True,
   ImageSize->{Automatic, 30},
   Method->"Preemptive"],
  DynamicModuleValues:>{}]], "Output",
 CellChangeTimes->{
  3.6295744956154227`*^9, {3.6295816913509245`*^9, 3.62958171750954*^9}, 
   3.629581845713359*^9, 3.629581924718259*^9, {3.6295819547412605`*^9, 
   3.629581978867673*^9}, {3.6295820243162174`*^9, 3.629582062776063*^9}, 
   3.629582117738559*^9, 3.6295823141321964`*^9, 3.6295823713949223`*^9, 
   3.629582477228504*^9, 3.6295826443202114`*^9, 3.6295826752523046`*^9, 
   3.6295827823190103`*^9, {3.6295828645232296`*^9, 3.6295828819939766`*^9}, {
   3.629582912311008*^9, 3.629582941903967*^9}, 3.6295829826290393`*^9, 
   3.6295830372374997`*^9, 3.629583151180893*^9, 3.629583222323006*^9, {
   3.629583266144388*^9, 3.6295833259953723`*^9}, {3.629584682869856*^9, 
   3.629584683218507*^9}, 3.6296282871121902`*^9, 3.6296285606508245`*^9, {
   3.629630248819151*^9, 3.629630278490029*^9}, 3.6296308802056713`*^9, 
   3.6296339032238245`*^9, 3.6296356804125257`*^9, 3.6296387443638897`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["insertCellMenu", "Section",
 CellChangeTimes->{{3.627235967136861*^9, 3.627235972961748*^9}, {
  3.629330192866435*^9, 3.629330196638956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"icon", "[", 
   RowBox[{
   "darkColor_", ",", " ", "lightColor_", ",", " ", "msg_String", ",", " ", 
    "fontColor_"}], "]"}], " ", ":=", " ", "\n", "\t", 
  RowBox[{"Which", "[", "\n", "\t\t", 
   RowBox[{
    RowBox[{"StringMatchQ", "[", 
     RowBox[{"msg", ",", " ", 
      RowBox[{
      "\"\<Title\>\"", " ", "|", " ", "\"\<Section\>\"", " ", "|", " ", 
       "\"\<Subsection\>\""}]}], "]"}], ",", "\n", "\t\t", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", " ", "=", " ", 
        RowBox[{"Switch", "[", 
         RowBox[{
         "msg", ",", " ", "\"\<Title\>\"", ",", " ", ".04", ",", " ", 
          "\"\<Section\>\"", ",", " ", ".025", ",", " ", "\"\<Subsection\>\"",
           ",", " ", ".01"}], "]"}]}], "}"}], ",", "\n", "\t\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"EdgeForm", " ", "@", " ", "None"}], ",", " ", "\n", 
          "\t\t\t", 
          RowBox[{"FaceForm", " ", "@", " ", 
           RowBox[{"GrayLevel", "[", ".8", "]"}]}], ",", " ", "\n", "\t\t\t", 
          RowBox[{"Rectangle", "[", "]"}], ",", " ", "\n", "\t\t\t", 
          RowBox[{"GrayLevel", "[", ".3", "]"}], ",", " ", 
          RowBox[{"Thickness", "[", "t", "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"(*", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "+", 
                 RowBox[{"t", "/", "2"}]}], ",", " ", 
                RowBox[{"0", "+", 
                 RowBox[{"t", "/", "2"}]}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{"t", "/", "2"}]}], ",", " ", 
                RowBox[{"0", "+", 
                 RowBox[{"t", "/", "2"}]}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{"t", "/", "2"}]}], ",", " ", 
                RowBox[{"1", "-", 
                 RowBox[{"t", "/", "2"}]}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "+", 
                 RowBox[{"t", "/", "2"}]}], ",", " ", 
                RowBox[{"1", "-", 
                 RowBox[{"t", "/", "2"}]}]}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "+", 
                 RowBox[{"t", "/", "2"}]}], ",", " ", 
                RowBox[{"0", "+", 
                 RowBox[{"t", "/", "2"}]}]}], "}"}]}], "}"}], "]"}], "*)"}], 
          ",", "\n", "\t\t\t", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "0"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"1", ",", " ", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}]}], "}"}], "]"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"Text", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"msg", ",", " ", "12", ",", " ", 
              RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Center"}], ",", 
              " ", 
              RowBox[{"FontColor", " ", "\[Rule]", " ", 
               RowBox[{"GrayLevel", "[", ".3", "]"}]}], ",", " ", 
              RowBox[{
              "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
             "]"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"{", 
             RowBox[{".5", ",", " ", ".5"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0"}], "}"}]}], "]"}]}], "\n", "\t\t\t", 
         "}"}], ",", "\n", "\t\t\t", 
        RowBox[{"ImageSize", " ", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{"90", ",", " ", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
        RowBox[{"AspectRatio", " ", "\[Rule]", " ", 
         RowBox[{"30", " ", "/", " ", "90"}]}]}], "\n", "\t\t\t", "]"}]}], 
     "\n", "\t\t", "]"}], ",", "\n", "\t\t", 
    RowBox[{"StringMatchQ", "[", 
     RowBox[{"msg", ",", " ", "\"\<Break\>\""}], "]"}], ",", "\n", "\t\t", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Thickness", "[", ".1", "]"}], ",", "\n", "\t\t\t", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", " ", ".5"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{".05", ",", " ", ".5"}], "}"}]}], "}"}], "]"}], ",", 
         "\n", "\t\t\t", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".95", ",", " ", ".5"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"1", ",", " ", ".5"}], "}"}]}], "}"}], "]"}], ","}], 
        "*)"}], "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"EdgeForm", " ", "@", " ", "None"}], 
        RowBox[{"(*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", 
            RowBox[{"Switch", "[", 
             RowBox[{
             "msg", ",", " ", "\"\<Title\>\"", ",", " ", ".05", ",", " ", 
              "\"\<Section\>\"", ",", " ", ".025", ",", " ", "\"\<Topic\>\"", 
              ",", " ", ".01", ",", " ", "\"\<Slide\>\"", ",", " ", ".01"}], 
             "]"}], "]"}], ",", " ", "Black"}], "}"}], "*)"}], ",", " ", "\n",
         "\t\t\t", 
        RowBox[{"FaceForm", " ", "@", " ", "None"}], ",", " ", 
        RowBox[{"Rectangle", "[", "]"}], ",", " ", "\n", "\t\t\t", 
        RowBox[{"FaceForm", " ", "@", " ", "LightGray"}], ",", "\n", "\t\t\t", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".39", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".49", ",", ".1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".59", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".59", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".49", ",", ".9"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".39", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"Text", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Page\>\"", ",", " ", "12", ",", " ", 
            RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Center"}], ",", 
            " ", 
            RowBox[{"Background", " ", "\[Rule]", " ", "None"}], ",", " ", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
           "]"}], ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{".475", ",", " ", ".5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], "]"}], ",", "\n", "\t\t\t", 
        RowBox[{"Text", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Break\>\"", ",", " ", "12", ",", " ", 
            RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Center"}], ",", 
            " ", 
            RowBox[{"Background", " ", "\[Rule]", " ", "None"}], ",", " ", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
           "]"}], ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{".525", ",", " ", ".5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}], ",", "\n", 
        "\t\t\t", 
        RowBox[{"Thickness", "[", ".02", "]"}], ",", "\n", "\t\t\t", ",", 
        "\n", "\t\t\t", 
        RowBox[{"Dashing", " ", "@", " ", "Tiny"}], ",", "\n", "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".49", ",", ".75"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".49", ",", ".25"}], "}"}]}], "}"}], "]"}]}], "\n", 
       "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"90", ",", " ", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"AspectRatio", " ", "\[Rule]", " ", 
       RowBox[{"30", " ", "/", " ", "90"}]}]}], "\n", "\t\t", "]"}], ",", 
    "\n", "\t\t", "True", ",", "\n", "\t\t", 
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t\t", 
       RowBox[{
        RowBox[{"FaceForm", " ", "@", " ", "darkColor"}], ",", " ", 
        RowBox[{"Rectangle", "[", "]"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", ".1"}], ",", ".7"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", " ", "\n", "\t\t\t", 
        RowBox[{"FaceForm", " ", "@", " ", "lightColor"}], ",", " ", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{".1", ",", ".1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{".9", ",", ".9"}], "}"}]}], "]"}], ",", " ", "\n", 
        "\t\t\t", 
        RowBox[{"Text", "[", "\n", "\t\t\t\t", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"msg", ",", " ", "12", ",", " ", 
            RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Left"}], ",", " ", 
            RowBox[{"FontColor", " ", "\[Rule]", " ", "fontColor"}], ",", " ", 
            RowBox[{
            "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
           "]"}], ",", " ", "\n", "\t\t\t\t", 
          RowBox[{"{", 
           RowBox[{".15", ",", ".5"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "]"}]}], "\n", "\t\t\t", 
       "}"}], ",", "\n", "\t\t\t", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"90", ",", " ", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
      RowBox[{"AspectRatio", " ", "\[Rule]", " ", 
       RowBox[{"30", " ", "/", " ", "90"}]}]}], "\n", "\t\t", "]"}]}], "\n", 
   "\t", "]"}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwd0VtI03EYxvE1cWkw02kg5DwNzXTZjNocQm7DZtRSWSblbExZU1lqbSKh
nZxaM2plFxm21bBldqATak0Ko0zzBG5JLqVkSpoJS40sbKz+z+/i5QPP5feN
KaqQH6HTaDQBddD2ZUilYSyIzWZ5MZQ2VWihw1FL7OV7GCWUcbf9kqC+qi4F
Dur4AtjXUJIGFzoniE7ecjpsdd8UQathIAOO0g8UwPOeERWMTMwshKd/tRVD
+VBEOTSHG/Swkp1WCVM7w6bhWW6KB7Kedv8k+xxzBdIneT4YfbeaVkrJZVv8
4YRFwIArUhkTXnxXRrxapw6FLqleCO+N+8SQ3/gpA+bEzOdA7Y2eXGiVsFVk
N3MKIcPqr4ESm+EYVLJZiWWUYwoXUTH24u1x9Krd1wtdMvUgbHeLhqDoDXcU
Kq+VOqH3+qtxmDeycxJyZh/NwD8fpLNwsSNiAU4XJhMlEas/YI0zbwkus7O8
sHjZ6KejNBw6Fwi92XEboDskIRb67PQEuC5AsxWykh4TTcEbU+HBhnohfGIx
7e9Gp9dFl6BLYWuGFvfnFljQ0ddBPHrhJXRmDoieBVB/0EaJ4d6PA1VwwvmV
+DCLcwqe3MU1wvy/TBNcDe8nts4porsoV5olPNhmu7Mdsmiz6TBMtKkctlfL
icNNeh2Msb+vgfLJ/Pt2yvomywO4bW3w/OZAqvNh7XeYHOJYhGM7epag7Fb8
b2hUnfFCjUO4JpEyaGqYDmODL4dCfZAjCu7h/IsjtpzYAtt5u/mwX+kUw8jO
9dmwa4qZC42DMw1qStPz+Eboa7Wb4LDq2xX4Hxl3ixg=
  "]],

Cell[BoxData[
 RowBox[{
  RowBox[{"row", "[", 
   RowBox[{"icon_", ",", " ", "hotKey_String"}], "]"}], " ", ":=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"icon", ",", "\n", "\t\t", 
       RowBox[{"Spacer", "[", "1", "]"}], ",", "\n", "\t\t", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"\"\<Alt + \>\"", " ", "<>", " ", "hotKey"}], ",", " ", "12",
          ",", " ", 
         RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}],
         "]"}]}], "\n", "\t\t", "}"}], "}"}], ",", "\n", "\t\t", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.6272321543694344`*^9, 3.627232316319781*^9}, {
  3.6272330028764706`*^9, 3.627233013196336*^9}, {3.627234113638307*^9, 
  3.6272341926007867`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"column", "[", 
   RowBox[{"icon_", ",", " ", "hotKey_String"}], "]"}], " ", ":=", " ", 
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{"icon", ",", "\n", "\t\t", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"\"\<Alt + \>\"", " ", "<>", " ", "hotKey"}], ",", " ", "12", 
        ",", " ", 
        RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
       "]"}]}], "\n", "\t\t", "}"}], ",", "\n", "\t\t", 
    RowBox[{"Alignment", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.627234149306015*^9, 3.627234150296668*^9}, {
  3.62723419764213*^9, 3.6272342582086897`*^9}, {3.6272388867450275`*^9, 
  3.6272388879428167`*^9}, {3.6272389232961683`*^9, 3.6272389244789543`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"action", "[", "cellType_String", "]"}], " ", ":=", " ", 
  RowBox[{"Hold", " ", "@", " ", 
   RowBox[{"FrontEndExecute", "[", 
    RowBox[{"{", "\n", "\t", 
     RowBox[{
      RowBox[{"FrontEnd`SelectionMove", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", "After", ",", 
        " ", "Cell", ",", " ", 
        RowBox[{"AutoScroll", " ", "\[Rule]", " ", "False"}]}], "]"}], ",", 
      "\n", "\t", 
      RowBox[{"FrontEnd`NotebookWrite", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
        RowBox[{"Cell", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"cellType", " ", "\[Equal]", " ", "\"\<CODE\>\""}], ",", 
            " ", 
            RowBox[{"BoxData", "[", "\"\<\>\"", "]"}], ",", " ", "\"\<\>\""}],
            "]"}], ",", " ", "cellType"}], "]"}]}], "]"}], ",", "\n", "\t", 
      RowBox[{"FrontEnd`SelectionMove", "[", 
       RowBox[{
        RowBox[{"FrontEnd`InputNotebook", "[", "]"}], ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cellType", " ", "\[Equal]", " ", "\"\<PageBreak\>\""}], 
          ",", " ", "After", ",", " ", "Previous"}], "]"}], ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cellType", " ", "\[Equal]", " ", "\"\<PageBreak\>\""}], 
          ",", " ", "Cell", ",", " ", "CellContents"}], "]"}], ",", " ", 
        RowBox[{"AutoScroll", " ", "\[Rule]", " ", "False"}]}], "]"}]}], "\n",
      "}"}], "]"}]}]}]], "Code",
 CellChangeTimes->{{3.6272323542419877`*^9, 3.6272323881505146`*^9}, {
  3.6272328701090117`*^9, 3.6272328732721086`*^9}, {3.6276580428956165`*^9, 
  3.6276580937385864`*^9}, {3.6276582888447275`*^9, 3.627658293699979*^9}, {
  3.627663595905401*^9, 3.6276635981879263`*^9}, {3.627663664344144*^9, 
  3.6276636697697763`*^9}, {3.628958893498783*^9, 3.628958899598855*^9}, {
  3.6289589844503326`*^9, 3.6289590100304337`*^9}, {3.6289611550158873`*^9, 
  3.6289611803818493`*^9}, {3.6289613222610693`*^9, 3.6289613417340856`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"horiVert", "[", "str_", "]"}], ":=", 
  RowBox[{"(*", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"EdgeForm", " ", "@", " ", "None"}], 
           RowBox[{"(*", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Thickness", "[", 
               RowBox[{"Switch", "[", 
                RowBox[{
                "msg", ",", " ", "\"\<Title\>\"", ",", " ", ".05", ",", " ", 
                 "\"\<Section\>\"", ",", " ", ".025", ",", " ", 
                 "\"\<Topic\>\"", ",", " ", ".01", ",", " ", "\"\<Slide\>\"", 
                 ",", " ", ".01"}], "]"}], "]"}], ",", " ", "Black"}], "}"}], 
            "*)"}], ",", " ", "\n", "\t\t\t", 
           RowBox[{"FaceForm", " ", "@", " ", "None"}], ",", " ", "\n", 
           "\t\t\t", 
           RowBox[{"Rectangle", "[", "]"}], ",", " ", "\n", "\t\t\t", 
           RowBox[{"Text", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"str", "<>", "\"\< Palette\>\""}], ",", " ", "12", ",",
                " ", 
               RowBox[{"TextAlignment", " ", "\[Rule]", " ", "Center"}], ",", 
               " ", 
               RowBox[{"FontColor", " ", "\[Rule]", " ", "Black"}], ",", " ", 
               RowBox[{
               "FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
              "]"}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{".5", ",", " ", ".5"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"0", ",", " ", "0"}], "}"}]}], "]"}]}], "\n", "\t\t\t", 
          "}"}], ",", "\n", "\t\t\t", 
         RowBox[{"ImageSize", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"150", ",", " ", "30"}], "}"}]}], ",", "\n", "\t\t\t", 
         RowBox[{"AspectRatio", " ", "\[Rule]", " ", 
          RowBox[{"30", " ", "/", " ", "150"}]}]}], "\n", "\t\t", "]"}], "\n",
        "\t\t", "}"}], "}"}], ",", " ", 
     RowBox[{"Alignment", " ", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center"}], "}"}]}]}], "\n", "\t", "]"}], 
   "*)"}], 
  RowBox[{"Style", "[", 
   RowBox[{"str", ",", " ", "12", ",", " ", 
    RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.6276618514234557`*^9, 3.6276618770836067`*^9}, {
  3.6276622872813416`*^9, 3.6276622978373985`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"itemInfo", " ", "=", " ", 
    RowBox[{"{", "\n", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Black", ",", " ", "Black", ",", " ", "\"\<Title\>\"", ",", " ", 
        "White", ",", " ", "\"\<1\>\"", ",", " ", "\"\<Title\>\""}], "}"}], 
      ",", "\n", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", " ", "Black", ",", " ", "\"\<Section\>\"", ",", " ", 
        "White", ",", " ", "\"\<2\>\"", ",", " ", "\"\<Section\>\""}], "}"}], 
      ",", "\n", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", " ", "Black", ",", " ", "\"\<Subsection\>\"", ",", " ", 
        "White", ",", " ", "\"\<3\>\"", ",", " ", "\"\<Subsection\>\""}], 
       "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{".2", ",", " ", "0", ",", " ", ".8"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", 
         RowBox[{".2", ",", " ", "0", ",", " ", ".8"}], "]"}], ",", " ", 
        "\"\<READ\>\"", ",", " ", "White", ",", " ", "\"\<4\>\"", ",", " ", 
        "\"\<READ\>\""}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.9", ",", " ", "0.55", ",", " ", "0"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.9", ",", " ", "0.55", ",", " ", "0"}], "]"}], ",", " ", 
        "\"\<DO\>\"", ",", " ", "White", ",", " ", "\"\<5\>\"", ",", " ", 
        "\"\<DO\>\""}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", " ", "0.65", ",", " ", "0.2"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.2", ",", " ", "0.65", ",", " ", "0.2"}], "]"}], ",", " ", 
        "\"\<TRY\>\"", ",", " ", "White", ",", " ", "\"\<6\>\"", ",", " ", 
        "\"\<TRY\>\""}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0.1", ",", " ", "0.3"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"1", ",", " ", "0.1", ",", " ", "0.3"}], "]"}], ",", " ", 
        "\"\<CODE\>\"", ",", " ", "White", ",", " ", "\"\<7\>\"", ",", " ", 
        "\"\<CODE\>\""}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.7", ",", " ", "0.6", ",", " ", "0.5"}], "]"}], ",", " ", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.7", ",", " ", "0.6", ",", " ", "0.5"}], "]"}], ",", " ", 
        "\"\<TEACH\>\"", ",", " ", "White", ",", " ", "\"\<8\>\"", ",", " ", 
        "\"\<TEACH\>\""}], "}"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{
       "Black", ",", " ", "Black", ",", " ", "\"\<Break\>\"", ",", " ", 
        "White", ",", " ", "\"\<9\>\"", ",", " ", "\"\<PageBreak\>\""}], 
       "}"}]}], "\n", "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"insertCellMenu", " ", "=", " ", 
  RowBox[{"ActionMenu", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Insert Cell\>\"", ",", " ", "14", ",", " ", 
      RowBox[{"FontFamily", " ", "\[Rule]", " ", "\"\<Arial Black\>\""}]}], 
     "]"}], ",", "\n", "\t", 
    RowBox[{"Flatten", " ", "@", " ", 
     RowBox[{"{", "\n", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{"item", " ", "=", " ", "#"}], ",", " ", "\n", "\t\t", 
             RowBox[{"do", " ", "=", " ", 
              RowBox[{"action", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", 
                 RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "\n", "\t", 
            "}"}], ",", " ", "\n", "\t\t", 
           RowBox[{
            RowBox[{"row", "[", 
             RowBox[{
              RowBox[{"icon", "[", 
               RowBox[{"Sequence", " ", "@@", " ", 
                RowBox[{"Take", "[", 
                 RowBox[{"item", ",", " ", 
                  RowBox[{
                   RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                   "2"}]}], "]"}]}], "]"}], ",", " ", 
              RowBox[{"item", "[", 
               RowBox[{"[", 
                RowBox[{"-", "2"}], "]"}], "]"}]}], " ", "]"}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}]}], "\n", "\t", 
          "]"}], "&"}], " ", "/@", " ", "itemInfo"}], ",", "\n", "\t", 
       "Delimiter", ",", "\n", "\t", 
       RowBox[{"With", "[", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"hori", " ", "=", " ", 
            RowBox[{"PaletteNotebook", "[", "\n", "\t", 
             RowBox[{
              RowBox[{"Grid", "[", 
               RowBox[{
                RowBox[{"{", "\n", "\t\t", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"With", "[", "\n", "\t\t\t", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"item", " ", "=", " ", "#"}], ",", " ", 
                    RowBox[{"do", " ", "=", " ", 
                    RowBox[{"action", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
                    " ", "\n", "\t\t\t", 
                    RowBox[{"Button", "[", "\[IndentingNewLine]", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"column", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"icon", "[", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"item", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                    "2"}]}], "]"}]}], "]"}], ",", "\n", "\t\t\t\t\t", 
                    RowBox[{"item", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], "\n", "\t\t\t\t", 
                    "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}], "\n", 
                    "\t\t\t", "]"}]}], "\n", "\t\t", "]"}], "&"}], " ", "/@", 
                  " ", "itemInfo"}], "}"}], ",", "\n", "\t", 
                RowBox[{"Spacings", " ", "\[Rule]", " ", "0"}]}], "]"}], ",", 
              "\n", "\t", 
              RowBox[{
              "WindowTitle", " ", "\[Rule]", " ", "\"\<Cell Insertion\>\""}], 
              ",", "\n", "\t", 
              RowBox[{"WindowMargins", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"50", ",", " ", "Automatic"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", " ", "50"}], "}"}]}], "}"}]}], 
              ",", "\n", "\t", 
              RowBox[{"Deployed", " ", "\[Rule]", " ", "True"}], ",", "\n", 
              "\t", 
              RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], "\n", 
             "]"}]}], ",", "\n", "\t\t", 
           RowBox[{"vert", " ", "=", " ", 
            RowBox[{"PaletteNotebook", "[", "\n", "\t", 
             RowBox[{
              RowBox[{"Grid", "[", "\n", "\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{"With", "[", "\n", "\t\t\t", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"item", " ", "=", " ", "#"}], ",", " ", 
                    RowBox[{"do", " ", "=", " ", 
                    RowBox[{"action", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], "}"}], ",", 
                   "\n", "\t\t\t\t", 
                   RowBox[{"{", "\n", "\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "5", "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Button", "[", "\n", "\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"icon", "[", 
                    RowBox[{"Sequence", " ", "@@", " ", 
                    RowBox[{"Take", "[", 
                    RowBox[{"item", ",", " ", 
                    RowBox[{
                    RowBox[{"Length", "[", "item", "]"}], " ", "-", " ", 
                    "2"}]}], "]"}]}], "]"}], "\n", "\t\t\t\t\t", ",", "\n", 
                    "\t\t\t\t\t", 
                    RowBox[{"ReleaseHold", " ", "@", " ", "do"}]}], "\n", 
                    "\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<Alt + \>\"", " ", "<>", " ", 
                    RowBox[{"item", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}]}], ",", " ", "12", ",", 
                    " ", 
                    RowBox[{
                    "FontFamily", " ", "\[Rule]", " ", 
                    "\"\<Arial Black\>\""}]}], "]"}], ",", "\n", "\t\t\t\t", 
                    RowBox[{"Spacer", "[", "5", "]"}]}], "\n", "\t\t\t\t", 
                    "}"}]}], "\[IndentingNewLine]", "\t\t", "]"}], "&"}], " ",
                 "/@", " ", "itemInfo"}], "]"}], ",", "\n", "\t", 
              RowBox[{
              "WindowTitle", " ", "\[Rule]", " ", "\"\<Cell Insertion\>\""}], 
              ",", "\n", "\t", 
              RowBox[{"WindowMargins", " ", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"50", ",", " ", "Automatic"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", " ", "50"}], "}"}]}], "}"}]}], 
              ",", "\n", "\t", 
              RowBox[{"Deployed", " ", "\[Rule]", " ", "True"}], ",", "\n", 
              "\t", 
              RowBox[{"Saveable", " ", "\[Rule]", " ", "False"}]}], "\n", 
             "]"}]}]}], "\n", "\t", "}"}], ",", 
         RowBox[{"{", "\n", "\t", 
          RowBox[{
           RowBox[{
            RowBox[{
            "horiVert", "[", "\"\<Launch Horizontal Palette\>\"", "]"}], " ", 
            "\[RuleDelayed]", " ", 
            RowBox[{"CreateWindow", " ", "@", " ", "hori"}]}], ",", "\n", 
           "\t", 
           RowBox[{
            RowBox[{"horiVert", "[", "\"\<Launch Vertical Palette\>\"", "]"}],
             " ", "\[RuleDelayed]", " ", 
            RowBox[{"CreateWindow", " ", "@", " ", "vert"}]}]}], "\n", "\t", 
          "}"}]}], "]"}]}], "\n", "}"}]}], ",", "\n", 
    RowBox[{"BaselinePosition", "\[Rule]", "Center"}], ",", 
    RowBox[{"Enabled", "\[Rule]", "True"}], ",", 
    RowBox[{"Appearance", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Automatic", ",", "30"}], "}"}]}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.6272324751474724`*^9, 3.6272325496649857`*^9}, {
   3.6272330247359962`*^9, 3.62723303765158*^9}, {3.62723328921113*^9, 
   3.6272333881234493`*^9}, {3.627233424340522*^9, 3.6272334353638477`*^9}, {
   3.627233494339032*^9, 3.6272335233728933`*^9}, {3.62723358686508*^9, 
   3.627233642992379*^9}, {3.627234310418378*^9, 3.627234419120466*^9}, {
   3.6272348276618767`*^9, 3.627234913804122*^9}, {3.6272349680633698`*^9, 
   3.627235001806799*^9}, {3.627236072078039*^9, 3.627236086908888*^9}, {
   3.6272387063887725`*^9, 3.627238735222336*^9}, {3.6272387843639927`*^9, 
   3.627238784534105*^9}, {3.627239382844*^9, 3.627239400157504*^9}, {
   3.6272457922712216`*^9, 3.6272458355399733`*^9}, {3.627247906421421*^9, 
   3.6272479434810486`*^9}, {3.627256792428459*^9, 3.627256793486165*^9}, {
   3.627257465584518*^9, 3.627257467440753*^9}, {3.627330268005556*^9, 
   3.627330276795431*^9}, {3.627657332291637*^9, 3.6276573824855394`*^9}, {
   3.627657418555008*^9, 3.627657451366723*^9}, {3.6276574895150833`*^9, 
   3.6276574914794827`*^9}, {3.6276575383666835`*^9, 
   3.6276575412616186`*^9}, {3.627660689189619*^9, 3.6276607357177176`*^9}, {
   3.6276608207926674`*^9, 3.6276608507877073`*^9}, {3.6276608897537518`*^9, 
   3.6276612050744023`*^9}, {3.6276612427706027`*^9, 3.627661275759652*^9}, {
   3.6276613657770395`*^9, 3.6276615413706303`*^9}, {3.627661572297299*^9, 
   3.6276615865147963`*^9}, {3.627661619243677*^9, 3.6276616253907857`*^9}, {
   3.627661689855872*^9, 3.62766182253115*^9}, {3.627661887349473*^9, 
   3.6276620718731537`*^9}, {3.627662143305243*^9, 3.6276621473839693`*^9}, {
   3.6276622113136964`*^9, 3.6276623145715837`*^9}, {3.6276623903762503`*^9, 
   3.627662402355256*^9}, {3.628803288782304*^9, 3.6288033744509773`*^9}, {
   3.62880340771821*^9, 3.628803457302347*^9}, {3.629326904789555*^9, 
   3.629326904948662*^9}, 3.629327020784599*^9, {3.6293300052085943`*^9, 
   3.6293300063463497`*^9}, {3.629330203390476*^9, 3.629330204059921*^9}}],

Cell[BoxData[
 ActionMenuBox[
  StyleBox["\<\"Insert Cell\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->14], {
  TagBox[GridBox[{
     {
      GraphicsBox[
       {EdgeForm[None], FaceForm[GrayLevel[0.8]], 
        RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
        {GrayLevel[0.3], Thickness[0.04], 
         LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], InsetBox[
          StyleBox["\<\"Title\"\>",
           StripOnInput->False,
           TextAlignment->Center,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[0.3]], {0.5, 0.5}, {0, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 1\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["Title" == "CODE", 
         BoxData[""], ""], "Title"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["Title" == "PageBreak", After, Previous], 
       If["Title" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[
       {EdgeForm[None], FaceForm[GrayLevel[0.8]], 
        RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
        {GrayLevel[0.3], Thickness[0.025], 
         LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], InsetBox[
          StyleBox["\<\"Section\"\>",
           StripOnInput->False,
           TextAlignment->Center,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[0.3]], {0.5, 0.5}, {0, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 2\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["Section" == "CODE", 
         BoxData[""], ""], "Section"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["Section" == "PageBreak", After, Previous], 
       If["Section" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[
       {EdgeForm[None], FaceForm[GrayLevel[0.8]], 
        RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
        {GrayLevel[0.3], Thickness[0.01], 
         LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], InsetBox[
          StyleBox["\<\"Subsection\"\>",
           StripOnInput->False,
           TextAlignment->Center,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[0.3]], {0.5, 0.5}, {0, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 3\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["Subsection" == "CODE", 
         BoxData[""], ""], "Subsection"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["Subsection" == "PageBreak", After, Previous], 
       If["Subsection" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[0.2, 0, 0.8]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[0.2, 0, 0.8]], 
         RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
          StyleBox["\<\"READ\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 4\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["READ" == "CODE", 
         BoxData[""], ""], "READ"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["READ" == "PageBreak", After, Previous], 
       If["READ" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[0.9, 0.55, 0]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[0.9, 0.55, 0]], 
         RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
          StyleBox["\<\"DO\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 5\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["DO" == "CODE", 
         BoxData[""], ""], "DO"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["DO" == "PageBreak", After, Previous], 
       If["DO" == "PageBreak", Cell, CellContents], AutoScroll -> False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[0.2, 0.65, 0.2]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[0.2, 0.65, 0.2]], 
         RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
          StyleBox["\<\"TRY\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 6\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["TRY" == "CODE", 
         BoxData[""], ""], "TRY"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["TRY" == "PageBreak", After, Previous], 
       If["TRY" == "PageBreak", Cell, CellContents], AutoScroll -> False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[1, 0.1, 0.3]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[1, 0.1, 0.3]], 
         RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
          StyleBox["\<\"CODE\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 7\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["CODE" == "CODE", 
         BoxData[""], ""], "CODE"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["CODE" == "PageBreak", After, Previous], 
       If["CODE" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[{
        {FaceForm[RGBColor[0.7, 0.6, 0.5]], 
         RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
         RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
        {FaceForm[RGBColor[0.7, 0.6, 0.5]], 
         RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
          StyleBox["\<\"TEACH\"\>",
           StripOnInput->False,
           TextAlignment->Left,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 8\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["TEACH" == "CODE", 
         BoxData[""], ""], "TEACH"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["TEACH" == "PageBreak", After, Previous], 
       If["TEACH" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], 
  TagBox[GridBox[{
     {
      GraphicsBox[
       {EdgeForm[None], FaceForm[None], 
        RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
        {FaceForm[GrayLevel[0.85]], 
         PolygonBox[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1, 
           1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], InsetBox[
          StyleBox["\<\"Page\"\>",
           StripOnInput->False,
           TextAlignment->Center,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[0],
           Background->None], {0.475, 0.5}, {1, 0}], InsetBox[
          StyleBox["\<\"Break\"\>",
           StripOnInput->False,
           TextAlignment->Center,
           FontFamily->"Arial Black",
           FontSize->12,
           FontColor->GrayLevel[0],
           Background->None], {0.525, 0.5}, {-1, 0}], 
         {Thickness[0.02], Dashing[Tiny], 
          LineBox[{{0.49, 0.75}, {0.49, 0.25}}]}}},
       AspectRatio->NCache[
         Rational[1, 3], 0.3333333333333333],
       ImageSize->{90, 30}], 
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]], 
      StyleBox["\<\"Alt + 9\"\>",
       StripOnInput->False,
       FontFamily->"Arial Black",
       FontSize->12]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"]:>ReleaseHold[
   Hold[
    FrontEndExecute[{
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
      FrontEnd`NotebookWrite[
       FrontEnd`InputNotebook[], 
       Cell[
        If["PageBreak" == "CODE", 
         BoxData[""], ""], "PageBreak"]], 
      FrontEnd`SelectionMove[
       FrontEnd`InputNotebook[], 
       If["PageBreak" == "PageBreak", After, Previous], 
       If["PageBreak" == "PageBreak", Cell, CellContents], AutoScroll -> 
       False]}]]], Delimiter, 
  StyleBox["\<\"Launch Horizontal Palette\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->12]:>CreateWindow[
   PaletteNotebook[
    Grid[{{
       Button[
        Column[{
          Graphics[{
            EdgeForm[None], 
            FaceForm[
             GrayLevel[0.8]], 
            Rectangle[{0, 0}], 
            GrayLevel[0.3], 
            Thickness[0.04], Null, 
            Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
            Text[
             Style[
             "Title", 12, TextAlignment -> Center, FontColor -> 
              GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
             0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 1", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["Title" == "CODE", 
               BoxData[""], ""], "Title"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["Title" == "PageBreak", After, Previous], 
             If["Title" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            EdgeForm[None], 
            FaceForm[
             GrayLevel[0.8]], 
            Rectangle[{0, 0}], 
            GrayLevel[0.3], 
            Thickness[0.025], Null, 
            Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
            Text[
             Style[
             "Section", 12, TextAlignment -> Center, FontColor -> 
              GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
             0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 2", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["Section" == "CODE", 
               BoxData[""], ""], "Section"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["Section" == "PageBreak", After, Previous], 
             If["Section" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            EdgeForm[None], 
            FaceForm[
             GrayLevel[0.8]], 
            Rectangle[{0, 0}], 
            GrayLevel[0.3], 
            Thickness[0.01], Null, 
            Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
            Text[
             Style[
             "Subsection", 12, TextAlignment -> Center, FontColor -> 
              GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
             0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 3", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["Subsection" == "CODE", 
               BoxData[""], ""], "Subsection"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["Subsection" == "PageBreak", After, Previous], 
             If["Subsection" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            FaceForm[
             RGBColor[0.2, 0, 0.8]], 
            Rectangle[{0, 0}], 
            Rectangle[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.2, 0, 0.8]], 
            Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
            Text[
             Style[
             "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
              FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 4", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["READ" == "CODE", 
               BoxData[""], ""], "READ"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["READ" == "PageBreak", After, Previous], 
             If["READ" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            FaceForm[
             RGBColor[0.9, 0.55, 0]], 
            Rectangle[{0, 0}], 
            Rectangle[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.9, 0.55, 0]], 
            Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
            Text[
             Style[
             "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
              FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 5", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["DO" == "CODE", 
               BoxData[""], ""], "DO"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["DO" == "PageBreak", After, Previous], 
             If["DO" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            FaceForm[
             RGBColor[0.2, 0.65, 0.2]], 
            Rectangle[{0, 0}], 
            Rectangle[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.2, 0.65, 0.2]], 
            Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
            Text[
             Style[
             "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
              FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 6", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["TRY" == "CODE", 
               BoxData[""], ""], "TRY"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["TRY" == "PageBreak", After, Previous], 
             If["TRY" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            FaceForm[
             RGBColor[1, 0.1, 0.3]], 
            Rectangle[{0, 0}], 
            Rectangle[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[1, 0.1, 0.3]], 
            Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
            Text[
             Style[
             "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
              FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 7", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["CODE" == "CODE", 
               BoxData[""], ""], "CODE"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["CODE" == "PageBreak", After, Previous], 
             If["CODE" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            FaceForm[
             RGBColor[0.7, 0.6, 0.5]], 
            Rectangle[{0, 0}], 
            Rectangle[{-0.1, 0.7}, {0, 1}], 
            FaceForm[
             RGBColor[0.7, 0.6, 0.5]], 
            Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
            Text[
             Style[
             "TEACH", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
              FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
           ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
          Style["Alt + 8", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["TEACH" == "CODE", 
               BoxData[""], ""], "TEACH"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["TEACH" == "PageBreak", After, Previous], 
             If["TEACH" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Button[
        Column[{
          Graphics[{
            EdgeForm[None], 
            FaceForm[None], 
            Rectangle[{0, 0}], 
            FaceForm[
             GrayLevel[0.85]], 
            
            Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1, 
              1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
            Text[
             Style[
             "Page", 12, TextAlignment -> Center, Background -> None, 
              FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {0.475,
              0.5}, {1, 0}], 
            Text[
             Style[
             "Break", 12, TextAlignment -> Center, Background -> None, 
              FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {0.525,
              0.5}, {-1, 0}], 
            Thickness[0.02], Null, 
            Dashing[Tiny], 
            Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
           AspectRatio -> Rational[1, 3]], 
          Style["Alt + 9", 12, FontFamily -> "Arial Black"]}, 
         Alignment -> {Center, Center}], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["PageBreak" == "CODE", 
               BoxData[""], ""], "PageBreak"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["PageBreak" == "PageBreak", After, Previous], 
             If["PageBreak" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]]}}, Spacings -> 0], WindowTitle -> "Cell Insertion", 
    WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> True, 
    Saveable -> False]], 
  StyleBox["\<\"Launch Vertical Palette\"\>",
   StripOnInput->False,
   FontFamily->"Arial Black",
   FontSize->12]:>CreateWindow[
   PaletteNotebook[
    Grid[{{
       Spacer[5], 
       Button[
        Graphics[{
          EdgeForm[None], 
          FaceForm[
           GrayLevel[0.8]], 
          Rectangle[{0, 0}], 
          GrayLevel[0.3], 
          Thickness[0.04], Null, 
          Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
          Text[
           Style[
           "Title", 12, TextAlignment -> Center, FontColor -> GrayLevel[0.3], 
            FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 0}]}, 
         ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["Title" == "CODE", 
               BoxData[""], ""], "Title"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["Title" == "PageBreak", After, Previous], 
             If["Title" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 1", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          EdgeForm[None], 
          FaceForm[
           GrayLevel[0.8]], 
          Rectangle[{0, 0}], 
          GrayLevel[0.3], 
          Thickness[0.025], Null, 
          Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
          Text[
           Style[
           "Section", 12, TextAlignment -> Center, FontColor -> 
            GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
           0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["Section" == "CODE", 
               BoxData[""], ""], "Section"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["Section" == "PageBreak", After, Previous], 
             If["Section" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 2", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          EdgeForm[None], 
          FaceForm[
           GrayLevel[0.8]], 
          Rectangle[{0, 0}], 
          GrayLevel[0.3], 
          Thickness[0.01], Null, 
          Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
          Text[
           Style[
           "Subsection", 12, TextAlignment -> Center, FontColor -> 
            GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 0.5}, {0, 
           0}]}, ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["Subsection" == "CODE", 
               BoxData[""], ""], "Subsection"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["Subsection" == "PageBreak", After, Previous], 
             If["Subsection" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 3", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          FaceForm[
           RGBColor[0.2, 0, 0.8]], 
          Rectangle[{0, 0}], 
          Rectangle[{-0.1, 0.7}, {0, 1}], 
          FaceForm[
           RGBColor[0.2, 0, 0.8]], 
          Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
          Text[
           Style[
           "READ", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
            FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
         ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["READ" == "CODE", 
               BoxData[""], ""], "READ"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["READ" == "PageBreak", After, Previous], 
             If["READ" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 4", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          FaceForm[
           RGBColor[0.9, 0.55, 0]], 
          Rectangle[{0, 0}], 
          Rectangle[{-0.1, 0.7}, {0, 1}], 
          FaceForm[
           RGBColor[0.9, 0.55, 0]], 
          Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
          Text[
           Style[
           "DO", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
            FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
         ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["DO" == "CODE", 
               BoxData[""], ""], "DO"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["DO" == "PageBreak", After, Previous], 
             If["DO" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 5", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          FaceForm[
           RGBColor[0.2, 0.65, 0.2]], 
          Rectangle[{0, 0}], 
          Rectangle[{-0.1, 0.7}, {0, 1}], 
          FaceForm[
           RGBColor[0.2, 0.65, 0.2]], 
          Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
          Text[
           Style[
           "TRY", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
            FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
         ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["TRY" == "CODE", 
               BoxData[""], ""], "TRY"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["TRY" == "PageBreak", After, Previous], 
             If["TRY" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 6", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          FaceForm[
           RGBColor[1, 0.1, 0.3]], 
          Rectangle[{0, 0}], 
          Rectangle[{-0.1, 0.7}, {0, 1}], 
          FaceForm[
           RGBColor[1, 0.1, 0.3]], 
          Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
          Text[
           Style[
           "CODE", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
            FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
         ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["CODE" == "CODE", 
               BoxData[""], ""], "CODE"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["CODE" == "PageBreak", After, Previous], 
             If["CODE" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 7", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          FaceForm[
           RGBColor[0.7, 0.6, 0.5]], 
          Rectangle[{0, 0}], 
          Rectangle[{-0.1, 0.7}, {0, 1}], 
          FaceForm[
           RGBColor[0.7, 0.6, 0.5]], 
          Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
          Text[
           Style[
           "TEACH", 12, TextAlignment -> Left, FontColor -> GrayLevel[1], 
            FontFamily -> "Arial Black"], {0.15, 0.5}, {-1, 0}]}, 
         ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["TEACH" == "CODE", 
               BoxData[""], ""], "TEACH"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["TEACH" == "PageBreak", After, Previous], 
             If["TEACH" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 8", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}, {
       Spacer[5], 
       Button[
        Graphics[{
          EdgeForm[None], 
          FaceForm[None], 
          Rectangle[{0, 0}], 
          FaceForm[
           GrayLevel[0.85]], 
          
          Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 0}, {1, 
            1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0, 0}}], 
          Text[
           Style[
           "Page", 12, TextAlignment -> Center, Background -> None, FontColor -> 
            GrayLevel[0], FontFamily -> "Arial Black"], {0.475, 0.5}, {1, 0}], 
          Text[
           Style[
           "Break", 12, TextAlignment -> Center, Background -> None, 
            FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {0.525, 
           0.5}, {-1, 0}], 
          Thickness[0.02], Null, 
          Dashing[Tiny], 
          Line[{{0.49, 0.75}, {0.49, 0.25}}]}, ImageSize -> {90, 30}, 
         AspectRatio -> Rational[1, 3]], 
        ReleaseHold[
         Hold[
          FrontEndExecute[{
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
            FrontEnd`NotebookWrite[
             FrontEnd`InputNotebook[], 
             Cell[
              If["PageBreak" == "CODE", 
               BoxData[""], ""], "PageBreak"]], 
            FrontEnd`SelectionMove[
             FrontEnd`InputNotebook[], 
             If["PageBreak" == "PageBreak", After, Previous], 
             If["PageBreak" == "PageBreak", Cell, CellContents], AutoScroll -> 
             False]}]]]], 
       Style["Alt + 9", 12, FontFamily -> "Arial Black"], 
       Spacer[5]}}], WindowTitle -> "Cell Insertion", 
    WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> True, 
    Saveable -> False]]},
  Appearance->Automatic,
  BaselinePosition->Center,
  Enabled->True,
  ImageSize->{Automatic, 30},
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.6276612762479706`*^9, {3.627661400501243*^9, 3.627661416312809*^9}, {
   3.627661522798983*^9, 3.6276615419870334`*^9}, 3.627661592669911*^9, 
   3.6276616259301395`*^9, 3.6276616945309925`*^9, 3.6276617275486603`*^9, {
   3.6276617818449497`*^9, 3.6276618235968556`*^9}, {3.6276619021657195`*^9, 
   3.6276619156037025`*^9}, 3.6276620734291897`*^9, 3.627662147838273*^9, 
   3.6276622281389446`*^9, {3.6276623017600203`*^9, 3.6276623157053404`*^9}, {
   3.627662392843898*^9, 3.627662403161793*^9}, 3.627663674514942*^9, 
   3.628437987981166*^9, 3.62843803416395*^9, 3.62843846861897*^9, 
   3.6284386018401356`*^9, 3.628445961018135*^9, 3.628446037017931*^9, 
   3.6284460886994734`*^9, 3.6284465840791473`*^9, 3.6284466499711857`*^9, 
   3.6284466928730097`*^9, 3.6284532276388493`*^9, 3.6286830327709775`*^9, 
   3.6286831007504125`*^9, 3.6286832422076917`*^9, 3.628683293496972*^9, 
   3.628683505430504*^9, 3.62868360315327*^9, 3.62868364007205*^9, {
   3.628683716737294*^9, 3.6286837374711494`*^9}, {3.6286837773397975`*^9, 
   3.628683797822914*^9}, 3.6286839098267746`*^9, 3.628683942670725*^9, 
   3.6288031101344614`*^9, 3.628803161182019*^9, 3.6288032130226665`*^9, 
   3.6288033135488577`*^9, 3.6288033772308283`*^9, 3.6288034164440374`*^9, 
   3.628803458449115*^9, 3.628933382070323*^9, 3.6289443260134153`*^9, 
   3.6289452713017893`*^9, 3.6289662996778536`*^9, 3.628968239232793*^9, 
   3.6289698640777035`*^9, 3.6290296538632083`*^9, 3.629038339613806*^9, 
   3.62904010386341*^9, 3.6290404552238703`*^9, 3.629114725547474*^9, 
   3.6291159839997025`*^9, 3.6291226897067375`*^9, 3.629122786549368*^9, 
   3.6291228177838087`*^9, 3.6291230158187094`*^9, 3.629291449881322*^9, 
   3.629309689632807*^9, 3.6293108297352743`*^9, 3.629322530158244*^9, 
   3.629327022427695*^9, 3.629329203374152*^9, 3.6293292672728596`*^9, 
   3.629329897945567*^9, {3.6293299920568*^9, 3.629330008221603*^9}, 
   3.6293302054198256`*^9, 3.62933309702293*^9, 3.62933508916446*^9, 
   3.629335768687928*^9, 3.629574495778439*^9, 3.6295846830087166`*^9, 
   3.629628287293312*^9, 3.6296285608469543`*^9, 3.6296308803697805`*^9, 
   3.62963390337884*^9, 3.6296356805935435`*^9, 3.6296387444929028`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Building navBar cells", "Section",
 CellChangeTimes->{{3.627331265474153*^9, 3.6273312805622425`*^9}}],

Cell[BoxData[
 RowBox[{"CellPrint", " ", "@", " ", 
  RowBox[{"Cell", " ", "@", " ", 
   RowBox[{"BoxData", " ", "@", " ", 
    RowBox[{"ToBoxes", " ", "@", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{"{", "\n", "\t", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{"saveButton", ",", "\"\<save changes\>\""}], "]"}], 
               ",", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{
                "undoButton", ",", "\"\<undo most recent change\>\""}], "]"}],
                ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"redoButton", ",", "\"\<redo most recent undo\>\""}], 
                "]"}], ",", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"backButtonAuthor", ",", "\"\<previous page\>\""}], 
                "]"}], ",", " ", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"contentsMenu", ",", "\"\<table of contents\>\""}], 
                "]"}], ",", " ", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"nextButtonAuthor", ",", "\"\<next page\>\""}], 
                "]"}]}], "\n", "}"}], "}"}], "]"}], ",", 
           RowBox[{"ItemSize", "\[Rule]", 
            RowBox[{"Scaled", "[", 
             RowBox[{"1", "/", "2"}], "]"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{"{", "\n", "\t", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{"deleteButton", ",", "\"\<delete current cell\>\""}], 
                "]"}], ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{
                "insertCellMenu", ",", "\"\<cell insertion menu\>\""}], "]"}],
                ",", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"displayMenu", ",", "\"\<set display options\>\""}], 
                "]"}]}], "\n", "}"}], "}"}], "]"}], ",", 
           RowBox[{"ItemSize", "\[Rule]", 
            RowBox[{"Scaled", "[", 
             RowBox[{"1", "/", "2"}], "]"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}]}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwdy11Ik2EAxfH5tTkvdIGYk6FOQkMQzHTpVXtlhNqcbszp/KBY28W0Gb3q
BO0iTEo0HTi0C0VsjjGaKCG6KWZ+ZQTDMmQaSS3QNF/UIJgYpD3nuTj8OBd/
qeGBxhTO4/HSyWCG5JJrgM8xChN/DnYpxBM+YlDsnYSqy/a3sCxjk6qZ8gVn
iT+/9OxDddH0MfzoXvgDecWL57BNsBE+R6wSLaneEHWRkjKYFl+hhVviKzr4
u66oGvrSTqiPosVXZQKOEXasUteqzNegducsFyZwATv9ltUBOH7P3XuD6Mpr
sUG2/OkQdFrixqBIzy5D/tdWqiKu8xO8/iF3Ax52BsyZQo5JSnew0H2z21JD
TKnws1DZsm6FOy8P2uC/Sc28kbitaV6BuofS0DRxtGCN2pDy6i+8vTgYOUN0
etoLYL9ghFrf/djqJfp/3WqFoRxWN0uUO071ULZb2wjN815qqCl54TPxfWI2
dXfYGthCf3eQqnaopcYYjrlw36cq699VQkOsSw+7Tp81wnHDd2qpZN8Jq502
Dxx5Yn8NbWE/qO0Rz4Mw09OXYCK+cMjzoTyqhtpTcsTAaGFpITQqv92Bfq3K
ACeyUvegaFRG/Q/BYxZm
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      TagBox[GridBox[{
         {
          TagBox[
           TooltipBox[
            ButtonBox[
             StyleBox["\<\"Save\"\>",
              StripOnInput->False,
              FontFamily->"Arial Black",
              FontSize->14],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[{
                FrontEndToken[
                 FrontEnd`InputNotebook[], "Save"]}],
             Enabled->True,
             Evaluator->None,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"save changes\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "save changes", "Tooltip"]& ], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{15, 0}],
            CacheGraphics->False],
           Spacer[15]], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], FaceForm[None], 
               CircleBox[{0, 0}, 1, 
                NCache[{
                 Rational[-1, 2] Pi, Rational[3, 4] 
                  Pi}, {-1.5707963267948966`, 2.356194490192345}]], 
               {FaceForm[GrayLevel[0]], 
                PolygonBox[{{-0.17677669529663687`, 
                 0.17677669529663687`}, {-1.237436867076458, 
                 1.237436867076458}, {-1.237436867076458, 
                 0.17677669529663687`}}]}},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[{
                FrontEndToken[
                 FrontEnd`InputNotebook[], "Undo"]}],
             Enabled->True,
             Evaluator->None,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"undo most recent change\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "undo most recent change", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], FaceForm[None], 
               CircleBox[{0, 0}, 1, 
                NCache[{Rational[1, 4] Pi, Rational[3, 2] Pi}, {
                 0.7853981633974483, 4.71238898038469}]], 
               {FaceForm[GrayLevel[0]], 
                PolygonBox[{{0.17677669529663687`, 0.17677669529663687`}, {
                 1.237436867076458, 0.17677669529663687`}, {1.237436867076458,
                  1.237436867076458}}]}},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[{
                FrontEndToken[
                 FrontEnd`InputNotebook[], "Redo"]}],
             Enabled->True,
             Evaluator->None,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"redo most recent undo\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "redo most recent undo", "Tooltip"]& ], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{15, 0}],
            CacheGraphics->False],
           Spacer[15]], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], LineBox[{{0, 0}, {-1, 0.5}, {0, 1}}]},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[
               FrontEndToken[
                FrontEnd`InputNotebook[], "ScrollPagePrevious"]],
             Enabled->True,
             Evaluator->None,
             ImageSize->{30, 30},
             Method->"Preemptive"],
            "\"previous page\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "previous page", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            
            DynamicModuleBox[{$CellContext`sectionCounter$$ = 
             0, $CellContext`subsectionCounter$$ = 
             0, $CellContext`TOC$$ = {}, $CellContext`oldTOC$$ = {}, \
$CellContext`updateQ$$}, 
             TagBox[
              DynamicBox[ToBoxes[
                ActionMenu[
                 Style[
                 "Contents", 14, FontFamily -> 
                  "Arial Black"], $CellContext`TOC$$, BaselinePosition -> 
                 Center, Enabled -> True, Appearance -> Automatic, 
                 ImageSize -> {Automatic, 30}, Method -> "Queued"], 
                StandardForm],
               ImageSizeCache->{108., {15., 15.}},
               TrackedSymbols:>{$CellContext`TOC$$}],
              
              EventHandlerTag[{
               "MouseDown" :> {$CellContext`sectionCounter$$ = 
                  0, $CellContext`subsectionCounter$$ = 0, $CellContext`TOC$$ = 
                  With[{$CellContext`cellsTOC$ = Cells[
                    InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
                    With[{$CellContext`cellTypes$ = Map[Part[
                    NotebookRead[#], 2]& , $CellContext`cellsTOC$]}, 
                    With[{$CellContext`cellTitles$ = Map[Part[
                    NotebookRead[#], 1]& , $CellContext`cellsTOC$]}, 
                    MapIndexed[
                    With[{$CellContext`cell$ = Part[$CellContext`cellsTOC$, 
                    First[#2]]}, 
                    
                    With[{$CellContext`cellType$ = 
                    Part[$CellContext`cellTypes$, 
                    First[#2]]}, 
                    With[{$CellContext`action$ = Hold[
                    SelectionMove[$CellContext`cell$, All, Cell]]}, 
                    With[{$CellContext`cellNumbering$ = 
                    If[$CellContext`cellType$ == 
                    "Section", $CellContext`subsectionCounter$$ = 0; 
                    Increment[$CellContext`sectionCounter$$]; 
                    ToString[$CellContext`sectionCounter$$], 
                    Increment[$CellContext`subsectionCounter$$]; StringJoin[
                    ToString[$CellContext`sectionCounter$$], ".", 
                    ToString[$CellContext`subsectionCounter$$]]]}, 
                    
                    With[{$CellContext`currentCellQ$ = 
                    And[$CellContext`sectionCounter$$ == 
                    CurrentValue[{
                    "CounterValue", 
                    "Section"}], $CellContext`subsectionCounter$$ == 
                    CurrentValue[{"CounterValue", "Subsection"}]]}, Style[
                    Row[{
                    If[$CellContext`subsectionCounter$$ != 0, 
                    Spacer[30], 
                    Spacer[0]], 
                    If[$CellContext`currentCellQ$, 
                    Style["\[Checkmark] ", 14, FontFamily -> "Arial Black"], 
                    Invisible[
                    Style[
                    "\[Checkmark] ", 14, FontColor -> Blue, FontFamily -> 
                    "Arial Black"]]], 
                    Grid[{{$CellContext`cellNumbering$, "-", 
                    If[
                    Apply[Head, #] === Cell, "{heading cannot be displayed}", 
                    RawBoxes[
                    Apply[RowBox, #]]]}}, ItemSize -> {{All, All, All}, {1}}, 
                    Alignment -> {{Right, Center, Left}}]}], FontFamily -> 
                    "Arial Black"] :> 
                    ReleaseHold[$CellContext`action$]]]]]]& , \
$CellContext`cellTitles$]]]]}, PassEventsDown -> True, PassEventsDown -> 
                Automatic, PassEventsUp -> True}]],
             DynamicModuleValues:>{}],
            "\"table of contents\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "table of contents", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[
               FrontEndToken[
                FrontEnd`InputNotebook[], "ScrollPageNext"]],
             Enabled->True,
             Evaluator->None,
             ImageSize->{30, 30},
             Method->"Preemptive"],
            "\"next page\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "next page", "Tooltip"]& ]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Left, Center},
      ItemSize->Scaled[
        Rational[1, 2]],
      StripOnInput->False], 
     ItemBox[
      TagBox[GridBox[{
         {
          TagBox[
           TooltipBox[
            ButtonBox[
             StyleBox["\<\"Remove Cell\"\>",
              StripOnInput->False,
              FontFamily->"Arial Black",
              FontSize->14],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>{
               FrontEndExecute[
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Cell, AutoScroll -> False]], 
               NotebookDelete[
                Cells[
                 NotebookSelection[
                  InputNotebook[]]]]},
             Enabled->True,
             Evaluator->Automatic,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"delete current cell\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "delete current cell", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            ActionMenuBox[
             StyleBox["\<\"Insert Cell\"\>",
              StripOnInput->False,
              FontFamily->"Arial Black",
              FontSize->14], {
             TagBox[GridBox[{
                {
                 GraphicsBox[
                  {EdgeForm[None], FaceForm[GrayLevel[0.8]], 
                   RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                   {GrayLevel[0.3], Thickness[0.04], 
                    LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    InsetBox[
                    StyleBox["\<\"Title\"\>",
                    StripOnInput->False,
                    TextAlignment->Center,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[0.3]], {0.5, 0.5}, {0, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 1\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["Title" == "CODE", 
                    BoxData[""], ""], "Title"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["Title" == "PageBreak", After, Previous], 
                  If["Title" == "PageBreak", Cell, CellContents], AutoScroll -> 
                  False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[
                  {EdgeForm[None], FaceForm[GrayLevel[0.8]], 
                   RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                   {GrayLevel[0.3], Thickness[0.025], 
                    LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    InsetBox[
                    StyleBox["\<\"Section\"\>",
                    StripOnInput->False,
                    TextAlignment->Center,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[0.3]], {0.5, 0.5}, {0, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 2\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["Section" == "CODE", 
                    BoxData[""], ""], "Section"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["Section" == "PageBreak", After, Previous], 
                  If["Section" == "PageBreak", Cell, CellContents], 
                  AutoScroll -> False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[
                  {EdgeForm[None], FaceForm[GrayLevel[0.8]], 
                   RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                   {GrayLevel[0.3], Thickness[0.01], 
                    LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    InsetBox[
                    StyleBox["\<\"Subsection\"\>",
                    StripOnInput->False,
                    TextAlignment->Center,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[0.3]], {0.5, 0.5}, {0, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 3\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["Subsection" == "CODE", 
                    BoxData[""], ""], "Subsection"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["Subsection" == "PageBreak", After, Previous], 
                  If["Subsection" == "PageBreak", Cell, CellContents], 
                  AutoScroll -> False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[{
                   {FaceForm[RGBColor[0.2, 0, 0.8]], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
                   {FaceForm[RGBColor[0.2, 0, 0.8]], 
                    RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
                    StyleBox["\<\"READ\"\>",
                    StripOnInput->False,
                    TextAlignment->Left,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 4\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["READ" == "CODE", 
                    BoxData[""], ""], "READ"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["READ" == "PageBreak", After, Previous], 
                  If["READ" == "PageBreak", Cell, CellContents], AutoScroll -> 
                  False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[{
                   {FaceForm[RGBColor[0.9, 0.55, 0]], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
                   {FaceForm[RGBColor[0.9, 0.55, 0]], 
                    RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
                    StyleBox["\<\"DO\"\>",
                    StripOnInput->False,
                    TextAlignment->Left,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 5\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["DO" == "CODE", 
                    BoxData[""], ""], "DO"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["DO" == "PageBreak", After, Previous], 
                  If["DO" == "PageBreak", Cell, CellContents], AutoScroll -> 
                  False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[{
                   {FaceForm[RGBColor[0.2, 0.65, 0.2]], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
                   {FaceForm[RGBColor[0.2, 0.65, 0.2]], 
                    RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
                    StyleBox["\<\"TRY\"\>",
                    StripOnInput->False,
                    TextAlignment->Left,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 6\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["TRY" == "CODE", 
                    BoxData[""], ""], "TRY"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["TRY" == "PageBreak", After, Previous], 
                  If["TRY" == "PageBreak", Cell, CellContents], AutoScroll -> 
                  False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[{
                   {FaceForm[RGBColor[1, 0.1, 0.3]], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
                   {FaceForm[RGBColor[1, 0.1, 0.3]], 
                    RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
                    StyleBox["\<\"CODE\"\>",
                    StripOnInput->False,
                    TextAlignment->Left,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 7\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["CODE" == "CODE", 
                    BoxData[""], ""], "CODE"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["CODE" == "PageBreak", After, Previous], 
                  If["CODE" == "PageBreak", Cell, CellContents], AutoScroll -> 
                  False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[{
                   {FaceForm[RGBColor[0.7, 0.6, 0.5]], 
                    RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                    RectangleBox[{-0.1, 0.7}, {0, 1}]}, 
                   {FaceForm[RGBColor[0.7, 0.6, 0.5]], 
                    RectangleBox[{0.1, 0.1}, {0.9, 0.9}], InsetBox[
                    StyleBox["\<\"TEACH\"\>",
                    StripOnInput->False,
                    TextAlignment->Left,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[1]], {0.15, 0.5}, {-1, 0}]}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 8\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["TEACH" == "CODE", 
                    BoxData[""], ""], "TEACH"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["TEACH" == "PageBreak", After, Previous], 
                  If["TEACH" == "PageBreak", Cell, CellContents], AutoScroll -> 
                  False]}]]], 
             TagBox[GridBox[{
                {
                 GraphicsBox[
                  {EdgeForm[None], FaceForm[None], 
                   RectangleBox[{0, 0}, \
{-2.290219094737954*^-38, -2.290219094737954*^-38}], 
                   {FaceForm[GrayLevel[0.85]], 
                    PolygonBox[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1,
                     0}, {1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {
                    0, 0}}], InsetBox[
                    StyleBox["\<\"Page\"\>",
                    StripOnInput->False,
                    TextAlignment->Center,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[0],
                    Background->None], {0.475, 0.5}, {1, 0}], InsetBox[
                    StyleBox["\<\"Break\"\>",
                    StripOnInput->False,
                    TextAlignment->Center,
                    FontFamily->"Arial Black",
                    FontSize->12,
                    FontColor->GrayLevel[0],
                    Background->None], {0.525, 0.5}, {-1, 0}], 
                    {Thickness[0.02], Dashing[Tiny], 
                    LineBox[{{0.49, 0.75}, {0.49, 0.25}}]}}},
                  AspectRatio->NCache[
                    Rational[1, 3], 0.3333333333333333],
                  ImageSize->{90, 30}], 
                 InterpretationBox[
                  StyleBox[
                   GraphicsBox[{},
                    BaselinePosition->Baseline,
                    ImageSize->{1, 0}],
                   CacheGraphics->False],
                  Spacer[1]], 
                 StyleBox["\<\"Alt + 9\"\>",
                  StripOnInput->False,
                  FontFamily->"Arial Black",
                  FontSize->12]}
               },
               AutoDelete->False,
               GridBoxAlignment->{
                "Columns" -> {{Center}}, "Rows" -> {{Center}}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
              "Grid"]:>ReleaseHold[
              Hold[
               FrontEndExecute[{
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], After, Cell, AutoScroll -> False], 
                 FrontEnd`NotebookWrite[
                  FrontEnd`InputNotebook[], 
                  Cell[
                   If["PageBreak" == "CODE", 
                    BoxData[""], ""], "PageBreak"]], 
                 FrontEnd`SelectionMove[
                  FrontEnd`InputNotebook[], 
                  If["PageBreak" == "PageBreak", After, Previous], 
                  If["PageBreak" == "PageBreak", Cell, CellContents], 
                  AutoScroll -> False]}]]], Delimiter, 
             StyleBox["\<\"Launch Horizontal Palette\"\>",
              StripOnInput->False,
              FontFamily->"Arial Black",
              FontSize->12]:>CreateWindow[
              PaletteNotebook[
               Grid[{{
                  Button[
                   Column[{
                    Graphics[{
                    EdgeForm[None], 
                    FaceForm[
                    GrayLevel[0.8]], 
                    Rectangle[{0, 0}], 
                    GrayLevel[0.3], 
                    Thickness[0.04], Null, 
                    Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    Text[
                    Style[
                    "Title", 12, TextAlignment -> Center, FontColor -> 
                    GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 
                    0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 1", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["Title" == "CODE", 
                    BoxData[""], ""], "Title"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["Title" == "PageBreak", After, Previous], 
                    If["Title" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    EdgeForm[None], 
                    FaceForm[
                    GrayLevel[0.8]], 
                    Rectangle[{0, 0}], 
                    GrayLevel[0.3], 
                    Thickness[0.025], Null, 
                    Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    Text[
                    Style[
                    "Section", 12, TextAlignment -> Center, FontColor -> 
                    GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 
                    0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 2", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["Section" == "CODE", 
                    BoxData[""], ""], "Section"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["Section" == "PageBreak", After, Previous], 
                    If["Section" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    EdgeForm[None], 
                    FaceForm[
                    GrayLevel[0.8]], 
                    Rectangle[{0, 0}], 
                    GrayLevel[0.3], 
                    Thickness[0.01], Null, 
                    Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    Text[
                    Style[
                    "Subsection", 12, TextAlignment -> Center, FontColor -> 
                    GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 
                    0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 3", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["Subsection" == "CODE", 
                    BoxData[""], ""], "Subsection"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["Subsection" == "PageBreak", After, Previous], 
                    If["Subsection" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.2, 0, 0.8]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.2, 0, 0.8]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "READ", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 4", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["READ" == "CODE", 
                    BoxData[""], ""], "READ"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["READ" == "PageBreak", After, Previous], 
                    If["READ" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.9, 0.55, 0]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.9, 0.55, 0]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "DO", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 5", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["DO" == "CODE", 
                    BoxData[""], ""], "DO"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["DO" == "PageBreak", After, Previous], 
                    If["DO" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.2, 0.65, 0.2]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.2, 0.65, 0.2]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "TRY", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 6", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["TRY" == "CODE", 
                    BoxData[""], ""], "TRY"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["TRY" == "PageBreak", After, Previous], 
                    If["TRY" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    FaceForm[
                    RGBColor[1, 0.1, 0.3]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[1, 0.1, 0.3]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "CODE", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 7", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["CODE" == "CODE", 
                    BoxData[""], ""], "CODE"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["CODE" == "PageBreak", After, Previous], 
                    If["CODE" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    FaceForm[
                    RGBColor[0.7, 0.6, 0.5]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.7, 0.6, 0.5]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "TEACH", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                    Style["Alt + 8", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["TEACH" == "CODE", 
                    BoxData[""], ""], "TEACH"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["TEACH" == "PageBreak", After, Previous], 
                    If["TEACH" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Button[
                   Column[{
                    Graphics[{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}], 
                    FaceForm[
                    GrayLevel[0.85]], 
                    
                    Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 
                    0}, {1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0,
                     0}}], 
                    Text[
                    Style[
                    "Page", 12, TextAlignment -> Center, Background -> None, 
                    FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                    0.475, 0.5}, {1, 0}], 
                    Text[
                    Style[
                    "Break", 12, TextAlignment -> Center, Background -> None, 
                    FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                    0.525, 0.5}, {-1, 0}], 
                    Thickness[0.02], Null, 
                    Dashing[Tiny], 
                    Line[{{0.49, 0.75}, {0.49, 0.25}}]}, 
                    ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
                    Style["Alt + 9", 12, FontFamily -> "Arial Black"]}, 
                    Alignment -> {Center, Center}], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["PageBreak" == "CODE", 
                    BoxData[""], ""], "PageBreak"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["PageBreak" == "PageBreak", After, Previous], 
                    If["PageBreak" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]]}}, Spacings -> 0], WindowTitle -> 
               "Cell Insertion", 
               WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> 
               True, Saveable -> False]], 
             StyleBox["\<\"Launch Vertical Palette\"\>",
              StripOnInput->False,
              FontFamily->"Arial Black",
              FontSize->12]:>CreateWindow[
              PaletteNotebook[
               Grid[{{
                  Spacer[5], 
                  Button[
                   Graphics[{
                    EdgeForm[None], 
                    FaceForm[
                    GrayLevel[0.8]], 
                    Rectangle[{0, 0}], 
                    GrayLevel[0.3], 
                    Thickness[0.04], Null, 
                    Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    Text[
                    Style[
                    "Title", 12, TextAlignment -> Center, FontColor -> 
                    GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 
                    0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["Title" == "CODE", 
                    BoxData[""], ""], "Title"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["Title" == "PageBreak", After, Previous], 
                    If["Title" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Style["Alt + 1", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    EdgeForm[None], 
                    FaceForm[
                    GrayLevel[0.8]], 
                    Rectangle[{0, 0}], 
                    GrayLevel[0.3], 
                    Thickness[0.025], Null, 
                    Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    Text[
                    Style[
                    "Section", 12, TextAlignment -> Center, FontColor -> 
                    GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 
                    0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["Section" == "CODE", 
                    BoxData[""], ""], "Section"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["Section" == "PageBreak", After, Previous], 
                    If["Section" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Style["Alt + 2", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    EdgeForm[None], 
                    FaceForm[
                    GrayLevel[0.8]], 
                    Rectangle[{0, 0}], 
                    GrayLevel[0.3], 
                    Thickness[0.01], Null, 
                    Line[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}], 
                    Text[
                    Style[
                    "Subsection", 12, TextAlignment -> Center, FontColor -> 
                    GrayLevel[0.3], FontFamily -> "Arial Black"], {0.5, 
                    0.5}, {0, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["Subsection" == "CODE", 
                    BoxData[""], ""], "Subsection"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["Subsection" == "PageBreak", After, Previous], 
                    If["Subsection" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Style["Alt + 3", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    FaceForm[
                    RGBColor[0.2, 0, 0.8]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.2, 0, 0.8]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "READ", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["READ" == "CODE", 
                    BoxData[""], ""], "READ"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["READ" == "PageBreak", After, Previous], 
                    If["READ" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Style["Alt + 4", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    FaceForm[
                    RGBColor[0.9, 0.55, 0]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.9, 0.55, 0]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "DO", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["DO" == "CODE", 
                    BoxData[""], ""], "DO"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["DO" == "PageBreak", After, Previous], 
                    If["DO" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Style["Alt + 5", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    FaceForm[
                    RGBColor[0.2, 0.65, 0.2]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.2, 0.65, 0.2]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "TRY", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["TRY" == "CODE", 
                    BoxData[""], ""], "TRY"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["TRY" == "PageBreak", After, Previous], 
                    If["TRY" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Style["Alt + 6", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    FaceForm[
                    RGBColor[1, 0.1, 0.3]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[1, 0.1, 0.3]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "CODE", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["CODE" == "CODE", 
                    BoxData[""], ""], "CODE"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["CODE" == "PageBreak", After, Previous], 
                    If["CODE" == "PageBreak", Cell, CellContents], AutoScroll -> 
                    False]}]]]], 
                  Style["Alt + 7", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    FaceForm[
                    RGBColor[0.7, 0.6, 0.5]], 
                    Rectangle[{0, 0}], 
                    Rectangle[{-0.1, 0.7}, {0, 1}], 
                    FaceForm[
                    RGBColor[0.7, 0.6, 0.5]], 
                    Rectangle[{0.1, 0.1}, {0.9, 0.9}], 
                    Text[
                    Style[
                    "TEACH", 12, TextAlignment -> Left, FontColor -> 
                    GrayLevel[1], FontFamily -> "Arial Black"], {0.15, 
                    0.5}, {-1, 0}]}, ImageSize -> {90, 30}, AspectRatio -> 
                    Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["TEACH" == "CODE", 
                    BoxData[""], ""], "TEACH"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["TEACH" == "PageBreak", After, Previous], 
                    If["TEACH" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Style["Alt + 8", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}, {
                  Spacer[5], 
                  Button[
                   Graphics[{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}], 
                    FaceForm[
                    GrayLevel[0.85]], 
                    
                    Polygon[{{0, 0}, {0.39, 0}, {0.49, 0.1}, {0.59, 0}, {1, 
                    0}, {1, 1}, {0.59, 1}, {0.49, 0.9}, {0.39, 1}, {0, 1}, {0,
                     0}}], 
                    Text[
                    Style[
                    "Page", 12, TextAlignment -> Center, Background -> None, 
                    FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                    0.475, 0.5}, {1, 0}], 
                    Text[
                    Style[
                    "Break", 12, TextAlignment -> Center, Background -> None, 
                    FontColor -> GrayLevel[0], FontFamily -> "Arial Black"], {
                    0.525, 0.5}, {-1, 0}], 
                    Thickness[0.02], Null, 
                    Dashing[Tiny], 
                    Line[{{0.49, 0.75}, {0.49, 0.25}}]}, 
                    ImageSize -> {90, 30}, AspectRatio -> Rational[1, 3]], 
                   ReleaseHold[
                    Hold[
                    FrontEndExecute[{
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], After, Cell, AutoScroll -> 
                    False], 
                    FrontEnd`NotebookWrite[
                    FrontEnd`InputNotebook[], 
                    Cell[
                    If["PageBreak" == "CODE", 
                    BoxData[""], ""], "PageBreak"]], 
                    FrontEnd`SelectionMove[
                    FrontEnd`InputNotebook[], 
                    If["PageBreak" == "PageBreak", After, Previous], 
                    If["PageBreak" == "PageBreak", Cell, CellContents], 
                    AutoScroll -> False]}]]]], 
                  Style["Alt + 9", 12, FontFamily -> "Arial Black"], 
                  Spacer[5]}}], WindowTitle -> "Cell Insertion", 
               WindowMargins -> {{50, Automatic}, {Automatic, 50}}, Deployed -> 
               True, Saveable -> False]]},
             Appearance->Automatic,
             BaselinePosition->Center,
             Enabled->True,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"cell insertion menu\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "cell insertion menu", "Tooltip"]& ], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{15, 0}],
            CacheGraphics->False],
           Spacer[15]], 
          TagBox[
           TooltipBox[
            DynamicModuleBox[{}, 
             ActionMenuBox[
              StyleBox["\<\"Display\"\>",
               StripOnInput->False,
               FontFamily->"Arial Black",
               FontSize->14], {
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Mode - Teacher\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == 
                    "Teacher", 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(FrontEndExecute[
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> 
                 False]]; FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; 
              FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; 
              CurrentValue[
                 FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = 
               "Teacher"; CurrentValue[
                 InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; 
              Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Mode - Student\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == 
                    "Student", 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(FrontEndExecute[
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> 
                 False]]; FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; 
              FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; 
              CurrentValue[
                 FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = 
               "Student"; CurrentValue[
                 InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; 
              Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Mode - Author\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == 
                    "Author", 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = 
               "Author"; CurrentValue[
                 InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; 
              Null), Delimiter, 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Dynamic - On\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "DynamicUpdating"] == True, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "DynamicUpdating"] = True; Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Dynamic - Off\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "DynamicUpdating"] == False, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "DynamicUpdating"] = False; Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Dynamic - Auto\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "DynamicUpdating"] == Automatic, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "DynamicUpdating"] = Automatic; 
              Null), Delimiter, 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Zoom - 80%\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "Magnification"] == 0.8, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                FrontEnd`InputNotebook[], "Magnification"] = 0.8), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Zoom - 100%\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "Magnification"] == 1, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>{CurrentValue[
                 FrontEnd`InputNotebook[], "Magnification"] = 1}, 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Zoom - 120%\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "Magnification"] == 1.2, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                FrontEnd`InputNotebook[], "Magnification"] = 1.2), Delimiter, 
              StyleBox["\<\"Learn more...\"\>",
               StripOnInput->False,
               FontFamily->"Arial Black",
               FontSize->14]:>CreateDialog[
               Style[
                Column[{
                  Pane[
                   Grid[{{
                    Style["About", 16, Bold]}, {
                    Style[
                    Pane[
                    
                    Column[{
                    "LICENSE - The design and contents of this tutorial are \
licensed under a", 
                    Row[{
                    Hyperlink[
                    "Creative Commons Attribution-ShareAlike 4.0 \
International License", "http://creativecommons.org/licenses/by-sa/4.0/"], 
                    "."}]}], ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}, {
                    Style[
                    Pane[
                    
                    Row[{"ATTRIBUTION - This tutorial is derived from work \
originally done by Kyle Keane, the original work can be found at ", 
                    Hyperlink[
                    "www.kylekeane.com", "http://www.kylekeane.com"]}], 
                    ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}, {
                    Style[
                    Pane[
                    StringJoin[
                    "INTENT - The original work was provided as a free \
educational resource for teaching and learning computer programming. ", 
                    "It is hoped that derivative works will also be shared \
for little or no cost in service of all who seek and provide education."], 
                    ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}, {
                    Style["Resources", 16, Bold]}, {
                    Style[
                    Pane[
                    Column[{
                    Hyperlink[
                    "DISCUSS - Forum about Wolfram on the Raspberry Pi ", 
                    "http://community.wolfram.com/content?curTag=raspberry%\
20pi"], 
                    Hyperlink[
                    "LEARN - Getting Started with Mathematica on the \
Raspberry Pi", 
                    "http://www.raspberrypi.org/learning/getting-started-with-\
mathematica"], 
                    Hyperlink[
                    "LEARN - A Fast Introduction to the Wolfram Language for \
Programmers", 
                    "http://www.wolfram.com/language/fast-introduction-for-\
programmers"], 
                    Hyperlink[
                    "INFO - Homepage of Wolfram on the Raspberry Pi", 
                    "http://www.wolfram.com/raspberry-pi"], 
                    Hyperlink[
                    "INFO - Homepage of the Wolfram Language", 
                    "http://www.wolfram.com/language"], 
                    Hyperlink[
                    "EXPLORE - Free collection of interactive graphics and \
code", "http://demonstrations.wolfram.com"], 
                    Hyperlink[
                    "EXPLORE - Free computational-knowledge engine", 
                    "http://www.wolframalpha.com"]}, Spacings -> 0.25], 
                    ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}}, 
                    Dividers -> {
                    False, {
                    False, True, False, False, False, True, False, False}}, 
                    Alignment -> Left, Spacings -> {0, 1.5}, ItemSize -> {
                    Scaled[0.95], Automatic}], ImageSize -> {450, All}, 
                   Scrollbars -> {False, False}, AppearanceElements -> None], 
                  Spacer[2], 
                  Item[
                   DefaultButton[], Alignment -> Right]}], 12, FontFamily -> 
                "Arial"], WindowTitle -> "About this document"]},
              Appearance->Automatic,
              BaselinePosition->Center,
              Enabled->True,
              ImageSize->{Automatic, 30},
              Method->"Preemptive"],
             DynamicModuleValues:>{}],
            "\"set display options\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "set display options", "Tooltip"]& ]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Right, Center},
      ItemSize->Scaled[
        Rational[1, 2]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.629638747311185*^9}],

Cell[BoxData[
 RowBox[{"CellPrint", " ", "@", " ", 
  RowBox[{"Cell", " ", "@", " ", 
   RowBox[{"BoxData", " ", "@", " ", 
    RowBox[{"ToBoxes", " ", "@", " ", 
     RowBox[{"Grid", "[", 
      RowBox[{"{", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{"{", "\n", "\t", 
              RowBox[{
               RowBox[{"Tooltip", "[", 
                RowBox[{"saveButton", ",", "\"\<save your progress\>\""}], 
                "]"}], ",", " ", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{
                "undoButton", ",", "\"\<undo most recent change\>\""}], "]"}],
                ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"redoButton", ",", "\"\<redo most recent undo\>\""}], 
                "]"}], ",", " ", 
               RowBox[{"Spacer", "[", "15", "]"}], ",", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"backButton", ",", "\"\<previous page\>\""}], "]"}], 
               ",", " ", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"contentsMenu", ",", "\"\<table of contents\>\""}], 
                "]"}], ",", " ", "\n", "\t", 
               RowBox[{"Tooltip", "[", 
                RowBox[{"nextButton", ",", "\"\<next page\>\""}], "]"}]}], 
              "\n", "}"}], "}"}], "]"}], ",", 
           RowBox[{"ItemSize", "\[Rule]", 
            RowBox[{"Scaled", "[", 
             RowBox[{"4", "/", "5"}], "]"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Left", ",", "Center"}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Item", "[", 
          RowBox[{
           RowBox[{"Grid", "[", 
            RowBox[{"{", 
             RowBox[{"{", "\n", "\t", 
              RowBox[{"Tooltip", "[", 
               RowBox[{"displayMenu", ",", "\"\<set display options\>\""}], 
               "]"}], "\n", "}"}], "}"}], "]"}], ",", 
           RowBox[{"ItemSize", "\[Rule]", 
            RowBox[{"Scaled", "[", 
             RowBox[{"1", "/", "5"}], "]"}]}], ",", 
           RowBox[{"Alignment", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Right", ",", "Center"}], "}"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], "}"}], "]"}]}]}]}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwdy28o43EAx/ElbdwDdlx3Ny2ajulKnT83KXGr5c+ZP1uzM+dKYw82Rn6Y
ch5cl+5EUsSTu64za83/xG4jnI1zXYlzzRCFkn+/ckptUcz3833w6dXnwVuk
rVPqgjgcThwZFAsfWvu4rFSm487Cdplg3Ek8EDgmYOGT3p+wSOyhKqecBzPE
453OE6jItV/AddvCFeTkLd7BFt5G0CyxlO8qnCeqg4VFMPZRiQpuCZ6p4eW7
3DLojP1PbQ0RJEh4rDT04zJ1pVSfBFV716nwMevtpd+43AdHK21daUTry6Zu
yBR/+gItxvBByNcwbsjdbabKwtv+wpQ/qRvwvM2rfx7KSqPizQy0ZXUY3xJj
SlYZKG9aM8G9gdMWeDuhnKsibisbl6C6XuSzE7+nr1CrY4ZvYP5if/APomXk
fTrs4X2jGjo+mBzE1bPsZuhLZtQzxFdmvwZKjsproX7OQfU1RC/8I/5++oJ6
9NXk3UJf0U9VmBWiqgesNGCrocoNv95AbZhVA9v9n2vhqHafWiA8scAIxj8G
PYrNaehyS+xwKN8TpSPmGAzx8DhSlQjFh0tpkL95lQF7AruZMPu27DUM1E3K
4T3+2hNt
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      TagBox[GridBox[{
         {
          TagBox[
           TooltipBox[
            ButtonBox[
             StyleBox["\<\"Save\"\>",
              StripOnInput->False,
              FontFamily->"Arial Black",
              FontSize->14],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[{
                FrontEndToken[
                 FrontEnd`InputNotebook[], "Save"]}],
             Enabled->True,
             Evaluator->None,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"save your progress\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "save your progress", "Tooltip"]& ], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{15, 0}],
            CacheGraphics->False],
           Spacer[15]], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], FaceForm[None], 
               CircleBox[{0, 0}, 1, 
                NCache[{
                 Rational[-1, 2] Pi, Rational[3, 4] 
                  Pi}, {-1.5707963267948966`, 2.356194490192345}]], 
               {FaceForm[GrayLevel[0]], 
                PolygonBox[{{-0.17677669529663687`, 
                 0.17677669529663687`}, {-1.237436867076458, 
                 1.237436867076458}, {-1.237436867076458, 
                 0.17677669529663687`}}]}},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[{
                FrontEndToken[
                 FrontEnd`InputNotebook[], "Undo"]}],
             Enabled->True,
             Evaluator->None,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"undo most recent change\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "undo most recent change", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], FaceForm[None], 
               CircleBox[{0, 0}, 1, 
                NCache[{Rational[1, 4] Pi, Rational[3, 2] Pi}, {
                 0.7853981633974483, 4.71238898038469}]], 
               {FaceForm[GrayLevel[0]], 
                PolygonBox[{{0.17677669529663687`, 0.17677669529663687`}, {
                 1.237436867076458, 0.17677669529663687`}, {1.237436867076458,
                  1.237436867076458}}]}},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[{
                FrontEndToken[
                 FrontEnd`InputNotebook[], "Redo"]}],
             Enabled->True,
             Evaluator->None,
             ImageSize->{Automatic, 30},
             Method->"Preemptive"],
            "\"redo most recent undo\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "redo most recent undo", "Tooltip"]& ], 
          InterpretationBox[
           StyleBox[
            GraphicsBox[{},
             BaselinePosition->Baseline,
             ImageSize->{15, 0}],
            CacheGraphics->False],
           Spacer[15]], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], LineBox[{{0, 0}, {-1, 0.5}, {0, 1}}]},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[FrontEndToken[
                 FrontEnd`InputNotebook[], "ScrollPagePrevious"]; 
               FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> 
                 False]; FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]; Null],
             Enabled->True,
             Evaluator->None,
             ImageSize->{30, 30},
             Method->"Preemptive"],
            "\"previous page\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "previous page", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            
            DynamicModuleBox[{$CellContext`sectionCounter$$ = 
             0, $CellContext`subsectionCounter$$ = 
             0, $CellContext`TOC$$ = {}, $CellContext`oldTOC$$ = {}, \
$CellContext`updateQ$$}, 
             TagBox[
              DynamicBox[ToBoxes[
                ActionMenu[
                 Style[
                 "Contents", 14, FontFamily -> 
                  "Arial Black"], $CellContext`TOC$$, BaselinePosition -> 
                 Center, Enabled -> True, Appearance -> Automatic, 
                 ImageSize -> {Automatic, 30}, Method -> "Queued"], 
                StandardForm],
               ImageSizeCache->{108., {15., 15.}},
               TrackedSymbols:>{$CellContext`TOC$$}],
              
              EventHandlerTag[{
               "MouseDown" :> {$CellContext`sectionCounter$$ = 
                  0, $CellContext`subsectionCounter$$ = 0, $CellContext`TOC$$ = 
                  With[{$CellContext`cellsTOC$ = Cells[
                    InputNotebook[], CellStyle -> {"Section", "Subsection"}]}, 
                    With[{$CellContext`cellTypes$ = Map[Part[
                    NotebookRead[#], 2]& , $CellContext`cellsTOC$]}, 
                    With[{$CellContext`cellTitles$ = Map[Part[
                    NotebookRead[#], 1]& , $CellContext`cellsTOC$]}, 
                    MapIndexed[
                    With[{$CellContext`cell$ = Part[$CellContext`cellsTOC$, 
                    First[#2]]}, 
                    
                    With[{$CellContext`cellType$ = 
                    Part[$CellContext`cellTypes$, 
                    First[#2]]}, 
                    With[{$CellContext`action$ = Hold[
                    SelectionMove[$CellContext`cell$, All, Cell]]}, 
                    
                    With[{$CellContext`cellNumbering$ = 
                    If[$CellContext`cellType$ == 
                    "Section", $CellContext`subsectionCounter$$ = 0; 
                    Increment[$CellContext`sectionCounter$$]; 
                    ToString[$CellContext`sectionCounter$$], 
                    Increment[$CellContext`subsectionCounter$$]; StringJoin[
                    ToString[$CellContext`sectionCounter$$], ".", 
                    ToString[$CellContext`subsectionCounter$$]]]}, 
                    
                    With[{$CellContext`currentCellQ$ = 
                    And[$CellContext`sectionCounter$$ == 
                    CurrentValue[{
                    "CounterValue", 
                    "Section"}], $CellContext`subsectionCounter$$ == 
                    CurrentValue[{"CounterValue", "Subsection"}]]}, Style[
                    Row[{
                    If[$CellContext`subsectionCounter$$ != 0, 
                    Spacer[30], 
                    Spacer[0]], 
                    If[$CellContext`currentCellQ$, 
                    Style["\[Checkmark] ", 14, FontFamily -> "Arial Black"], 
                    Invisible[
                    Style[
                    "\[Checkmark] ", 14, FontColor -> Blue, FontFamily -> 
                    "Arial Black"]]], 
                    Grid[{{$CellContext`cellNumbering$, "-", 
                    If[
                    Apply[Head, #] === Cell, "{heading cannot be displayed}", 
                    RawBoxes[
                    Apply[RowBox, #]]]}}, ItemSize -> {{All, All, All}, {1}}, 
                    Alignment -> {{Right, Center, Left}}]}], FontFamily -> 
                    "Arial Black"] :> 
                    ReleaseHold[$CellContext`action$]]]]]]& , \
$CellContext`cellTitles$]]]]}, PassEventsDown -> True, PassEventsDown -> 
                Automatic, PassEventsUp -> True}]],
             DynamicModuleValues:>{}],
            "\"table of contents\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "table of contents", "Tooltip"]& ], 
          TagBox[
           TooltipBox[
            ButtonBox[
             GraphicsBox[
              {Thickness[0.1], LineBox[{{0, 0}, {1, 0.5}, {0, 1}}]},
              Background->None,
              BaselinePosition->Center,
              ImageSize->{20, 20}],
             Appearance->Automatic,
             BaselinePosition->Center,
             ButtonFunction:>FrontEndExecute[FrontEndToken[
                 FrontEnd`InputNotebook[], "ScrollPageNext"]; 
               FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> 
                 False]; FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]; Null],
             Enabled->True,
             Evaluator->None,
             ImageSize->{30, 30},
             Method->"Preemptive"],
            "\"next page\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "next page", "Tooltip"]& ]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Left, Center},
      ItemSize->Scaled[
        Rational[4, 5]],
      StripOnInput->False], 
     ItemBox[
      TagBox[GridBox[{
         {
          TagBox[
           TooltipBox[
            DynamicModuleBox[{}, 
             ActionMenuBox[
              StyleBox["\<\"Display\"\>",
               StripOnInput->False,
               FontFamily->"Arial Black",
               FontSize->14], {
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Mode - Teacher\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == 
                    "Teacher", 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(FrontEndExecute[
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> 
                 False]]; FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; 
              FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; 
              CurrentValue[
                 FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = 
               "Teacher"; CurrentValue[
                 InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; 
              Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Mode - Student\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == 
                    "Student", 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(FrontEndExecute[
                FrontEnd`SelectionMove[
                 FrontEnd`InputNotebook[], All, Notebook, AutoScroll -> 
                 False]]; FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionOpenAllGroups"]]; 
              FrontEndExecute[
                FrontEndToken[
                 FrontEnd`InputNotebook[], "SelectionCloseUnselectedCells"]]; 
              CurrentValue[
                 FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = 
               "Student"; CurrentValue[
                 InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; 
              Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Mode - Author\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] == 
                    "Author", 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "ScreenStyleEnvironment"] = 
               "Author"; CurrentValue[
                 InputNotebook[], {TaggingRules, "firstClickTOC"}] = False; 
              Null), Delimiter, 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Dynamic - On\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "DynamicUpdating"] == True, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "DynamicUpdating"] = True; Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Dynamic - Off\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "DynamicUpdating"] == False, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "DynamicUpdating"] = False; Null), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Dynamic - Auto\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "DynamicUpdating"] == Automatic, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                 FrontEnd`InputNotebook[], "DynamicUpdating"] = Automatic; 
              Null), Delimiter, 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Zoom - 80%\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "Magnification"] == 0.8, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                FrontEnd`InputNotebook[], "Magnification"] = 0.8), 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Zoom - 100%\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "Magnification"] == 1, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>{CurrentValue[
                 FrontEnd`InputNotebook[], "Magnification"] = 1}, 
              TagBox[GridBox[{
                 {
                  StyleBox["\<\"Zoom - 120%\"\>",
                   StripOnInput->False,
                   FontFamily->"Arial Black",
                   FontSize->14], 
                  DynamicBox[ToBoxes[
                    If[CurrentValue[
                    FrontEnd`InputNotebook[], "Magnification"] == 1.2, 
                    Style["\[Checkmark]", 14, FontFamily -> "Arial Black"], 
                    ""], StandardForm]]}
                },
                AutoDelete->False,
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Grid"]:>(CurrentValue[
                FrontEnd`InputNotebook[], "Magnification"] = 1.2), Delimiter, 
              StyleBox["\<\"Learn more...\"\>",
               StripOnInput->False,
               FontFamily->"Arial Black",
               FontSize->14]:>CreateDialog[
               Style[
                Column[{
                  Pane[
                   Grid[{{
                    Style["About", 16, Bold]}, {
                    Style[
                    Pane[
                    
                    Column[{
                    "LICENSE - The design and contents of this tutorial are \
licensed under a", 
                    Row[{
                    Hyperlink[
                    "Creative Commons Attribution-ShareAlike 4.0 \
International License", "http://creativecommons.org/licenses/by-sa/4.0/"], 
                    "."}]}], ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}, {
                    Style[
                    Pane[
                    
                    Row[{"ATTRIBUTION - This tutorial is derived from work \
originally done by Kyle Keane, the original work can be found at ", 
                    Hyperlink[
                    "www.kylekeane.com", "http://www.kylekeane.com"]}], 
                    ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}, {
                    Style[
                    Pane[
                    StringJoin[
                    "INTENT - The original work was provided as a free \
educational resource for teaching and learning computer programming. ", 
                    "It is hoped that derivative works will also be shared \
for little or no cost in service of all who seek and provide education."], 
                    ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}, {
                    Style["Resources", 16, Bold]}, {
                    Style[
                    Pane[
                    Column[{
                    Hyperlink[
                    "DISCUSS - Forum about Wolfram on the Raspberry Pi ", 
                    "http://community.wolfram.com/content?curTag=raspberry%\
20pi"], 
                    Hyperlink[
                    "LEARN - Getting Started with Mathematica on the \
Raspberry Pi", 
                    "http://www.raspberrypi.org/learning/getting-started-with-\
mathematica"], 
                    Hyperlink[
                    "LEARN - A Fast Introduction to the Wolfram Language for \
Programmers", 
                    "http://www.wolfram.com/language/fast-introduction-for-\
programmers"], 
                    Hyperlink[
                    "INFO - Homepage of Wolfram on the Raspberry Pi", 
                    "http://www.wolfram.com/raspberry-pi"], 
                    Hyperlink[
                    "INFO - Homepage of the Wolfram Language", 
                    "http://www.wolfram.com/language"], 
                    Hyperlink[
                    "EXPLORE - Free collection of interactive graphics and \
code", "http://demonstrations.wolfram.com"], 
                    Hyperlink[
                    "EXPLORE - Free computational-knowledge engine", 
                    "http://www.wolframalpha.com"]}, Spacings -> 0.25], 
                    ImageSize -> {
                    Scaled[1], All}, Scrollbars -> {False, False}, 
                    AppearanceElements -> None], LineIndent -> 0]}}, 
                    Dividers -> {
                    False, {
                    False, True, False, False, False, True, False, False}}, 
                    Alignment -> Left, Spacings -> {0, 1.5}, ItemSize -> {
                    Scaled[0.95], Automatic}], ImageSize -> {450, All}, 
                   Scrollbars -> {False, False}, AppearanceElements -> None], 
                  Spacer[2], 
                  Item[
                   DefaultButton[], Alignment -> Right]}], 12, FontFamily -> 
                "Arial"], WindowTitle -> "About this document"]},
              Appearance->Automatic,
              BaselinePosition->Center,
              Enabled->True,
              ImageSize->{Automatic, 30},
              Method->"Preemptive"],
             DynamicModuleValues:>{}],
            "\"set display options\"",
            TooltipStyle->"TextStyling"],
           Annotation[#, "set display options", "Tooltip"]& ]}
        },
        AutoDelete->False,
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"],
      Alignment->{Right, Center},
      ItemSize->Scaled[
        Rational[1, 5]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]],
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.629638748816335*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{784, 455},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"test" -> "5", "firstClickTOC" -> False},
DynamicUpdating->Automatic,
Magnification->1,
FrontEndVersion->"10.0 for Microsoft Windows (64-bit) (July 1, 2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]]}, Visible -> False, 
  FrontEndVersion -> "10.0 for Microsoft Windows (64-bit) (July 1, 2014)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 100, 1, 62, "Subchapter"],
Cell[CellGroupData[{
Cell[705, 27, 100, 1, 70, "Section"],
Cell[CellGroupData[{
Cell[830, 32, 94, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[949, 37, 161, 2, 30, "Input"],
Cell[1113, 41, 136, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1286, 48, 533, 14, 72, "Input"],
Cell[1822, 64, 289, 6, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2148, 75, 731, 21, 52, "Input"],
Cell[2882, 98, 344, 6, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3263, 109, 842, 23, 52, "Input"],
Cell[4108, 134, 339, 6, 48, "Output"]
}, Open  ]],
Cell[4462, 143, 5551, 118, 432, "Input"],
Cell[10016, 263, 1712, 63, 45, InheritFromParent],
Cell[11731, 328, 19686, 412, 1612, "Input"],
Cell[31420, 742, 4500, 142, 45, InheritFromParent],
Cell[CellGroupData[{
Cell[35945, 888, 154, 3, 30, "Input"],
Cell[36102, 893, 719, 21, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36858, 919, 1617, 46, 112, "Input"],
Cell[38478, 967, 593, 13, 56, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39120, 986, 94, 1, 41, "Subsection"],
Cell[39217, 989, 11104, 237, 672, "Input"],
Cell[50324, 1228, 2557, 84, 50, InheritFromParent],
Cell[CellGroupData[{
Cell[52906, 1316, 2866, 73, 232, "Input"],
Cell[55775, 1391, 1967, 66, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57779, 1462, 1440, 40, 92, "Input"],
Cell[59222, 1504, 845, 19, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60104, 1528, 9967, 217, 1233, "Code"],
Cell[70074, 1747, 5410, 136, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75521, 1888, 3130, 75, 453, "Code"],
Cell[78654, 1965, 2244, 52, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80935, 2022, 2311, 58, 232, "Input"],
Cell[83249, 2082, 561, 15, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83847, 2102, 1333, 34, 72, "Input"],
Cell[85183, 2138, 718, 17, 45, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[85962, 2162, 95, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[86082, 2167, 94, 1, 49, "Subsection"],
Cell[CellGroupData[{
Cell[86201, 2172, 2449, 54, 273, "Code"],
Cell[88653, 2228, 2516, 55, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91206, 2288, 305, 8, 30, "Input"],
Cell[91514, 2298, 261, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91812, 2310, 9602, 210, 1133, "Code"],
Cell[101417, 2522, 3320, 61, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104774, 2588, 10799, 226, 1133, "Code"],
Cell[115576, 2816, 3691, 65, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119304, 2886, 10290, 225, 1133, "Code"],
Cell[129597, 3113, 3694, 68, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133328, 3186, 9241, 204, 1073, "Code"],
Cell[142572, 3392, 3103, 59, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145712, 3456, 155, 3, 30, "Input"],
Cell[145870, 3461, 97, 2, 374, "Output"]
}, Open  ]]
}, Open  ]],
Cell[145994, 3467, 270, 7, 379, "Subsection"],
Cell[CellGroupData[{
Cell[146289, 3478, 223, 4, 371, "Subsection"],
Cell[CellGroupData[{
Cell[146537, 3486, 147, 2, 30, "Input"],
Cell[146687, 3490, 102, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146826, 3496, 123, 2, 30, "Input"],
Cell[146952, 3500, 154, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147143, 3508, 143, 2, 30, "Input"],
Cell[147289, 3512, 6007, 138, 292, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153333, 3655, 125, 2, 30, "Input"],
Cell[153461, 3659, 203, 4, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[153725, 3670, 243, 3, 56, "Section"],
Cell[CellGroupData[{
Cell[153993, 3677, 272, 7, 30, "Input"],
Cell[154268, 3686, 80, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154385, 3692, 524, 14, 30, "Input"],
Cell[154912, 3708, 412, 8, 52, "Output"]
}, Open  ]],
Cell[155339, 3719, 149, 2, 30, "Input"],
Cell[CellGroupData[{
Cell[155513, 3725, 289, 7, 30, "Input"],
Cell[155805, 3734, 151, 3, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[155993, 3742, 96, 1, 49, "Subsection"],
Cell[156092, 3745, 466, 12, 52, "Input"],
Cell[CellGroupData[{
Cell[156583, 3761, 2539, 57, 232, "Code"],
Cell[159125, 3820, 3783, 91, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162945, 3916, 617, 15, 52, "Input"],
Cell[163565, 3933, 544, 10, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164146, 3948, 4399, 100, 373, "Code"],
Cell[168548, 4050, 7598, 178, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176183, 4233, 3105, 68, 413, "Code"],
Cell[179291, 4303, 1393, 33, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180721, 4341, 3227, 74, 473, "Code"],
Cell[183951, 4417, 1315, 23, 70, "Output"]
}, Open  ]],
Cell[185281, 4443, 328, 7, 52, "Input"],
Cell[185612, 4452, 162, 3, 30, "Text",
 CounterIncrements->"slideRPI"],
Cell[185777, 4457, 162, 3, 30, "Text",
 CounterIncrements->"slideRPI"],
Cell[185942, 4462, 162, 3, 30, "Text",
 CounterIncrements->"slideRPI"],
Cell[CellGroupData[{
Cell[186129, 4469, 2397, 58, 192, "Input"],
Cell[188529, 4529, 953, 23, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189519, 4557, 490, 12, 52, "Input"],
Cell[190012, 4571, 151, 3, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190200, 4579, 412, 10, 30, "Input"],
Cell[190615, 4591, 425, 12, 30, "Output"]
}, Open  ]],
Cell[191055, 4606, 221, 5, 30, "Input"],
Cell[191279, 4613, 205, 4, 30, "Input"],
Cell[191487, 4619, 44, 1, 1, "PageBreak",
 PageBreakBelow->True],
Cell[191534, 4622, 162, 3, 30, "Text",
 CounterIncrements->"slideRPI"],
Cell[191699, 4627, 162, 3, 30, "Text",
 CounterIncrements->"slideRPI"],
Cell[191864, 4632, 162, 3, 30, "Text",
 CounterIncrements->"slideRPI"],
Cell[192029, 4637, 44, 1, 1, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[192098, 4642, 309, 9, 30, "Input"],
Cell[192410, 4653, 251, 7, 30, "Output"]
}, Open  ]],
Cell[192676, 4663, 44, 1, 1, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[192745, 4668, 632, 14, 92, "Input"],
Cell[193380, 4684, 642, 16, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194059, 4705, 334, 8, 30, "Input"],
Cell[194396, 4715, 180, 2, 30, "Output"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[194637, 4724, 97, 1, 56, "Section"],
Cell[CellGroupData[{
Cell[194759, 4729, 2146, 51, 393, "Code"],
Cell[196908, 4782, 2510, 65, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199455, 4852, 7338, 155, 953, "Code"],
Cell[206796, 5009, 1664, 34, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208497, 5048, 240, 6, 30, "Input"],
Cell[208740, 5056, 61513, 1482, 48, "Output"]
}, Open  ]],
Cell[270268, 6541, 118, 1, 30, "Text"],
Cell[270389, 6544, 2943, 65, 413, "Code"],
Cell[273335, 6611, 44, 1, 1, "PageBreak",
 PageBreakBelow->True]
}, Closed]],
Cell[CellGroupData[{
Cell[273416, 6617, 111, 1, 56, "Section"],
Cell[273530, 6620, 280, 6, 52, "Input"],
Cell[273813, 6628, 264, 6, 30, "Input"],
Cell[CellGroupData[{
Cell[274102, 6638, 327, 7, 30, "Input"],
Cell[274432, 6647, 159, 2, 30, "Output"]
}, Open  ]],
Cell[274606, 6652, 457, 8, 30, "Input"],
Cell[CellGroupData[{
Cell[275088, 6664, 353, 8, 30, "Input"],
Cell[275444, 6674, 180, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275661, 6681, 186, 3, 30, "Input"],
Cell[275850, 6686, 101, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275988, 6692, 29237, 619, 3013, "Code"],
Cell[305228, 7313, 11733, 278, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316998, 7596, 4806, 111, 553, "Code"],
Cell[321807, 7709, 2520, 64, 70, "Output"]
}, Open  ]],
Cell[324342, 7776, 3386, 87, 1398, "Text"],
Cell[327731, 7865, 485, 13, 52, "Input"],
Cell[CellGroupData[{
Cell[328241, 7882, 302, 8, 30, "Input"],
Cell[328546, 7892, 33541, 892, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362124, 8789, 215, 5, 30, "Input"],
Cell[362342, 8796, 74, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362453, 8802, 8385, 185, 833, "Code"],
Cell[370841, 8989, 3789, 98, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374667, 9092, 383, 10, 30, "Input"],
Cell[375053, 9104, 428, 11, 30, "Output"]
}, Open  ]],
Cell[375496, 9118, 1767, 45, 173, "Code"],
Cell[377266, 9165, 1832, 45, 193, "Code"],
Cell[CellGroupData[{
Cell[379123, 9214, 582, 15, 72, "Input"],
Cell[379708, 9231, 97, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[379842, 9238, 721, 20, 92, "Input"],
Cell[380566, 9260, 97, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[380700, 9267, 244, 6, 30, "Input"],
Cell[380947, 9275, 111, 2, 30, "Output"]
}, Open  ]],
Cell[381073, 9280, 4986, 109, 453, "Code"],
Cell[386062, 9391, 5035, 109, 473, "Code"],
Cell[CellGroupData[{
Cell[391122, 9504, 2557, 66, 93, "Code"],
Cell[393682, 9572, 930, 22, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394649, 9599, 2092, 49, 133, "Code"],
Cell[396744, 9650, 1336, 29, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[398117, 9684, 2676, 69, 193, "Code"],
Cell[400796, 9755, 1674, 32, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402507, 9792, 2697, 67, 192, "Input"],
Cell[405207, 9861, 739, 21, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405983, 9887, 1096, 24, 73, "Code"],
Cell[407082, 9913, 1515, 29, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408634, 9947, 215, 4, 73, "Code"],
Cell[408852, 9953, 309, 4, 70, "Output"],
Cell[409164, 9959, 310, 4, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409511, 9968, 4314, 102, 252, "Code"],
Cell[413828, 10072, 1855, 38, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[415720, 10115, 4144, 96, 252, "Code"],
Cell[419867, 10213, 1574, 33, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421478, 10251, 1096, 24, 67, "Code"],
Cell[422577, 10277, 1143, 24, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423757, 10306, 971, 22, 133, "Code"],
Cell[424731, 10330, 780, 19, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425548, 10354, 967, 22, 133, "Code"],
Cell[426518, 10378, 753, 19, 70, "Output"]
}, Open  ]],
Cell[427286, 10400, 385, 8, 52, "Input"],
Cell[CellGroupData[{
Cell[427696, 10412, 114, 2, 30, "Input"],
Cell[427813, 10416, 125, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427975, 10423, 1311, 25, 92, "Input"],
Cell[429289, 10450, 961, 21, 42, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[430287, 10476, 202, 3, 30, "Input"],
Cell[430492, 10481, 1369, 27, 152, "Output"]
}, Open  ]],
Cell[431876, 10511, 105, 1, 30, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[432030, 10518, 104, 1, 46, "Subchapter"],
Cell[CellGroupData[{
Cell[432159, 10523, 151, 2, 63, "Section"],
Cell[CellGroupData[{
Cell[432335, 10529, 1309, 27, 133, "Code"],
Cell[433647, 10558, 1246, 26, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434930, 10589, 4527, 105, 253, "Code"],
Cell[439460, 10696, 1979, 40, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[441476, 10741, 4354, 99, 253, "Code"],
Cell[445833, 10842, 1720, 36, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447590, 10883, 3104, 66, 193, "Code"],
Cell[450697, 10951, 1071, 24, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[451805, 10980, 3316, 68, 193, "Code"],
Cell[455124, 11050, 1162, 26, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[456323, 11081, 1697, 41, 153, "Code"],
Cell[458023, 11124, 764, 20, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[458824, 11149, 1668, 40, 153, "Code"],
Cell[460495, 11191, 763, 20, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[461295, 11216, 1942, 38, 193, "Code"],
Cell[463240, 11256, 943, 28, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[464232, 11290, 101, 1, 49, "Section"],
Cell[464336, 11293, 98, 1, 43, "Subsection"],
Cell[CellGroupData[{
Cell[464459, 11298, 97, 1, 35, "Subsection"],
Cell[CellGroupData[{
Cell[464581, 11303, 314, 8, 31, "Input"],
Cell[464898, 11313, 80, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465015, 11319, 232, 5, 31, "Input"],
Cell[465250, 11326, 86, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465373, 11332, 249, 7, 31, "Input"],
Cell[465625, 11341, 74, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[465736, 11347, 363, 9, 52, "Input"],
Cell[466102, 11358, 97, 1, 31, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[466236, 11364, 17483, 329, 1153, "Code"],
Cell[483722, 11695, 3615, 69, 47, "Output"]
}, Open  ]]
}, Open  ]],
Cell[487364, 11768, 197, 3, 43, "Subsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[487598, 11776, 151, 2, 63, "Section"],
Cell[CellGroupData[{
Cell[487774, 11782, 29898, 633, 2913, "Code"],
Cell[517675, 12417, 10946, 272, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[528670, 12695, 148, 2, 49, "Section"],
Cell[528821, 12699, 11911, 276, 1113, "Code"],
Cell[540735, 12977, 924, 22, 173, "Code"],
Cell[541662, 13001, 883, 20, 153, "Code"],
Cell[542548, 13023, 2107, 43, 133, "Code"],
Cell[544658, 13068, 2604, 59, 313, "Code"],
Cell[CellGroupData[{
Cell[547287, 13131, 13044, 271, 1393, "Code"],
Cell[560334, 13404, 41064, 1089, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[601447, 14499, 108, 1, 49, "Section"],
Cell[601558, 14502, 3600, 79, 333, "Code"],
Cell[605161, 14583, 74307, 1705, 41, InheritFromParent],
Cell[679471, 16290, 3167, 70, 293, "Code"],
Cell[682641, 16362, 23247, 540, 41, InheritFromParent]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
